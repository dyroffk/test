/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "//guardtower.vidyard.dev/assets/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 13);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ../~/script-loader/addScript.js ***!
  \***************************************/
/***/ (function(module, exports) {

eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9zY3JpcHQtbG9hZGVyL2FkZFNjcmlwdC5qcz83YWFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHNyYykge1xyXG5cdGlmICh0eXBlb2YgZXhlY1NjcmlwdCAhPT0gXCJ1bmRlZmluZWRcIilcclxuXHRcdGV4ZWNTY3JpcHQoc3JjKTtcclxuXHRlbHNlXHJcblx0XHRldmFsLmNhbGwobnVsbCwgc3JjKTtcclxufVxyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3NjcmlwdC1sb2FkZXIvYWRkU2NyaXB0LmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ./integrations/adobe/vidyard_main.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(/*! jquery */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__video_player__ = __webpack_require__(/*! ./video_player */ 5);\n/*globals Configuration, Vidyard*/\n// We require a Configuration object in the global namespace:\n//  window.Configuration = {\n//    PUBLISHER: 'vidyard',\n//    TRACKING_SERVER: 'cdegroot.d1.sc.omtrdc.net',\n//    HEARTBEAT_TRACKING_SERVER: 'cdegroot.d1.hb.omtrdc.net',\n//    MCID: '7BE808E55293DD780A490D4D@AdobeOrg',\n//    NAMESPACE: 'cdegroot',\n//    CHANNEL: 'vidyard',\n//    RSID: 'cdgvidyard'\n//  };\n//\n// adobe Libraries are located: https://github.com/adobe-Marketing-Cloud/video-heartbeat/tree/master/sdks/js\n\n\n\n\nfunction setupOmniture(player) {\n  // Connect Adobe Omniture events to Vidyard Player callbacks\n  let chapter = -1;\n  let omniturePlayer;\n\n  player.on(\"ready\", function () {\n    omniturePlayer = new __WEBPACK_IMPORTED_MODULE_1__video_player__[\"a\" /* default */](player);\n    console.log(\"Created omniture player\");\n    \n    player.on(\"seek\", function () {\n      omniturePlayer._onSeekComplete();\n    });\n    player.on(\"beforeSeek\", function () {\n      omniturePlayer._onSeekStart();\n    });\n    player.on(\"pause\", function () {\n      omniturePlayer._onPause();\n    });\n    player.on(\"play\", function () {\n      if (chapter !== player.getCurrentChapter()) {\n        if (chapter === -1) {\n          omniturePlayer._startVideo();\n        }\n        omniturePlayer._onChapterStart();\n        chapter += 1;\n      }\n      omniturePlayer._onPlay();\n    });\n    player.on(\"playerComplete\", function () {\n      omniturePlayer._onComplete();\n      chapter = 0;\n    });\n    player.on(\"chapterComplete\", function () {\n      chapter = player.getCurrentChapter() - 1; //this isn't strictly necessary, but would correct if we got into an unusual state\n      omniturePlayer._onChapterComplete();\n    });\n  });\n}\n\n__WEBPACK_IMPORTED_MODULE_0_jquery___default()(() => {\n  // Initialize\n  let videos;\n  let isEmpty = true;\n\n  try {\n    videos = new Vidyard.players();\n  } catch (e) {\n    throw new Error(\"The Vidyard API must be loaded before this script can execute\");\n  }\n\n  for (let i in videos) {\n    if (videos.hasOwnProperty(i)) {\n      setupOmniture(videos[i]);\n      isEmpty = false;\n    }\n  }\n  if (isEmpty) {\n    console.warn(\"No Vidyard Players found. (include this script below player embed codes)\");\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbnRlZ3JhdGlvbnMvYWRvYmUvdmlkeWFyZF9tYWluLmpzP2JhNDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWxzIENvbmZpZ3VyYXRpb24sIFZpZHlhcmQqL1xuLy8gV2UgcmVxdWlyZSBhIENvbmZpZ3VyYXRpb24gb2JqZWN0IGluIHRoZSBnbG9iYWwgbmFtZXNwYWNlOlxuLy8gIHdpbmRvdy5Db25maWd1cmF0aW9uID0ge1xuLy8gICAgUFVCTElTSEVSOiAndmlkeWFyZCcsXG4vLyAgICBUUkFDS0lOR19TRVJWRVI6ICdjZGVncm9vdC5kMS5zYy5vbXRyZGMubmV0Jyxcbi8vICAgIEhFQVJUQkVBVF9UUkFDS0lOR19TRVJWRVI6ICdjZGVncm9vdC5kMS5oYi5vbXRyZGMubmV0Jyxcbi8vICAgIE1DSUQ6ICc3QkU4MDhFNTUyOTNERDc4MEE0OTBENERAQWRvYmVPcmcnLFxuLy8gICAgTkFNRVNQQUNFOiAnY2RlZ3Jvb3QnLFxuLy8gICAgQ0hBTk5FTDogJ3ZpZHlhcmQnLFxuLy8gICAgUlNJRDogJ2NkZ3ZpZHlhcmQnXG4vLyAgfTtcbi8vXG4vLyBhZG9iZSBMaWJyYXJpZXMgYXJlIGxvY2F0ZWQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS1NYXJrZXRpbmctQ2xvdWQvdmlkZW8taGVhcnRiZWF0L3RyZWUvbWFzdGVyL3Nka3MvanNcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBWaWRlb1BsYXllciBmcm9tICcuL3ZpZGVvX3BsYXllcic7XG5cbmZ1bmN0aW9uIHNldHVwT21uaXR1cmUocGxheWVyKSB7XG4gIC8vIENvbm5lY3QgQWRvYmUgT21uaXR1cmUgZXZlbnRzIHRvIFZpZHlhcmQgUGxheWVyIGNhbGxiYWNrc1xuICBsZXQgY2hhcHRlciA9IC0xO1xuICBsZXQgb21uaXR1cmVQbGF5ZXI7XG5cbiAgcGxheWVyLm9uKFwicmVhZHlcIiwgZnVuY3Rpb24gKCkge1xuICAgIG9tbml0dXJlUGxheWVyID0gbmV3IFZpZGVvUGxheWVyKHBsYXllcik7XG4gICAgY29uc29sZS5sb2coXCJDcmVhdGVkIG9tbml0dXJlIHBsYXllclwiKTtcbiAgICBcbiAgICBwbGF5ZXIub24oXCJzZWVrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIG9tbml0dXJlUGxheWVyLl9vblNlZWtDb21wbGV0ZSgpO1xuICAgIH0pO1xuICAgIHBsYXllci5vbihcImJlZm9yZVNlZWtcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgb21uaXR1cmVQbGF5ZXIuX29uU2Vla1N0YXJ0KCk7XG4gICAgfSk7XG4gICAgcGxheWVyLm9uKFwicGF1c2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgb21uaXR1cmVQbGF5ZXIuX29uUGF1c2UoKTtcbiAgICB9KTtcbiAgICBwbGF5ZXIub24oXCJwbGF5XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChjaGFwdGVyICE9PSBwbGF5ZXIuZ2V0Q3VycmVudENoYXB0ZXIoKSkge1xuICAgICAgICBpZiAoY2hhcHRlciA9PT0gLTEpIHtcbiAgICAgICAgICBvbW5pdHVyZVBsYXllci5fc3RhcnRWaWRlbygpO1xuICAgICAgICB9XG4gICAgICAgIG9tbml0dXJlUGxheWVyLl9vbkNoYXB0ZXJTdGFydCgpO1xuICAgICAgICBjaGFwdGVyICs9IDE7XG4gICAgICB9XG4gICAgICBvbW5pdHVyZVBsYXllci5fb25QbGF5KCk7XG4gICAgfSk7XG4gICAgcGxheWVyLm9uKFwicGxheWVyQ29tcGxldGVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgb21uaXR1cmVQbGF5ZXIuX29uQ29tcGxldGUoKTtcbiAgICAgIGNoYXB0ZXIgPSAwO1xuICAgIH0pO1xuICAgIHBsYXllci5vbihcImNoYXB0ZXJDb21wbGV0ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGFwdGVyID0gcGxheWVyLmdldEN1cnJlbnRDaGFwdGVyKCkgLSAxOyAvL3RoaXMgaXNuJ3Qgc3RyaWN0bHkgbmVjZXNzYXJ5LCBidXQgd291bGQgY29ycmVjdCBpZiB3ZSBnb3QgaW50byBhbiB1bnVzdWFsIHN0YXRlXG4gICAgICBvbW5pdHVyZVBsYXllci5fb25DaGFwdGVyQ29tcGxldGUoKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbiQoKCkgPT4ge1xuICAvLyBJbml0aWFsaXplXG4gIGxldCB2aWRlb3M7XG4gIGxldCBpc0VtcHR5ID0gdHJ1ZTtcblxuICB0cnkge1xuICAgIHZpZGVvcyA9IG5ldyBWaWR5YXJkLnBsYXllcnMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBWaWR5YXJkIEFQSSBtdXN0IGJlIGxvYWRlZCBiZWZvcmUgdGhpcyBzY3JpcHQgY2FuIGV4ZWN1dGVcIik7XG4gIH1cblxuICBmb3IgKGxldCBpIGluIHZpZGVvcykge1xuICAgIGlmICh2aWRlb3MuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgIHNldHVwT21uaXR1cmUodmlkZW9zW2ldKTtcbiAgICAgIGlzRW1wdHkgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgaWYgKGlzRW1wdHkpIHtcbiAgICBjb25zb2xlLndhcm4oXCJObyBWaWR5YXJkIFBsYXllcnMgZm91bmQuIChpbmNsdWRlIHRoaXMgc2NyaXB0IGJlbG93IHBsYXllciBlbWJlZCBjb2RlcylcIik7XG4gIH1cbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9pbnRlZ3JhdGlvbnMvYWRvYmUvdmlkeWFyZF9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */
/* exports provided: default */
/* exports used: default */
/*!********************************************!*\
  !*** ./integrations/adobe/video_player.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__(/*! script-loader!./lib/visitor_api-2.4.0.js */ 12)\n__webpack_require__(/*! script-loader!./lib/app_measurement-2.3.0.unmin.js */ 18)\n//require('script-loader!./lib/app_measurement-2.4.0.js')\n__webpack_require__(/*! script-loader!./lib/video_heartbeat-2.0.2.min.js */ 11)\n\nconst ADB = window.ADB;\n\nconst MediaHeartbeat = ADB.va.MediaHeartbeat;\nconst MediaHeartbeatConfig = ADB.va.MediaHeartbeatConfig;\nconst MediaHeartbeatDelegate = ADB.va.MediaHeartbeatDelegate;\n\nclass VidyardMediaHeartbeatDelegate extends MediaHeartbeatDelegate {\n  constructor(player) {\n    super();\n    this._player = player;\n  }\n\n  getCurrentPlaybackTime() {\n    return this._player.getPlayhead();\n  }\n\n  getQoSObject() {\n    // Optional Quality of Service metrics can be sent to Adobe if available\n    // return MediaHeartbeat.createQoSObject(<bitrate>, <startuptime>, <fps>, <droppedFrames>);\n    return null;\n  }\n}\n\nclass VideoPlayer {\n\n  constructor(player) {\n    this.player = player;\n    this.playerName = player.metadata.name;\n    this.videoId = player.uuid;\n    this.streamType = ADB.va.ASSET_TYPE_VOD;\n    this.mediaHeartbeat = null;\n\n    this._videoLoaded = false;\n    this._videoInfo = null;\n\n    this.setupAdobe();\n  }\n\n  setupAdobe() {\n    const visitor = Visitor.getInstance(Configuration.MCID, {\n      trackingServer: Configuration.TRACKING_SERVER,\n      trackingServerSecure: Configuration.SECURE_TRACKING_SERVER || Configuration.TRACKING_SERVER,\n      marketingCloudServer: Configuration.TRACKING_SERVER,\n      marketingCloudServerSecure: Configuration.SECURE_TRACKING_SERVER || Configuration.TRACKING_SERVER,\n      cookieDomain: document.location.hostname,\n    });\n\n    // Media Heartbeat initialization & config\n    const mediaConfig = new MediaHeartbeatConfig();\n    mediaConfig.trackingServer = Configuration.HEARTBEAT_TRACKING_SERVER;\n    mediaConfig.playerName = 'VidyardPlayer';\n    mediaConfig.channel = Configuration.CHANNEL;\n    mediaConfig.appVersion = ADB.va.MediaHeartbeat.version();\n    mediaConfig.ssl = document.location.protocol === 'https:';\n    mediaConfig.ovp = 'Vidyard';    // Online Video Platform\n    mediaConfig.debugLogging = Configuration.DEBUG || false;\n\n    const appMeasurement = s_gi(Configuration.RSID);\n    appMeasurement.account = Configuration.RSID;\n    appMeasurement.trackingServer = Configuration.TRACKING_SERVER;\n    appMeasurement.trackingServerSecure = Configuration.SECURE_TRACKING_SERVER || Configuration.TRACKING_SERVER;\n    appMeasurement.visitorNamespace = Configuration.NAMESPACE;\n    appMeasurement.pageName = document.title || document.location.href;\n    appMeasurement.debugTracking = Configuration.DEBUG || false;\n\n    /*********  VISITOR ID SERVICE CONFIG - requires VisitorAPI.js *********/\n    appMeasurement.visitor = Visitor.getInstance(Configuration.MCID);\n\n    appMeasurement.t();      // Trigger page view\n\n    const mediaDelegate = new VidyardMediaHeartbeatDelegate(this);\n    this.mediaHeartbeat = new MediaHeartbeat(mediaDelegate, mediaConfig, appMeasurement);\n  }\n\n  destroy() {\n    if (this.player) {\n      this.player = null;\n    }\n    if (this.mediaHeartbeat) {\n      this.mediaHeartbeat = null;\n    }\n  }\n\n  getVideoInfo() {\n    this._videoInfo.playhead = this.getPlayhead();\n    return this._videoInfo;\n  }\n\n  getDuration() {\n    return this.player.metadata.length_in_seconds;\n  }\n\n  getChapterOffset(chapter) {\n    let sum = 0;\n    for (let i = 0; i < chapter; i++ ) {\n      sum += this.player.metadata.chapters_attributes[i].video_attributes.length_in_seconds;\n    }\n    return sum;\n  }\n\n  getPlayhead() {\n    const offset = this.getChapterOffset(this.player.getCurrentChapter());\n    return this.player.status.currentTime + offset;\n  }\n\n  getChapterInfo() {\n    const chapter = this.player.getCurrentChapter();\n    return MediaHeartbeat.createChapterObject(\n      this.player.metadata.chapters_attributes[chapter].video_attributes.name,\n      (chapter + 1),\n      this.player.metadata.chapters_attributes[chapter].video_attributes.length_in_seconds,\n      this.getChapterOffset(chapter)\n    );\n  }\n\n  _onPlay(e) {\n    if (!this._videoLoaded) {\n      this._startVideo();\n    }\n    this.mediaHeartbeat.trackPlay();\n  }\n\n  _startVideo() {\n    this._videoInfo = ADB.va.MediaHeartbeat.createMediaObject(\n        this.playerName,\n        this.videoId,\n        this.getDuration(),\n        this.streamType);\n\n    //Start Session\n    this.mediaHeartbeat.trackSessionStart(this._videoInfo, null);\n    this._videoLoaded = true;\n  }\n\n  _onPause() {\n    this.mediaHeartbeat.trackPause();\n  }\n\n  _onSeekStart() {\n    this.mediaHeartbeat.trackEvent(MediaHeartbeat.Event.SeekStart);\n  }\n\n  _onSeekComplete() {\n    this.mediaHeartbeat.trackEvent(MediaHeartbeat.Event.SeekComplete);\n  }\n\n  _onComplete() {\n    this.mediaHeartbeat.trackComplete();\n    this.mediaHeartbeat.trackSessionEnd();\n    this._isLoaded = false;\n  }\n\n  _onChapterStart() {\n    this.mediaHeartbeat.trackEvent(MediaHeartbeat.Event.ChapterStart,\n       this.getChapterInfo(), null);\n  }\n\n  _onChapterComplete() {\n    this.mediaHeartbeat.trackEvent(MediaHeartbeat.Event.ChapterComplete);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = VideoPlayer;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/* unknown exports provided */
/* exports used: default */
/*!**********************************!*\
  !*** ../~/jquery/dist/jquery.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v1.11.2\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-17T15:27Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper window is present,\n\t\t// execute the factory and get jQuery\n\t\t// For environments that do not inherently posses a window with a document\n\t\t// (such as Node.js), expose a jQuery-making factory as module.exports\n\t\t// This accentuates the need for the creation of a real window\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\n\nvar deletedIds = [];\n\nvar slice = deletedIds.slice;\n\nvar concat = deletedIds.concat;\n\nvar push = deletedIds.push;\n\nvar indexOf = deletedIds.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"1.11.2\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1, IE<9\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: deletedIds.sort,\n\tsplice: deletedIds.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar src, copyIsArray, copy, name, options, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray || function( obj ) {\n\t\treturn jQuery.type(obj) === \"array\";\n\t},\n\n\tisWindow: function( obj ) {\n\t\t/* jshint eqeqeq: false */\n\t\treturn obj != null && obj == obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\treturn !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Must be an Object.\n\t\t// Because of IE, we also have to check the presence of the constructor property.\n\t\t// Make sure that DOM nodes and window objects don't pass through, as well\n\t\tif ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t// Not own constructor property must be Object\n\t\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\t// IE8,9 Will throw exceptions on certain host objects #9897\n\t\t\treturn false;\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Handle iteration over inherited properties before own properties.\n\t\tif ( support.ownLast ) {\n\t\t\tfor ( key in obj ) {\n\t\t\t\treturn hasOwn.call( obj, key );\n\t\t\t}\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\t// Workarounds based on findings by Jim Driscoll\n\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n\tglobalEval: function( data ) {\n\t\tif ( data && jQuery.trim( data ) ) {\n\t\t\t// We use execScript on Internet Explorer\n\t\t\t// We use an anonymous function so that context is window\n\t\t\t// rather than jQuery in Firefox\n\t\t\t( window.execScript || function( data ) {\n\t\t\t\twindow[ \"eval\" ].call( window, data );\n\t\t\t} )( data );\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1, IE<9\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\tvar len;\n\n\t\tif ( arr ) {\n\t\t\tif ( indexOf ) {\n\t\t\t\treturn indexOf.call( arr, elem, i );\n\t\t\t}\n\n\t\t\tlen = arr.length;\n\t\t\ti = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t// Skip accessing in sparse arrays\n\t\t\t\tif ( i in arr && arr[ i ] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\twhile ( j < len ) {\n\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)\n\t\tif ( len !== len ) {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar args, proxy, tmp;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: function() {\n\t\treturn +( new Date() );\n\t},\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\tnodeType = context.nodeType;\n\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\tif ( !seed && documentIsHTML ) {\n\n\t\t// Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType !== 1 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\tparent = doc.defaultView;\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Support tests\n\t---------------------------------------------------------------------- */\n\tdocumentIsHTML = !isXML( doc );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tret = [],\n\t\t\tself = this,\n\t\t\tlen = self.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id !== match[2] ) {\n\t\t\t\t\t\t\treturn rootjQuery.find( selector );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\tcur = elem[ dir ];\n\n\t\twhile ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\n\t\t\tif ( cur.nodeType === 1 ) {\n\t\t\t\tmatched.push( cur );\n\t\t\t}\n\t\t\tcur = cur[dir];\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar r = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tr.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar i,\n\t\t\ttargets = jQuery( target, this ),\n\t\t\tlen = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn jQuery.inArray( this[0], jQuery( elem ) );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn jQuery.inArray(\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[0] : elem, this );\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\tdo {\n\t\tcur = cur[ dir ];\n\t} while ( cur && cur.nodeType !== 1 );\n\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn jQuery.nodeName( elem, \"iframe\" ) ?\n\t\t\telem.contentDocument || elem.contentWindow.document :\n\t\t\tjQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar ret = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tret = jQuery.filter( selector, ret );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tret = jQuery.unique( ret );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tret = ret.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\t\t// Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\n\t\t\t\t\t} else if ( !(--remaining) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\tif ( !document.body ) {\n\t\t\treturn setTimeout( jQuery.ready );\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * Clean-up method for dom ready events\n */\nfunction detach() {\n\tif ( document.addEventListener ) {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\t\twindow.removeEventListener( \"load\", completed, false );\n\n\t} else {\n\t\tdocument.detachEvent( \"onreadystatechange\", completed );\n\t\twindow.detachEvent( \"onload\", completed );\n\t}\n}\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\t// readyState === \"complete\" is good enough for us to call the dom ready in oldIE\n\tif ( document.addEventListener || event.type === \"load\" || document.readyState === \"complete\" ) {\n\t\tdetach();\n\t\tjQuery.ready();\n\t}\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t// Standards-based browsers support DOMContentLoaded\n\t\t} else if ( document.addEventListener ) {\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\n\t\t// If IE event model is used\n\t\t} else {\n\t\t\t// Ensure firing before onload, maybe late but safe also for iframes\n\t\t\tdocument.attachEvent( \"onreadystatechange\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.attachEvent( \"onload\", completed );\n\n\t\t\t// If IE and not a frame\n\t\t\t// continually check to see if the document is ready\n\t\t\tvar top = false;\n\n\t\t\ttry {\n\t\t\t\ttop = window.frameElement == null && document.documentElement;\n\t\t\t} catch(e) {}\n\n\t\t\tif ( top && top.doScroll ) {\n\t\t\t\t(function doScrollCheck() {\n\t\t\t\t\tif ( !jQuery.isReady ) {\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Use the trick by Diego Perini\n\t\t\t\t\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\t\t\t\t\ttop.doScroll(\"left\");\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\treturn setTimeout( doScrollCheck, 50 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// detach all dom ready events\n\t\t\t\t\t\tdetach();\n\n\t\t\t\t\t\t// and execute any waiting functions\n\t\t\t\t\t\tjQuery.ready();\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n\nvar strundefined = typeof undefined;\n\n\n\n// Support: IE<9\n// Iteration over object's inherited properties before its own\nvar i;\nfor ( i in jQuery( support ) ) {\n\tbreak;\n}\nsupport.ownLast = i !== \"0\";\n\n// Note: most support tests are defined in their respective modules.\n// false until the test is run\nsupport.inlineBlockNeedsLayout = false;\n\n// Execute ASAP in case we need to set body.style.zoom\njQuery(function() {\n\t// Minified: var a,b,c,d\n\tvar val, div, body, container;\n\n\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\tif ( !body || !body.style ) {\n\t\t// Return for frameset docs that don't have a body\n\t\treturn;\n\t}\n\n\t// Setup\n\tdiv = document.createElement( \"div\" );\n\tcontainer = document.createElement( \"div\" );\n\tcontainer.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n\tbody.appendChild( container ).appendChild( div );\n\n\tif ( typeof div.style.zoom !== strundefined ) {\n\t\t// Support: IE<8\n\t\t// Check if natively block-level elements act like inline-block\n\t\t// elements when setting their display to 'inline' and giving\n\t\t// them layout\n\t\tdiv.style.cssText = \"display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1\";\n\n\t\tsupport.inlineBlockNeedsLayout = val = div.offsetWidth === 3;\n\t\tif ( val ) {\n\t\t\t// Prevent IE 6 from affecting layout for positioned elements #11048\n\t\t\t// Prevent IE from shrinking the body in IE 7 mode #12869\n\t\t\t// Support: IE<8\n\t\t\tbody.style.zoom = 1;\n\t\t}\n\t}\n\n\tbody.removeChild( container );\n});\n\n\n\n\n(function() {\n\tvar div = document.createElement( \"div\" );\n\n\t// Execute the test only if not already executed in another module.\n\tif (support.deleteExpando == null) {\n\t\t// Support: IE<9\n\t\tsupport.deleteExpando = true;\n\t\ttry {\n\t\t\tdelete div.test;\n\t\t} catch( e ) {\n\t\t\tsupport.deleteExpando = false;\n\t\t}\n\t}\n\n\t// Null elements to avoid leaks in IE.\n\tdiv = null;\n})();\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( elem ) {\n\tvar noData = jQuery.noData[ (elem.nodeName + \" \").toLowerCase() ],\n\t\tnodeType = +elem.nodeType || 1;\n\n\t// Do not set data on non-element DOM nodes because it will not be cleared (#8335).\n\treturn nodeType !== 1 && nodeType !== 9 ?\n\t\tfalse :\n\n\t\t// Nodes accept data unless otherwise specified; rejection can be conditional\n\t\t!noData || noData !== true && elem.getAttribute(\"classid\") === noData;\n};\n\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\n\t\tvar name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tjQuery.data( elem, key, data );\n\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// checks a cache object for emptiness\nfunction isEmptyDataObject( obj ) {\n\tvar name;\n\tfor ( name in obj ) {\n\n\t\t// if the public data object is empty, the private is still empty\n\t\tif ( name === \"data\" && jQuery.isEmptyObject( obj[name] ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( name !== \"toJSON\" ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction internalData( elem, name, data, pvt /* Internal Use Only */ ) {\n\tif ( !jQuery.acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar ret, thisCache,\n\t\tinternalKey = jQuery.expando,\n\n\t\t// We have to handle DOM nodes and JS objects differently because IE6-7\n\t\t// can't GC object references properly across the DOM-JS boundary\n\t\tisNode = elem.nodeType,\n\n\t\t// Only DOM nodes need the global jQuery cache; JS object data is\n\t\t// attached directly to the object so GC can occur automatically\n\t\tcache = isNode ? jQuery.cache : elem,\n\n\t\t// Only defining an ID for JS objects if its cache already exists allows\n\t\t// the code to shortcut on the same path as a DOM node with no cache\n\t\tid = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\n\n\t// Avoid doing any more work than we need to when trying to get data on an\n\t// object that has no data at all\n\tif ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === \"string\" ) {\n\t\treturn;\n\t}\n\n\tif ( !id ) {\n\t\t// Only DOM nodes need a new unique ID for each element since their data\n\t\t// ends up in the global cache\n\t\tif ( isNode ) {\n\t\t\tid = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;\n\t\t} else {\n\t\t\tid = internalKey;\n\t\t}\n\t}\n\n\tif ( !cache[ id ] ) {\n\t\t// Avoid exposing jQuery metadata on plain JS objects when the object\n\t\t// is serialized using JSON.stringify\n\t\tcache[ id ] = isNode ? {} : { toJSON: jQuery.noop };\n\t}\n\n\t// An object can be passed to jQuery.data instead of a key/value pair; this gets\n\t// shallow copied over onto the existing cache\n\tif ( typeof name === \"object\" || typeof name === \"function\" ) {\n\t\tif ( pvt ) {\n\t\t\tcache[ id ] = jQuery.extend( cache[ id ], name );\n\t\t} else {\n\t\t\tcache[ id ].data = jQuery.extend( cache[ id ].data, name );\n\t\t}\n\t}\n\n\tthisCache = cache[ id ];\n\n\t// jQuery data() is stored in a separate object inside the object's internal data\n\t// cache in order to avoid key collisions between internal data and user-defined\n\t// data.\n\tif ( !pvt ) {\n\t\tif ( !thisCache.data ) {\n\t\t\tthisCache.data = {};\n\t\t}\n\n\t\tthisCache = thisCache.data;\n\t}\n\n\tif ( data !== undefined ) {\n\t\tthisCache[ jQuery.camelCase( name ) ] = data;\n\t}\n\n\t// Check for both converted-to-camel and non-converted data property names\n\t// If a data property was specified\n\tif ( typeof name === \"string\" ) {\n\n\t\t// First Try to find as-is property data\n\t\tret = thisCache[ name ];\n\n\t\t// Test for null|undefined property data\n\t\tif ( ret == null ) {\n\n\t\t\t// Try to find the camelCased property\n\t\t\tret = thisCache[ jQuery.camelCase( name ) ];\n\t\t}\n\t} else {\n\t\tret = thisCache;\n\t}\n\n\treturn ret;\n}\n\nfunction internalRemoveData( elem, name, pvt ) {\n\tif ( !jQuery.acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar thisCache, i,\n\t\tisNode = elem.nodeType,\n\n\t\t// See jQuery.data for more information\n\t\tcache = isNode ? jQuery.cache : elem,\n\t\tid = isNode ? elem[ jQuery.expando ] : jQuery.expando;\n\n\t// If there is already no cache entry for this object, there is no\n\t// purpose in continuing\n\tif ( !cache[ id ] ) {\n\t\treturn;\n\t}\n\n\tif ( name ) {\n\n\t\tthisCache = pvt ? cache[ id ] : cache[ id ].data;\n\n\t\tif ( thisCache ) {\n\n\t\t\t// Support array or space separated string names for data keys\n\t\t\tif ( !jQuery.isArray( name ) ) {\n\n\t\t\t\t// try the string as a key before any manipulation\n\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\tname = [ name ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// split the camel cased version by spaces unless a key with the spaces exists\n\t\t\t\t\tname = jQuery.camelCase( name );\n\t\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\t\tname = [ name ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = name.split(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = name.concat( jQuery.map( name, jQuery.camelCase ) );\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete thisCache[ name[i] ];\n\t\t\t}\n\n\t\t\t// If there is no data left in the cache, we want to continue\n\t\t\t// and let the cache object itself get destroyed\n\t\t\tif ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t// See jQuery.data for more information\n\tif ( !pvt ) {\n\t\tdelete cache[ id ].data;\n\n\t\t// Don't destroy the parent cache unless the internal data object\n\t\t// had been the only thing left in it\n\t\tif ( !isEmptyDataObject( cache[ id ] ) ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Destroy the cache\n\tif ( isNode ) {\n\t\tjQuery.cleanData( [ elem ], true );\n\n\t// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\n\t/* jshint eqeqeq: false */\n\t} else if ( support.deleteExpando || cache != cache.window ) {\n\t\t/* jshint eqeqeq: true */\n\t\tdelete cache[ id ];\n\n\t// When all else fails, null\n\t} else {\n\t\tcache[ id ] = null;\n\t}\n}\n\njQuery.extend({\n\tcache: {},\n\n\t// The following elements (space-suffixed to avoid Object.prototype collisions)\n\t// throw uncatchable exceptions if you attempt to set expando properties\n\tnoData: {\n\t\t\"applet \": true,\n\t\t\"embed \": true,\n\t\t// ...but Flash objects (which have this classid) *can* handle expandos\n\t\t\"object \": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"\n\t},\n\n\thasData: function( elem ) {\n\t\telem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\n\t\treturn !!elem && !isEmptyDataObject( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name );\n\t},\n\n\t// For internal use only.\n\t_data: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data, true );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name, true );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[0],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Special expections of .data basically thwart jQuery.access,\n\t\t// so implement the relevant behavior ourselves\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = jQuery.data( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tjQuery._data( elem, \"parsedAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tjQuery.data( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn arguments.length > 1 ?\n\n\t\t\t// Sets one value\n\t\t\tthis.each(function() {\n\t\t\t\tjQuery.data( this, key, value );\n\t\t\t}) :\n\n\t\t\t// Gets one value\n\t\t\t// Try to fetch any internally stored data first\n\t\t\telem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeData( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = jQuery._data( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray(data) ) {\n\t\t\t\t\tqueue = jQuery._data( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn jQuery._data( elem, key ) || jQuery._data( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tjQuery._removeData( elem, type + \"queue\" );\n\t\t\t\tjQuery._removeData( elem, key );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlength = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlength ? fn( elems[0], key ) : emptyGet;\n};\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\t// Minified: var a,b,c\n\tvar input = document.createElement( \"input\" ),\n\t\tdiv = document.createElement( \"div\" ),\n\t\tfragment = document.createDocumentFragment();\n\n\t// Setup\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\n\t// IE strips leading whitespace when .innerHTML is used\n\tsupport.leadingWhitespace = div.firstChild.nodeType === 3;\n\n\t// Make sure that tbody elements aren't automatically inserted\n\t// IE will insert them into empty tables\n\tsupport.tbody = !div.getElementsByTagName( \"tbody\" ).length;\n\n\t// Make sure that link elements get serialized correctly by innerHTML\n\t// This requires a wrapper element in IE\n\tsupport.htmlSerialize = !!div.getElementsByTagName( \"link\" ).length;\n\n\t// Makes sure cloning an html5 element does not cause problems\n\t// Where outerHTML is undefined, this still works\n\tsupport.html5Clone =\n\t\tdocument.createElement( \"nav\" ).cloneNode( true ).outerHTML !== \"<:nav></:nav>\";\n\n\t// Check if a disconnected checkbox will retain its checked\n\t// value of true after appended to the DOM (IE6/7)\n\tinput.type = \"checkbox\";\n\tinput.checked = true;\n\tfragment.appendChild( input );\n\tsupport.appendChecked = input.checked;\n\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t// Support: IE6-IE11+\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tfragment.appendChild( div );\n\tdiv.innerHTML = \"<input type='radio' checked='checked' name='t'/>\";\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<9\n\t// Opera does not clone events (and typeof div.attachEvent === undefined).\n\t// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()\n\tsupport.noCloneEvent = true;\n\tif ( div.attachEvent ) {\n\t\tdiv.attachEvent( \"onclick\", function() {\n\t\t\tsupport.noCloneEvent = false;\n\t\t});\n\n\t\tdiv.cloneNode( true ).click();\n\t}\n\n\t// Execute the test only if not already executed in another module.\n\tif (support.deleteExpando == null) {\n\t\t// Support: IE<9\n\t\tsupport.deleteExpando = true;\n\t\ttry {\n\t\t\tdelete div.test;\n\t\t} catch( e ) {\n\t\t\tsupport.deleteExpando = false;\n\t\t}\n\t}\n})();\n\n\n(function() {\n\tvar i, eventName,\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Support: IE<9 (lack submit/change bubble), Firefox 23+ (lack focusin event)\n\tfor ( i in { submit: true, change: true, focusin: true }) {\n\t\teventName = \"on\" + i;\n\n\t\tif ( !(support[ i + \"Bubbles\" ] = eventName in window) ) {\n\t\t\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n\t\t\tdiv.setAttribute( eventName, \"t\" );\n\t\t\tsupport[ i + \"Bubbles\" ] = div.attributes[ eventName ].expando === false;\n\t\t}\n\t}\n\n\t// Null elements to avoid leaks in IE.\n\tdiv = null;\n})();\n\n\nvar rformElems = /^(?:input|select|textarea)$/i,\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\t\tvar tmp, events, t, handleObjIn,\n\t\t\tspecial, eventHandle, handleObj,\n\t\t\thandlers, type, namespaces, origType,\n\t\t\telemData = jQuery._data( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener/attachEvent if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\n\t\t\t\t\t} else if ( elem.attachEvent ) {\n\t\t\t\t\t\telem.attachEvent( \"on\" + type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\tvar j, handleObj, tmp,\n\t\t\torigCount, t, events,\n\t\t\tspecial, handlers, type,\n\t\t\tnamespaces, origType,\n\t\t\telemData = jQuery.hasData( elem ) && jQuery._data( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\n\t\t\t// removeData also checks for emptiness and clears the expando if empty\n\t\t\t// so use it instead of delete\n\t\t\tjQuery._removeData( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\tvar handle, ontype, cur,\n\t\t\tbubbleType, special, tmp, i,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] && jQuery._data( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Can't use an .isFunction() check here because IE6/7 fails that test.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\ttry {\n\t\t\t\t\t\telem[ type ]();\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t// IE<9 dies on focus/blur to hidden element (#1486,#12518)\n\t\t\t\t\t\t// only reproducible on winXP IE8 native, not IE9 in IE8 mode\n\t\t\t\t\t}\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, ret, handleObj, matched, j,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( jQuery._data( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar sel, handleObj, matches, i,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\t/* jshint eqeqeq: false */\n\t\t\tfor ( ; cur != this; cur = cur.parentNode || this ) {\n\t\t\t\t/* jshint eqeqeq: true */\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== \"click\") ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Fix target property (#1925)\n\t\tif ( !event.target ) {\n\t\t\tevent.target = originalEvent.srcElement || document;\n\t\t}\n\n\t\t// Support: Chrome 23+, Safari?\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)\n\t\tevent.metaKey = !!event.metaKey;\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar body, eventDoc, doc,\n\t\t\t\tbutton = original.button,\n\t\t\t\tfromElement = original.fromElement;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add relatedTarget, if necessary\n\t\t\tif ( !event.relatedTarget && fromElement ) {\n\t\t\t\tevent.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// If we error on focus to hidden element (#1486, #12518),\n\t\t\t\t\t\t// let .trigger() run the handlers\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( jQuery.nodeName( this, \"input\" ) && this.type === \"checkbox\" && this.click ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = document.removeEventListener ?\n\tfunction( elem, type, handle ) {\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle, false );\n\t\t}\n\t} :\n\tfunction( elem, type, handle ) {\n\t\tvar name = \"on\" + type;\n\n\t\tif ( elem.detachEvent ) {\n\n\t\t\t// #8545, #7054, preventing memory leaks for custom events in IE6-8\n\t\t\t// detachEvent needed property on element, by name of that event, to properly expose it to GC\n\t\t\tif ( typeof elem[ name ] === strundefined ) {\n\t\t\t\telem[ name ] = null;\n\t\t\t}\n\n\t\t\telem.detachEvent( name, handle );\n\t\t}\n\t};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: IE < 9, Android < 4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\t\tif ( !e ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If preventDefault exists, run it on the original event\n\t\tif ( e.preventDefault ) {\n\t\t\te.preventDefault();\n\n\t\t// Support: IE\n\t\t// Otherwise set the returnValue property of the original event to false\n\t\t} else {\n\t\t\te.returnValue = false;\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\t\tif ( !e ) {\n\t\t\treturn;\n\t\t}\n\t\t// If stopPropagation exists, run it on the original event\n\t\tif ( e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\n\t\t// Support: IE\n\t\t// Set the cancelBubble property of the original event to true\n\t\te.cancelBubble = true;\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// IE submit delegation\nif ( !support.submitBubbles ) {\n\n\tjQuery.event.special.submit = {\n\t\tsetup: function() {\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Lazy-add a submit handler when a descendant form may potentially be submitted\n\t\t\tjQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\n\t\t\t\t// Node name check avoids a VML-related crash in IE (#9807)\n\t\t\t\tvar elem = e.target,\n\t\t\t\t\tform = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ? elem.form : undefined;\n\t\t\t\tif ( form && !jQuery._data( form, \"submitBubbles\" ) ) {\n\t\t\t\t\tjQuery.event.add( form, \"submit._submit\", function( event ) {\n\t\t\t\t\t\tevent._submit_bubble = true;\n\t\t\t\t\t});\n\t\t\t\t\tjQuery._data( form, \"submitBubbles\", true );\n\t\t\t\t}\n\t\t\t});\n\t\t\t// return undefined since we don't need an event listener\n\t\t},\n\n\t\tpostDispatch: function( event ) {\n\t\t\t// If form was submitted by the user, bubble the event up the tree\n\t\t\tif ( event._submit_bubble ) {\n\t\t\t\tdelete event._submit_bubble;\n\t\t\t\tif ( this.parentNode && !event.isTrigger ) {\n\t\t\t\t\tjQuery.event.simulate( \"submit\", this.parentNode, event, true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n\t\t\tjQuery.event.remove( this, \"._submit\" );\n\t\t}\n\t};\n}\n\n// IE change delegation and checkbox/radio fix\nif ( !support.changeBubbles ) {\n\n\tjQuery.event.special.change = {\n\n\t\tsetup: function() {\n\n\t\t\tif ( rformElems.test( this.nodeName ) ) {\n\t\t\t\t// IE doesn't fire change on a check/radio until blur; trigger it on click\n\t\t\t\t// after a propertychange. Eat the blur-change in special.change.handle.\n\t\t\t\t// This still fires onchange a second time for check/radio after blur.\n\t\t\t\tif ( this.type === \"checkbox\" || this.type === \"radio\" ) {\n\t\t\t\t\tjQuery.event.add( this, \"propertychange._change\", function( event ) {\n\t\t\t\t\t\tif ( event.originalEvent.propertyName === \"checked\" ) {\n\t\t\t\t\t\t\tthis._just_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tjQuery.event.add( this, \"click._change\", function( event ) {\n\t\t\t\t\t\tif ( this._just_changed && !event.isTrigger ) {\n\t\t\t\t\t\t\tthis._just_changed = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Allow triggered, simulated change events (#11500)\n\t\t\t\t\t\tjQuery.event.simulate( \"change\", this, event, true );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Delegated event; lazy-add a change handler on descendant inputs\n\t\t\tjQuery.event.add( this, \"beforeactivate._change\", function( e ) {\n\t\t\t\tvar elem = e.target;\n\n\t\t\t\tif ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"changeBubbles\" ) ) {\n\t\t\t\t\tjQuery.event.add( elem, \"change._change\", function( event ) {\n\t\t\t\t\t\tif ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\n\t\t\t\t\t\t\tjQuery.event.simulate( \"change\", this.parentNode, event, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tjQuery._data( elem, \"changeBubbles\", true );\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\thandle: function( event ) {\n\t\t\tvar elem = event.target;\n\n\t\t\t// Swallow native change events from checkbox/radio, we already triggered them above\n\t\t\tif ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\") ) {\n\t\t\t\treturn event.handleObj.handler.apply( this, arguments );\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tjQuery.event.remove( this, \"._change\" );\n\n\t\t\treturn !rformElems.test( this.nodeName );\n\t\t}\n\t};\n}\n\n// Create \"bubbling\" focus and blur events\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = jQuery._data( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tjQuery._data( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = jQuery._data( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tjQuery._removeData( doc, fix );\n\t\t\t\t} else {\n\t\t\t\t\tjQuery._data( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar type, origFn;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nfunction createSafeFragment( document ) {\n\tvar list = nodeNames.split( \"|\" ),\n\t\tsafeFrag = document.createDocumentFragment();\n\n\tif ( safeFrag.createElement ) {\n\t\twhile ( list.length ) {\n\t\t\tsafeFrag.createElement(\n\t\t\t\tlist.pop()\n\t\t\t);\n\t\t}\n\t}\n\treturn safeFrag;\n}\n\nvar nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\n\t\t\"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n\trinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\n\trnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n\trleadingWhitespace = /^\\s+/,\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trtbody = /<tbody/i,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\t\tlegend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\n\t\tarea: [ 1, \"<map>\", \"</map>\" ],\n\t\tparam: [ 1, \"<object>\", \"</object>\" ],\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\tcol: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n\t\t// unless wrapped in a div with non-breaking characters in front of it.\n\t\t_default: support.htmlSerialize ? [ 0, \"\", \"\" ] : [ 1, \"X<div>\", \"</div>\"  ]\n\t},\n\tsafeFragment = createSafeFragment( document ),\n\tfragmentDiv = safeFragment.appendChild( document.createElement(\"div\") );\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\nfunction getAll( context, tag ) {\n\tvar elems, elem,\n\t\ti = 0,\n\t\tfound = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\tundefined;\n\n\tif ( !found ) {\n\t\tfor ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !tag || jQuery.nodeName( elem, tag ) ) {\n\t\t\t\tfound.push( elem );\n\t\t\t} else {\n\t\t\t\tjQuery.merge( found, getAll( elem, tag ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], found ) :\n\t\tfound;\n}\n\n// Used in buildFragment, fixes the defaultChecked property\nfunction fixDefaultChecked( elem ) {\n\tif ( rcheckableType.test( elem.type ) ) {\n\t\telem.defaultChecked = elem.checked;\n\t}\n}\n\n// Support: IE<8\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (jQuery.find.attr( elem, \"type\" ) !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\tif ( match ) {\n\t\telem.type = match[1];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar elem,\n\t\ti = 0;\n\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\tjQuery._data( elem, \"globalEval\", !refElements || jQuery._data( refElements[i], \"globalEval\" ) );\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\n\tif ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\n\t\treturn;\n\t}\n\n\tvar type, i, l,\n\t\toldData = jQuery._data( src ),\n\t\tcurData = jQuery._data( dest, oldData ),\n\t\tevents = oldData.events;\n\n\tif ( events ) {\n\t\tdelete curData.handle;\n\t\tcurData.events = {};\n\n\t\tfor ( type in events ) {\n\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// make the cloned public data object a copy from the original\n\tif ( curData.data ) {\n\t\tcurData.data = jQuery.extend( {}, curData.data );\n\t}\n}\n\nfunction fixCloneNodeIssues( src, dest ) {\n\tvar nodeName, e, data;\n\n\t// We do not need to do anything for non-Elements\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\tnodeName = dest.nodeName.toLowerCase();\n\n\t// IE6-8 copies events bound via attachEvent when using cloneNode.\n\tif ( !support.noCloneEvent && dest[ jQuery.expando ] ) {\n\t\tdata = jQuery._data( dest );\n\n\t\tfor ( e in data.events ) {\n\t\t\tjQuery.removeEvent( dest, e, data.handle );\n\t\t}\n\n\t\t// Event data gets referenced instead of copied if the expando gets copied too\n\t\tdest.removeAttribute( jQuery.expando );\n\t}\n\n\t// IE blanks contents when cloning scripts, and tries to evaluate newly-set text\n\tif ( nodeName === \"script\" && dest.text !== src.text ) {\n\t\tdisableScript( dest ).text = src.text;\n\t\trestoreScript( dest );\n\n\t// IE6-10 improperly clones children of object elements using classid.\n\t// IE10 throws NoModificationAllowedError if parent is null, #12132.\n\t} else if ( nodeName === \"object\" ) {\n\t\tif ( dest.parentNode ) {\n\t\t\tdest.outerHTML = src.outerHTML;\n\t\t}\n\n\t\t// This path appears unavoidable for IE9. When cloning an object\n\t\t// element in IE9, the outerHTML strategy above is not sufficient.\n\t\t// If the src has innerHTML and the destination does not,\n\t\t// copy the src.innerHTML into the dest.innerHTML. #10324\n\t\tif ( support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {\n\t\t\tdest.innerHTML = src.innerHTML;\n\t\t}\n\n\t} else if ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\t// IE6-8 fails to persist the checked state of a cloned checkbox\n\t\t// or radio button. Worse, IE6-7 fail to give the cloned element\n\t\t// a checked appearance if the defaultChecked value isn't also set\n\n\t\tdest.defaultChecked = dest.checked = src.checked;\n\n\t\t// IE6-7 get confused and end up setting the value of a cloned\n\t\t// checkbox/radio button to an empty string instead of \"on\"\n\t\tif ( dest.value !== src.value ) {\n\t\t\tdest.value = src.value;\n\t\t}\n\n\t// IE6-8 fails to return the selected option to the default selected\n\t// state when cloning options\n\t} else if ( nodeName === \"option\" ) {\n\t\tdest.defaultSelected = dest.selected = src.defaultSelected;\n\n\t// IE6-8 fails to set the defaultValue to the correct value when\n\t// cloning other types of input fields\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar destElements, node, clone, i, srcElements,\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\tif ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\n\t\t\tclone = elem.cloneNode( true );\n\n\t\t// IE<=8 does not properly clone detached, unknown element nodes\n\t\t} else {\n\t\t\tfragmentDiv.innerHTML = elem.outerHTML;\n\t\t\tfragmentDiv.removeChild( clone = fragmentDiv.firstChild );\n\t\t}\n\n\t\tif ( (!support.noCloneEvent || !support.noCloneChecked) &&\n\t\t\t\t(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\t// Fix all IE cloning issues\n\t\t\tfor ( i = 0; (node = srcElements[i]) != null; ++i ) {\n\t\t\t\t// Ensure that the destination node is not null; Fixes #9587\n\t\t\t\tif ( destElements[i] ) {\n\t\t\t\t\tfixCloneNodeIssues( node, destElements[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0; (node = srcElements[i]) != null; i++ ) {\n\t\t\t\t\tcloneCopyEvent( node, destElements[i] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\tdestElements = srcElements = node = null;\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar j, elem, contains,\n\t\t\ttmp, tag, tbody, wrap,\n\t\t\tl = elems.length,\n\n\t\t\t// Ensure a safe fragment\n\t\t\tsafe = createSafeFragment( context ),\n\n\t\t\tnodes = [],\n\t\t\ti = 0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || safe.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = (rtagName.exec( elem ) || [ \"\", \"\" ])[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\n\t\t\t\t\ttmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[2];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[0];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Manually add leading whitespace removed by IE\n\t\t\t\t\tif ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\n\t\t\t\t\t\tnodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\t\t\tif ( !support.tbody ) {\n\n\t\t\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\t\t\telem = tag === \"table\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\t\ttmp.firstChild :\n\n\t\t\t\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\t\t\t\twrap[1] === \"<table>\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\t\t\ttmp :\n\t\t\t\t\t\t\t\t0;\n\n\t\t\t\t\t\tj = elem && elem.childNodes.length;\n\t\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\t\tif ( jQuery.nodeName( (tbody = elem.childNodes[j]), \"tbody\" ) && !tbody.childNodes.length ) {\n\t\t\t\t\t\t\t\telem.removeChild( tbody );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Fix #12392 for WebKit and IE > 9\n\t\t\t\t\ttmp.textContent = \"\";\n\n\t\t\t\t\t// Fix #12392 for oldIE\n\t\t\t\t\twhile ( tmp.firstChild ) {\n\t\t\t\t\t\ttmp.removeChild( tmp.firstChild );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remember the top-level container for proper cleanup\n\t\t\t\t\ttmp = safe.lastChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fix #11356: Clear elements from fragment\n\t\tif ( tmp ) {\n\t\t\tsafe.removeChild( tmp );\n\t\t}\n\n\t\t// Reset defaultChecked for any radios and checkboxes\n\t\t// about to be appended to the DOM in IE 6/7 (#8060)\n\t\tif ( !support.appendChecked ) {\n\t\t\tjQuery.grep( getAll( nodes, \"input\" ), fixDefaultChecked );\n\t\t}\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( safe.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttmp = null;\n\n\t\treturn safe;\n\t},\n\n\tcleanData: function( elems, /* internal */ acceptData ) {\n\t\tvar elem, type, id, data,\n\t\t\ti = 0,\n\t\t\tinternalKey = jQuery.expando,\n\t\t\tcache = jQuery.cache,\n\t\t\tdeleteExpando = support.deleteExpando,\n\t\t\tspecial = jQuery.event.special;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( acceptData || jQuery.acceptData( elem ) ) {\n\n\t\t\t\tid = elem[ internalKey ];\n\t\t\t\tdata = id && cache[ id ];\n\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove cache only if it was not already removed by jQuery.event.remove\n\t\t\t\t\tif ( cache[ id ] ) {\n\n\t\t\t\t\t\tdelete cache[ id ];\n\n\t\t\t\t\t\t// IE does not allow us to delete expando properties from nodes,\n\t\t\t\t\t\t// nor does it have a removeAttribute function on Document nodes;\n\t\t\t\t\t\t// we must handle all of these cases\n\t\t\t\t\t\tif ( deleteExpando ) {\n\t\t\t\t\t\t\tdelete elem[ internalKey ];\n\n\t\t\t\t\t\t} else if ( typeof elem.removeAttribute !== strundefined ) {\n\t\t\t\t\t\t\telem.removeAttribute( internalKey );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telem[ internalKey ] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdeletedIds.push( id );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t}\n\n\t\t\t// Remove any remaining nodes\n\t\t\twhile ( elem.firstChild ) {\n\t\t\t\telem.removeChild( elem.firstChild );\n\t\t\t}\n\n\t\t\t// If this is a select, ensure that it displays empty (#12336)\n\t\t\t// Support: IE<9\n\t\t\tif ( elem.options && jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\telem.options.length = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined ) {\n\t\t\t\treturn elem.nodeType === 1 ?\n\t\t\t\t\telem.innerHTML.replace( rinlinejQuery, \"\" ) :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t( support.htmlSerialize || !rnoshimcache.test( value )  ) &&\n\t\t\t\t( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\n\t\t\t\t!wrapMap[ (rtagName.exec( value ) || [ \"\", \"\" ])[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (; i < l; i++ ) {\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\telem = this[i] || {};\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch(e) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar first, node, hasScripts,\n\t\t\tscripts, doc, fragment,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[0],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[0] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[i], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!jQuery._data( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( ( node.text || node.textContent || node.innerHTML || \"\" ).replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fix #11809: Avoid leaking memory\n\t\t\t\tfragment = first = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\ti = 0,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone(true);\n\t\t\tjQuery( insert[i] )[ original ]( elems );\n\n\t\t\t// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optmization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\n\n(function() {\n\tvar shrinkWrapBlocksVal;\n\n\tsupport.shrinkWrapBlocks = function() {\n\t\tif ( shrinkWrapBlocksVal != null ) {\n\t\t\treturn shrinkWrapBlocksVal;\n\t\t}\n\n\t\t// Will be changed later if needed.\n\t\tshrinkWrapBlocksVal = false;\n\n\t\t// Minified: var b,c,d\n\t\tvar div, body, container;\n\n\t\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\t\tif ( !body || !body.style ) {\n\t\t\t// Test fired too early or in an unsupported environment, exit.\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup\n\t\tdiv = document.createElement( \"div\" );\n\t\tcontainer = document.createElement( \"div\" );\n\t\tcontainer.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n\t\tbody.appendChild( container ).appendChild( div );\n\n\t\t// Support: IE6\n\t\t// Check if elements with layout shrink-wrap their children\n\t\tif ( typeof div.style.zoom !== strundefined ) {\n\t\t\t// Reset CSS: box-sizing; display; margin; border\n\t\t\tdiv.style.cssText =\n\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;\" +\n\t\t\t\t\"padding:1px;width:1px;zoom:1\";\n\t\t\tdiv.appendChild( document.createElement( \"div\" ) ).style.width = \"5px\";\n\t\t\tshrinkWrapBlocksVal = div.offsetWidth !== 3;\n\t\t}\n\n\t\tbody.removeChild( container );\n\n\t\treturn shrinkWrapBlocksVal;\n\t};\n\n})();\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\n\n\nvar getStyles, curCSS,\n\trposition = /^(top|right|bottom|left)$/;\n\nif ( window.getComputedStyle ) {\n\tgetStyles = function( elem ) {\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tif ( elem.ownerDocument.defaultView.opener ) {\n\t\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t\t}\n\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\tcurCSS = function( elem, name, computed ) {\n\t\tvar width, minWidth, maxWidth, ret,\n\t\t\tstyle = elem.style;\n\n\t\tcomputed = computed || getStyles( elem );\n\n\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t\tif ( computed ) {\n\n\t\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\tret = jQuery.style( elem, name );\n\t\t\t}\n\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Chrome < 17 and Safari 5.0 uses \"computed value\" instead of \"used value\" for margin-right\n\t\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\treturn ret === undefined ?\n\t\t\tret :\n\t\t\tret + \"\";\n\t};\n} else if ( document.documentElement.currentStyle ) {\n\tgetStyles = function( elem ) {\n\t\treturn elem.currentStyle;\n\t};\n\n\tcurCSS = function( elem, name, computed ) {\n\t\tvar left, rs, rsLeft, ret,\n\t\t\tstyle = elem.style;\n\n\t\tcomputed = computed || getStyles( elem );\n\t\tret = computed ? computed[ name ] : undefined;\n\n\t\t// Avoid setting ret to empty string here\n\t\t// so we don't default to auto\n\t\tif ( ret == null && style && style[ name ] ) {\n\t\t\tret = style[ name ];\n\t\t}\n\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\t// but not position css attributes, as those are proportional to the parent element instead\n\t\t// and we can't measure the parent instead because it might trigger a \"stacking dolls\" problem\n\t\tif ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\tleft = style.left;\n\t\t\trs = elem.runtimeStyle;\n\t\t\trsLeft = rs && rs.left;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = elem.currentStyle.left;\n\t\t\t}\n\t\t\tstyle.left = name === \"fontSize\" ? \"1em\" : ret;\n\t\t\tret = style.pixelLeft + \"px\";\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.left = left;\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = rsLeft;\n\t\t\t}\n\t\t}\n\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\treturn ret === undefined ?\n\t\t\tret :\n\t\t\tret + \"\" || \"auto\";\n\t};\n}\n\n\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tvar condition = conditionFn();\n\n\t\t\tif ( condition == null ) {\n\t\t\t\t// The test was not ready at this point; screw the hook this time\n\t\t\t\t// but check again when needed next time.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( condition ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due to missing dependency),\n\t\t\t\t// remove it.\n\t\t\t\t// Since there are no other hooks for marginRight, remove the whole object.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\t// Minified: var b,c,d,e,f,g, h,i\n\tvar div, style, a, pixelPositionVal, boxSizingReliableVal,\n\t\treliableHiddenOffsetsVal, reliableMarginRightVal;\n\n\t// Setup\n\tdiv = document.createElement( \"div\" );\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\ta = div.getElementsByTagName( \"a\" )[ 0 ];\n\tstyle = a && a.style;\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !style ) {\n\t\treturn;\n\t}\n\n\tstyle.cssText = \"float:left;opacity:.5\";\n\n\t// Support: IE<9\n\t// Make sure that element opacity exists (as opposed to filter)\n\tsupport.opacity = style.opacity === \"0.5\";\n\n\t// Verify style float existence\n\t// (IE uses styleFloat instead of cssFloat)\n\tsupport.cssFloat = !!style.cssFloat;\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\t// Support: Firefox<29, Android 2.3\n\t// Vendor-prefix box-sizing\n\tsupport.boxSizing = style.boxSizing === \"\" || style.MozBoxSizing === \"\" ||\n\t\tstyle.WebkitBoxSizing === \"\";\n\n\tjQuery.extend(support, {\n\t\treliableHiddenOffsets: function() {\n\t\t\tif ( reliableHiddenOffsetsVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableHiddenOffsetsVal;\n\t\t},\n\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\n\t\tpixelPosition: function() {\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelPositionVal;\n\t\t},\n\n\t\t// Support: Android 2.3\n\t\treliableMarginRight: function() {\n\t\t\tif ( reliableMarginRightVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginRightVal;\n\t\t}\n\t});\n\n\tfunction computeStyleTests() {\n\t\t// Minified: var b,c,d,j\n\t\tvar div, body, container, contents;\n\n\t\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\t\tif ( !body || !body.style ) {\n\t\t\t// Test fired too early or in an unsupported environment, exit.\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup\n\t\tdiv = document.createElement( \"div\" );\n\t\tcontainer = document.createElement( \"div\" );\n\t\tcontainer.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n\t\tbody.appendChild( container ).appendChild( div );\n\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\n\t\t// Support: IE<9\n\t\t// Assume reasonable values in the absence of getComputedStyle\n\t\tpixelPositionVal = boxSizingReliableVal = false;\n\t\treliableMarginRightVal = true;\n\n\t\t// Check for getComputedStyle so that this code is not run in IE<9.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tpixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n\t\t\tboxSizingReliableVal =\n\t\t\t\t( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tcontents = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tcontents.style.cssText = div.style.cssText =\n\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\tcontents.style.marginRight = contents.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\treliableMarginRightVal =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( contents, null ) || {} ).marginRight );\n\n\t\t\tdiv.removeChild( contents );\n\t\t}\n\n\t\t// Support: IE8\n\t\t// Check if table cells still have offsetWidth/Height when they are set\n\t\t// to display:none and there are still other visible table cells in a\n\t\t// table row; if so, offsetWidth/Height are not reliable for use when\n\t\t// determining if an element has been hidden directly using\n\t\t// display:none (it is still safe to use offsets if a parent element is\n\t\t// hidden; don safety goggles and see bug #4512 for more information).\n\t\tdiv.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\n\t\tcontents = div.getElementsByTagName( \"td\" );\n\t\tcontents[ 0 ].style.cssText = \"margin:0;border:0;padding:0;display:none\";\n\t\treliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;\n\t\tif ( reliableHiddenOffsetsVal ) {\n\t\t\tcontents[ 0 ].style.display = \"\";\n\t\t\tcontents[ 1 ].style.display = \"none\";\n\t\t\treliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;\n\t\t}\n\n\t\tbody.removeChild( container );\n\t}\n\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t\tralpha = /alpha\\([^)]*\\)/i,\n\tropacity = /opacity\\s*=\\s*([^)]*)/,\n\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = jQuery._data( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = jQuery._data( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\tjQuery._data( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set. See: #7116\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\n\t\t\t\t// Support: IE\n\t\t\t\t// Swallow errors from 'invalid' CSS values (#5509)\n\t\t\t\ttry {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t} catch(e) {}\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar num, val, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tsupport.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\nif ( !support.opacity ) {\n\tjQuery.cssHooks.opacity = {\n\t\tget: function( elem, computed ) {\n\t\t\t// IE uses filters for opacity\n\t\t\treturn ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\" ) ?\n\t\t\t\t( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\n\t\t\t\tcomputed ? \"1\" : \"\";\n\t\t},\n\n\t\tset: function( elem, value ) {\n\t\t\tvar style = elem.style,\n\t\t\t\tcurrentStyle = elem.currentStyle,\n\t\t\t\topacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\tstyle.zoom = 1;\n\n\t\t\t// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\n\t\t\t// if value === \"\", then remove inline opacity #12685\n\t\t\tif ( ( value >= 1 || value === \"\" ) &&\n\t\t\t\t\tjQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\n\t\t\t\t\tstyle.removeAttribute ) {\n\n\t\t\t\t// Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n\t\t\t\t// if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n\t\t\t\t// style.removeAttribute is IE Only, but so apparently is this code path...\n\t\t\t\tstyle.removeAttribute( \"filter\" );\n\n\t\t\t\t// if there is no filter style applied in a css rule or unset inline opacity, we are done\n\t\t\t\tif ( value === \"\" || currentStyle && !currentStyle.filter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise, set new filter values\n\t\t\tstyle.filter = ralpha.test( filter ) ?\n\t\t\t\tfilter.replace( ralpha, opacity ) :\n\t\t\t\tfilter + \" \" + opacity;\n\t\t}\n\t};\n}\n\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = jQuery._data( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE does not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tjQuery._data( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t// inline-level elements accept inline-block;\n\t\t\t// block-level elements need to be inline with layout\n\t\t\tif ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === \"inline\" ) {\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t} else {\n\t\t\t\tstyle.zoom = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tif ( !support.shrinkWrapBlocks() ) {\n\t\t\tanim.always(function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t});\n\t\t}\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = jQuery._data( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\t\t\tjQuery._removeData( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || jQuery._data( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = jQuery._data( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\t// Minified: var a,b,c,d,e\n\tvar input, div, select, a, opt;\n\n\t// Setup\n\tdiv = document.createElement( \"div\" );\n\tdiv.setAttribute( \"className\", \"t\" );\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\ta = div.getElementsByTagName(\"a\")[ 0 ];\n\n\t// First batch of tests.\n\tselect = document.createElement(\"select\");\n\topt = select.appendChild( document.createElement(\"option\") );\n\tinput = div.getElementsByTagName(\"input\")[ 0 ];\n\n\ta.style.cssText = \"top:1px\";\n\n\t// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n\tsupport.getSetAttribute = div.className !== \"t\";\n\n\t// Get the style information from getAttribute\n\t// (IE uses .cssText instead)\n\tsupport.style = /top/.test( a.getAttribute(\"style\") );\n\n\t// Make sure that URLs aren't manipulated\n\t// (IE normalizes it by default)\n\tsupport.hrefNormalized = a.getAttribute(\"href\") === \"/a\";\n\n\t// Check the default checkbox/radio value (\"\" on WebKit; \"on\" elsewhere)\n\tsupport.checkOn = !!input.value;\n\n\t// Make sure that a selected-by-default option has a working selected property.\n\t// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n\tsupport.optSelected = opt.selected;\n\n\t// Tests for enctype support on a form (#6743)\n\tsupport.enctype = !!document.createElement(\"form\").enctype;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE8 only\n\t// Check if we can trust getAttribute(\"value\")\n\tinput = document.createElement( \"input\" );\n\tinput.setAttribute( \"value\", \"\" );\n\tsupport.input = input.getAttribute( \"value\" ) === \"\";\n\n\t// Check if an input maintains its value after becoming a radio\n\tinput.value = \"t\";\n\tinput.setAttribute( \"type\", \"radio\" );\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// oldIE doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\tif ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {\n\n\t\t\t\t\t\t// Support: IE6\n\t\t\t\t\t\t// When new option element is added to select box we need to\n\t\t\t\t\t\t// force reflow of newly added node in order to workaround delay\n\t\t\t\t\t\t// of initialization properties\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toption.selected = optionSet = true;\n\n\t\t\t\t\t\t} catch ( _ ) {\n\n\t\t\t\t\t\t\t// Will be executed only in IE6\n\t\t\t\t\t\t\toption.scrollHeight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toption.selected = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle,\n\truseDefault = /^(?:checked|selected)$/i,\n\tgetSetAttribute = support.getSetAttribute,\n\tgetSetInput = support.input;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\tif ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t// Also clear defaultChecked/defaultSelected (if appropriate)\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] =\n\t\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t}\n\n\t\t\t\t// See #9699 for explanation of this approach (setting first, then removal)\n\t\t\t\t} else {\n\t\t\t\t\tjQuery.attr( elem, name, \"\" );\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( getSetAttribute ? name : propName );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hook for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\t\t\t// IE<8 needs the *property* name\n\t\t\telem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );\n\n\t\t// Use defaultChecked and defaultSelected for oldIE\n\t\t} else {\n\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] = elem[ name ] = true;\n\t\t}\n\n\t\treturn name;\n\t}\n};\n\n// Retrieve booleans specially\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?\n\t\tfunction( elem, name, isXML ) {\n\t\t\tvar ret, handle;\n\t\t\tif ( !isXML ) {\n\t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\t\thandle = attrHandle[ name ];\n\t\t\t\tattrHandle[ name ] = ret;\n\t\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\t\t\t\tattrHandle[ name ] = handle;\n\t\t\t}\n\t\t\treturn ret;\n\t\t} :\n\t\tfunction( elem, name, isXML ) {\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem[ jQuery.camelCase( \"default-\" + name ) ] ?\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t};\n});\n\n// fix oldIE attroperties\nif ( !getSetInput || !getSetAttribute ) {\n\tjQuery.attrHooks.value = {\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( jQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t// Does not return so that setAttribute is also used\n\t\t\t\telem.defaultValue = value;\n\t\t\t} else {\n\t\t\t\t// Use nodeHook if defined (#1954); otherwise setAttribute is fine\n\t\t\t\treturn nodeHook && nodeHook.set( elem, value, name );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\nif ( !getSetAttribute ) {\n\n\t// Use this for any attribute in IE6/7\n\t// This fixes almost every IE6/7 issue\n\tnodeHook = {\n\t\tset: function( elem, value, name ) {\n\t\t\t// Set the existing or create a new attribute node\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\tif ( !ret ) {\n\t\t\t\telem.setAttributeNode(\n\t\t\t\t\t(ret = elem.ownerDocument.createAttribute( name ))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tret.value = value += \"\";\n\n\t\t\t// Break association with cloned elements by also using setAttribute (#9646)\n\t\t\tif ( name === \"value\" || value === elem.getAttribute( name ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Some attributes are constructed with empty-string values when not defined\n\tattrHandle.id = attrHandle.name = attrHandle.coords =\n\t\tfunction( elem, name, isXML ) {\n\t\t\tvar ret;\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn (ret = elem.getAttributeNode( name )) && ret.value !== \"\" ?\n\t\t\t\t\tret.value :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t};\n\n\t// Fixing value retrieval on a button requires this module\n\tjQuery.valHooks.button = {\n\t\tget: function( elem, name ) {\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\tif ( ret && ret.specified ) {\n\t\t\t\treturn ret.value;\n\t\t\t}\n\t\t},\n\t\tset: nodeHook.set\n\t};\n\n\t// Set contenteditable to false on removals(#10429)\n\t// Setting to empty string throws an error as an invalid value\n\tjQuery.attrHooks.contenteditable = {\n\t\tset: function( elem, value, name ) {\n\t\t\tnodeHook.set( elem, value === \"\" ? false : value, name );\n\t\t}\n\t};\n\n\t// Set width and height to auto instead of 0 on empty string( Bug #8150 )\n\t// This is for removals\n\tjQuery.each([ \"width\", \"height\" ], function( i, name ) {\n\t\tjQuery.attrHooks[ name ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\telem.setAttribute( name, \"auto\" );\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\nif ( !support.style ) {\n\tjQuery.attrHooks.style = {\n\t\tget: function( elem ) {\n\t\t\t// Return undefined in the case of empty string\n\t\t\t// Note: IE uppercases css property names, but if we were to .toLowerCase()\n\t\t\t// .cssText, that would destroy case senstitivity in URL's, like in \"background\"\n\t\t\treturn elem.style.cssText || undefined;\n\t\t},\n\t\tset: function( elem, value ) {\n\t\t\treturn ( elem.style.cssText = value + \"\" );\n\t\t}\n\t};\n}\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button|object)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\tname = jQuery.propFix[ name ] || name;\n\t\treturn this.each(function() {\n\t\t\t// try/catch handles cases where IE balks (such as removing a property on window)\n\t\t\ttry {\n\t\t\t\tthis[ name ] = undefined;\n\t\t\t\tdelete this[ name ];\n\t\t\t} catch( e ) {}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Some attributes require a special call on IE\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !support.hrefNormalized ) {\n\t// href/src property should get the full normalized URL (#10299/#12915)\n\tjQuery.each([ \"href\", \"src\" ], function( i, name ) {\n\t\tjQuery.propHooks[ name ] = {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.getAttribute( name, 4 );\n\t\t\t}\n\t\t};\n\t});\n}\n\n// Support: Safari, IE9+\n// mis-reports the default selected property of an option\n// Accessing the parent's selectedIndex property fixes it\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\t// Make sure that it also works with optgroups, see #5701\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n// IE6/7 call enctype encoding\nif ( !support.enctype ) {\n\tjQuery.propFix.enctype = \"encoding\";\n}\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tjQuery._data( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : jQuery._data( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\nvar rvalidtokens = /(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g;\n\njQuery.parseJSON = function( data ) {\n\t// Attempt to parse using the native JSON parser first\n\tif ( window.JSON && window.JSON.parse ) {\n\t\t// Support: Android 2.3\n\t\t// Workaround failure to string-cast null input\n\t\treturn window.JSON.parse( data + \"\" );\n\t}\n\n\tvar requireNonComma,\n\t\tdepth = null,\n\t\tstr = jQuery.trim( data + \"\" );\n\n\t// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains\n\t// after removing valid tokens\n\treturn str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {\n\n\t\t// Force termination if we see a misplaced comma\n\t\tif ( requireNonComma && comma ) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\t// Perform no more replacements after returning to outermost depth\n\t\tif ( depth === 0 ) {\n\t\t\treturn token;\n\t\t}\n\n\t\t// Commas must not follow \"[\", \"{\", or \",\"\n\t\trequireNonComma = open || comma;\n\n\t\t// Determine new depth\n\t\t// array/object open (\"[\" or \"{\"): depth += true - false (increment)\n\t\t// array/object close (\"]\" or \"}\"): depth += false - true (decrement)\n\t\t// other cases (\",\" or primitive): depth += true - true (numeric cast)\n\t\tdepth += !close - !open;\n\n\t\t// Remove this token\n\t\treturn \"\";\n\t}) ) ?\n\t\t( Function( \"return \" + str ) )() :\n\t\tjQuery.error( \"Invalid JSON: \" + data );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\ttry {\n\t\tif ( window.DOMParser ) { // Standard\n\t\t\ttmp = new DOMParser();\n\t\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t\t} else { // IE\n\t\t\txml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t\t\txml.async = \"false\";\n\t\t\txml.loadXML( data );\n\t\t}\n\t} catch( e ) {\n\t\txml = undefined;\n\t}\n\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType.charAt( 0 ) === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar deep, key,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\tvar firstDataType, ct, finalDataType, type,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar // Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers as string\n\t\t\tresponseHeadersString,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\ttransport,\n\t\t\t// Response headers\n\t\t\tresponseHeaders,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" ).replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function(i) {\n\t\t\t\tjQuery(this).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[0] ) {\n\t\t\t// The elements to wrap the target around\n\t\t\tvar wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\n\n\t\t\tif ( this[0].parentNode ) {\n\t\t\t\twrap.insertBefore( this[0] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\n\t\t\t\t\telem = elem.firstChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function(i) {\n\t\t\t\tjQuery(this).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function(i) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||\n\t\t(!support.reliableHiddenOffsets() &&\n\t\t\t((elem.style && elem.style.display) || jQuery.css( elem, \"display\" )) === \"none\");\n};\n\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\n// Create the request object\n// (This is still attached to ajaxSettings for backward compatibility)\njQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?\n\t// Support: IE6+\n\tfunction() {\n\n\t\t// XHR cannot access local files, always use ActiveX for that case\n\t\treturn !this.isLocal &&\n\n\t\t\t// Support: IE7-8\n\t\t\t// oldIE XHR does not support non-RFC2616 methods (#13240)\n\t\t\t// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx\n\t\t\t// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9\n\t\t\t// Although this check for six methods instead of eight\n\t\t\t// since IE also does not support \"trace\" and \"connect\"\n\t\t\t/^(get|post|head|put|delete|options)$/i.test( this.type ) &&\n\n\t\t\tcreateStandardXHR() || createActiveXHR();\n\t} :\n\t// For all other browsers, use the standard XMLHttpRequest object\n\tcreateStandardXHR;\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE<10\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]( undefined, true );\n\t\t}\n\t});\n}\n\n// Determine support properties\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nxhrSupported = support.ajax = !!xhrSupported;\n\n// Create transport if the browser can provide an xhr\nif ( xhrSupported ) {\n\n\tjQuery.ajaxTransport(function( options ) {\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( !options.crossDomain || support.cors ) {\n\n\t\t\tvar callback;\n\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\t\t// Open the socket\n\t\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t\t}\n\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set headers\n\t\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// IE's ActiveXObject throws a 'Type Mismatch' exception when setting\n\t\t\t\t\t\t// request header to a null-value.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To keep consistent with other XHR implementations, cast the value\n\t\t\t\t\t\t// to string and ignore `undefined`.\n\t\t\t\t\t\tif ( headers[ i ] !== undefined ) {\n\t\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] + \"\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do send the request\n\t\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\t\txhr.send( ( options.hasContent && options.data ) || null );\n\n\t\t\t\t\t// Listener\n\t\t\t\t\tcallback = function( _, isAbort ) {\n\t\t\t\t\t\tvar status, statusText, responses;\n\n\t\t\t\t\t\t// Was never called and is aborted or complete\n\t\t\t\t\t\tif ( callback && ( isAbort || xhr.readyState === 4 ) ) {\n\t\t\t\t\t\t\t// Clean up\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = undefined;\n\t\t\t\t\t\t\txhr.onreadystatechange = jQuery.noop;\n\n\t\t\t\t\t\t\t// Abort manually if needed\n\t\t\t\t\t\t\tif ( isAbort ) {\n\t\t\t\t\t\t\t\tif ( xhr.readyState !== 4 ) {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponses = {};\n\t\t\t\t\t\t\t\tstatus = xhr.status;\n\n\t\t\t\t\t\t\t\t// Support: IE<10\n\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\tif ( typeof xhr.responseText === \"string\" ) {\n\t\t\t\t\t\t\t\t\tresponses.text = xhr.responseText;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Firefox throws an exception when accessing\n\t\t\t\t\t\t\t\t// statusText for faulty cross-domain requests\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tstatusText = xhr.statusText;\n\t\t\t\t\t\t\t\t} catch( e ) {\n\t\t\t\t\t\t\t\t\t// We normalize with Webkit giving an empty statusText\n\t\t\t\t\t\t\t\t\tstatusText = \"\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Filter status for non standard behaviors\n\n\t\t\t\t\t\t\t\t// If the request is local and we have data: assume a success\n\t\t\t\t\t\t\t\t// (success with no data won't get notified, that's the best we\n\t\t\t\t\t\t\t\t// can do given current implementations)\n\t\t\t\t\t\t\t\tif ( !status && options.isLocal && !options.crossDomain ) {\n\t\t\t\t\t\t\t\t\tstatus = responses.text ? 200 : 404;\n\t\t\t\t\t\t\t\t// IE - #1450: sometimes returns 1223 when it should be 204\n\t\t\t\t\t\t\t\t} else if ( status === 1223 ) {\n\t\t\t\t\t\t\t\t\tstatus = 204;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call complete if needed\n\t\t\t\t\t\tif ( responses ) {\n\t\t\t\t\t\t\tcomplete( status, statusText, responses, xhr.getAllResponseHeaders() );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( !options.async ) {\n\t\t\t\t\t\t// if we're in sync mode we fire the callback\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t// (IE6 & IE7) if it's in cache and has been\n\t\t\t\t\t\t// retrieved directly we need to fire the callback\n\t\t\t\t\t\tsetTimeout( callback );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Add to the list of active xhr callbacks\n\t\t\t\t\t\txhr.onreadystatechange = xhrCallbacks[ id ] = callback;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback( undefined, true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n}\n\n// Functions to create xhrs\nfunction createStandardXHR() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch( e ) {}\n}\n\nfunction createActiveXHR() {\n\ttry {\n\t\treturn new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t} catch( e ) {}\n}\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and global\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t\ts.global = false;\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function(s) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\n\t\tvar script,\n\t\t\thead = document.head || jQuery(\"head\")[0] || document.documentElement;\n\n\t\treturn {\n\n\t\t\tsend: function( _, callback ) {\n\n\t\t\t\tscript = document.createElement(\"script\");\n\n\t\t\t\tscript.async = true;\n\n\t\t\t\tif ( s.scriptCharset ) {\n\t\t\t\t\tscript.charset = s.scriptCharset;\n\t\t\t\t}\n\n\t\t\t\tscript.src = s.url;\n\n\t\t\t\t// Attach handlers for all browsers\n\t\t\t\tscript.onload = script.onreadystatechange = function( _, isAbort ) {\n\n\t\t\t\t\tif ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t\t\t// Handle memory leak in IE\n\t\t\t\t\t\tscript.onload = script.onreadystatechange = null;\n\n\t\t\t\t\t\t// Remove the script\n\t\t\t\t\t\tif ( script.parentNode ) {\n\t\t\t\t\t\t\tscript.parentNode.removeChild( script );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Dereference the script\n\t\t\t\t\t\tscript = null;\n\n\t\t\t\t\t\t// Callback if not abort\n\t\t\t\t\t\tif ( !isAbort ) {\n\t\t\t\t\t\t\tcallback( 200, \"success\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\thead.insertBefore( script, head.firstChild );\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( script ) {\n\t\t\t\t\tscript.onload( undefined, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, response, type,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off, url.length ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ?\n\t\telem :\n\t\telem.nodeType === 9 ?\n\t\t\telem.defaultView || elem.parentWindow :\n\t\t\tfalse;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\tjQuery.inArray(\"auto\", [ curCSSTop, curCSSLeft ] ) > -1;\n\n\t\t// need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\telem = this[ 0 ],\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\t// BlackBerry 5, iOS 3 (original iPhone)\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),\n\t\t\tleft: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\tparentOffset = { top: 0, left: 0 },\n\t\t\telem = this[ 0 ];\n\n\t\t// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// we assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top  += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\t// note: when an element has margin: auto the offsetLeft and marginLeft\n\t\t// are the same in Safari causing offset.left to incorrectly be 0\n\t\treturn {\n\t\t\ttop:  offset.top  - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true)\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = /Y/.test( prop );\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? (prop in win) ? win[ prop ] :\n\t\t\t\t\twin.document.documentElement[ method ] :\n\t\t\t\t\telem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : jQuery( win ).scrollLeft(),\n\t\t\t\t\ttop ? val : jQuery( win ).scrollTop()\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// getComputedStyle returns percent when specified for top/left/bottom/right\n// rather than make the css module depend on the offset module, we just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\n\t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\treturn jQuery;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in\n// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */,
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************************************************!*\
  !*** ../~/raw-loader!./integrations/adobe/lib/video_heartbeat-2.0.2.min.js ***!
  \*****************************************************************************/
/***/ (function(module, exports) {

eval("module.exports = \"/*\\n * ************************************************************************\\n *\\n *  ADOBE CONFIDENTIAL\\n *  ___________________\\n *\\n *   (c) Copyright 2017 Adobe Systems Incorporated\\n *   All Rights Reserved.\\n *\\n *  NOTICE:  All information contained herein is, and remains\\n *  the property of Adobe Systems Incorporated and its suppliers,\\n *  if any.  The intellectual and technical concepts contained\\n *  herein are proprietary to Adobe Systems Incorporated and its\\n *  suppliers and may be covered by U.S. and Foreign Patents,\\n *  patents in process, and are protected by trade secret or copyright law.\\n *  Dissemination of this information or reproduction of this material\\n *  is strictly forbidden unless prior written permission is obtained\\n *  from Adobe Systems Incorporated.\\n * ************************************************************************\\n */\\n\\n/*\\n * video heartbeats - 2.0.2 - 2017-04-21\\n * Copyright (c) 2017 Adobe Systems, Inc. All Rights Reserved.\\n */\\n\\n// Heartbeat core\\n!function(a){if(\\\"undefined\\\"==typeof b)var b={};if(\\\"undefined\\\"==typeof c)var c={};if(\\\"undefined\\\"==typeof d)var d={};if(d.radio||(d.radio={}),d.plugin||(d.plugin={}),\\\"undefined\\\"==typeof e)var e={};e.clock||(e.clock={}),function(a){\\\"use strict\\\";function b(a,b){var c=(65535&a)+(65535&b),d=(a>>16)+(b>>16)+(c>>16);return d<<16|65535&c}function c(a,b){return a<<b|a>>>32-b}function d(a,d,e,f,g,h){return b(c(b(b(d,a),b(f,h)),g),e)}function e(a,b,c,e,f,g,h){return d(b&c|~b&e,a,b,f,g,h)}function f(a,b,c,e,f,g,h){return d(b&e|c&~e,a,b,f,g,h)}function g(a,b,c,e,f,g,h){return d(b^c^e,a,b,f,g,h)}function h(a,b,c,e,f,g,h){return d(c^(b|~e),a,b,f,g,h)}function i(a,c){a[c>>5]|=128<<c%32,a[(c+64>>>9<<4)+14]=c;var d,i,j,k,l,m=1732584193,n=-271733879,o=-1732584194,p=271733878;for(d=0;d<a.length;d+=16)i=m,j=n,k=o,l=p,m=e(m,n,o,p,a[d],7,-680876936),p=e(p,m,n,o,a[d+1],12,-389564586),o=e(o,p,m,n,a[d+2],17,606105819),n=e(n,o,p,m,a[d+3],22,-1044525330),m=e(m,n,o,p,a[d+4],7,-176418897),p=e(p,m,n,o,a[d+5],12,1200080426),o=e(o,p,m,n,a[d+6],17,-1473231341),n=e(n,o,p,m,a[d+7],22,-45705983),m=e(m,n,o,p,a[d+8],7,1770035416),p=e(p,m,n,o,a[d+9],12,-1958414417),o=e(o,p,m,n,a[d+10],17,-42063),n=e(n,o,p,m,a[d+11],22,-1990404162),m=e(m,n,o,p,a[d+12],7,1804603682),p=e(p,m,n,o,a[d+13],12,-40341101),o=e(o,p,m,n,a[d+14],17,-1502002290),n=e(n,o,p,m,a[d+15],22,1236535329),m=f(m,n,o,p,a[d+1],5,-165796510),p=f(p,m,n,o,a[d+6],9,-1069501632),o=f(o,p,m,n,a[d+11],14,643717713),n=f(n,o,p,m,a[d],20,-373897302),m=f(m,n,o,p,a[d+5],5,-701558691),p=f(p,m,n,o,a[d+10],9,38016083),o=f(o,p,m,n,a[d+15],14,-660478335),n=f(n,o,p,m,a[d+4],20,-405537848),m=f(m,n,o,p,a[d+9],5,568446438),p=f(p,m,n,o,a[d+14],9,-1019803690),o=f(o,p,m,n,a[d+3],14,-187363961),n=f(n,o,p,m,a[d+8],20,1163531501),m=f(m,n,o,p,a[d+13],5,-1444681467),p=f(p,m,n,o,a[d+2],9,-51403784),o=f(o,p,m,n,a[d+7],14,1735328473),n=f(n,o,p,m,a[d+12],20,-1926607734),m=g(m,n,o,p,a[d+5],4,-378558),p=g(p,m,n,o,a[d+8],11,-2022574463),o=g(o,p,m,n,a[d+11],16,1839030562),n=g(n,o,p,m,a[d+14],23,-35309556),m=g(m,n,o,p,a[d+1],4,-1530992060),p=g(p,m,n,o,a[d+4],11,1272893353),o=g(o,p,m,n,a[d+7],16,-155497632),n=g(n,o,p,m,a[d+10],23,-1094730640),m=g(m,n,o,p,a[d+13],4,681279174),p=g(p,m,n,o,a[d],11,-358537222),o=g(o,p,m,n,a[d+3],16,-722521979),n=g(n,o,p,m,a[d+6],23,76029189),m=g(m,n,o,p,a[d+9],4,-640364487),p=g(p,m,n,o,a[d+12],11,-421815835),o=g(o,p,m,n,a[d+15],16,530742520),n=g(n,o,p,m,a[d+2],23,-995338651),m=h(m,n,o,p,a[d],6,-198630844),p=h(p,m,n,o,a[d+7],10,1126891415),o=h(o,p,m,n,a[d+14],15,-1416354905),n=h(n,o,p,m,a[d+5],21,-57434055),m=h(m,n,o,p,a[d+12],6,1700485571),p=h(p,m,n,o,a[d+3],10,-1894986606),o=h(o,p,m,n,a[d+10],15,-1051523),n=h(n,o,p,m,a[d+1],21,-2054922799),m=h(m,n,o,p,a[d+8],6,1873313359),p=h(p,m,n,o,a[d+15],10,-30611744),o=h(o,p,m,n,a[d+6],15,-1560198380),n=h(n,o,p,m,a[d+13],21,1309151649),m=h(m,n,o,p,a[d+4],6,-145523070),p=h(p,m,n,o,a[d+11],10,-1120210379),o=h(o,p,m,n,a[d+2],15,718787259),n=h(n,o,p,m,a[d+9],21,-343485551),m=b(m,i),n=b(n,j),o=b(o,k),p=b(p,l);return[m,n,o,p]}function j(a){var b,c=\\\"\\\";for(b=0;b<32*a.length;b+=8)c+=String.fromCharCode(a[b>>5]>>>b%32&255);return c}function k(a){var b,c=[];for(c[(a.length>>2)-1]=void 0,b=0;b<c.length;b+=1)c[b]=0;for(b=0;b<8*a.length;b+=8)c[b>>5]|=(255&a.charCodeAt(b/8))<<b%32;return c}function l(a){return j(i(k(a),8*a.length))}function m(a,b){var c,d,e=k(a),f=[],g=[];for(f[15]=g[15]=void 0,e.length>16&&(e=i(e,8*a.length)),c=0;c<16;c+=1)f[c]=909522486^e[c],g[c]=1549556828^e[c];return d=i(f.concat(k(b)),512+8*b.length),j(i(g.concat(d),640))}function n(a){var b,c,d=\\\"0123456789abcdef\\\",e=\\\"\\\";for(c=0;c<a.length;c+=1)b=a.charCodeAt(c),e+=d.charAt(b>>>4&15)+d.charAt(15&b);return e}function o(a){return unescape(encodeURIComponent(a))}function p(a){return l(o(a))}function q(a){return n(p(a))}function r(a,b){return m(o(a),o(b))}function s(a,b){return n(r(a,b))}function t(a,b,c){return b?c?r(b,a):s(b,a):c?p(a):q(a)}a.md5=t}(b),function(a){\\\"use strict\\\";var b={};b.startsWith=function(a,b){return 0==a.indexOf(b)},a.StringUtils=b}(b),function(a){\\\"use strict\\\";var b={};b.clone=function(a){var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},b.merge=function(a,c){var d=b.clone(a);for(var e in c)c.hasOwnProperty(e)&&(d[e]=c[e]);return d},a.ObjectUtils=b}(b),function(a){\\\"use strict\\\";function b(a,b,c){this.fn=a,this.ctx=b,this.params=c}b.prototype.run=function(){this.params?this.fn.apply(this.ctx,this.params):this.fn.apply(this.ctx)},a.radio.Command=b}(d),function(a){\\\"use strict\\\";function b(a,b){this._queue=[],this._lastTs=0,this._isSuspended=\\\"undefined\\\"!=typeof a&&a,this._delay=\\\"undefined\\\"!=typeof b?b:0}b.prototype.addCommand=function(a){this._queue.push(a),this._drain()},b.prototype.cancelAllCommands=function(){this._queue=[]},b.prototype.isEmpty=function(){return 0===this._queue.length},b.prototype.suspend=function(){this._isSuspended=!0},b.prototype.resume=function(){this._isSuspended=!1,this._drain()},b.prototype.flush=function(){this._isSuspended=!1;for(var a=0;a<this._queue.length;a++){var b=this._queue[a];b.run()}this._queue=[]},b.prototype._drain=function(){if(!this._isSuspended&&!this._drainInProgress){this._drainInProgress=!0;var a=this;!function b(){var c=a._queue.shift();c?a._runCommand(c,function(){a._isSuspended||b()}):a._drainInProgress=!1}()}},b.prototype._runCommand=function(a,b){function c(){a.run(),null!=b&&b.call(d)}var d=this;if(0==this._lastTs)c();else{var e=(new Date).getTime(),f=e-this._lastTs;this._lastTs=e,f<this._delay?setTimeout(c,this._delay-f):c()}},a.radio.CommandQueue=b}(d),function(a){\\\"use strict\\\";function b(a,b){if(this._name=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b,this._listeners={},this._requests={},this._commands={},this._isShutDown=!1}function c(a,c){if(a===c)return!0;for(var d=(a||\\\"\\\").split(b.SEPARATOR),e=(c||\\\"\\\").split(b.SEPARATOR),f=!0,g=0;g<d.length;g++)f=f&&(d[g]===b.WILDCARD||d[g]===e[g]);return f}b.WILDCARD=\\\"*\\\",b.SEPARATOR=\\\":\\\",b.prototype.toString=function(){return\\\"<channel: \\\"+this._name+\\\">\\\"},b.prototype.shutdown=function(){this._isShutDown||(this._logger.debug(d,\\\"#shutdown > Shutting down\\\"),this.off(),this._requests={},this._commands={},this._isShutDown=!0)},b.prototype.on=function(a,b,c){this._isShutDown||(this._listeners[a]||(this._listeners[a]=[]),this._listeners[a].push({fn:b,ctx:c}))},b.prototype.off=function(a,b,c){if(!this._isShutDown){if(b=\\\"function\\\"==typeof b?b:null,!a&&null==b&&!c)return void(this._listeners={});if(a)this._removeListener(a,b,c);else for(a in this._listeners)this._listeners.hasOwnProperty(a)&&this._removeListener(a,b,c)}},b.prototype.trigger=function(a){if(!this._isShutDown)for(var b in this._listeners)if(this._listeners.hasOwnProperty(b)&&c(b,a.name))for(var d=this._listeners[b].slice(0),e=0;e<d.length;e++){var f=d[e];f.fn.call(f.ctx,a)}},b.prototype.comply=function(a,b,c){this._isShutDown||(this._commands[a]={cmd:b,ctx:c})},b.prototype.command=function(a,b){if(!this._isShutDown){var c=this._commands[a];return c?void c.cmd.call(c.ctx,b):void this._logger.warn(d,\\\"#command > No command handler for: \\\"+a)}},b.prototype.reply=function(a,b,c){this._isShutDown||(this._requests[a]={fn:b,ctx:c})},b.prototype.request=function(a){if(!this._isShutDown){var b=this._requests[a];return b?b.fn.call(b.ctx):(this._logger.warn(d,\\\"#request > No request handler for: \\\"+a),null)}},b.prototype._removeListener=function(a,b,c){b=\\\"function\\\"==typeof b?b:null;var d=this._listeners[a];if(d){if(!d.length||null==b&&!c)return void delete this._listeners[a];for(var e=0;e<d.length;e++){var f=d[e];null!==b&&b!==f.fn||c&&c!==f.ctx||this._listeners[a].splice(e,1)}}};var d=\\\"radio::Channel\\\";a.radio.Channel=b}(d),function(a){\\\"use strict\\\";function b(a){if(!a)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=a,this._channels={}}var c=a.radio.Channel;b.prototype.channel=function(a){return this._channels[a]||(this._channels[a]=new c(a,this._logger)),this._channels[a]},b.prototype.shutdown=function(){for(var a in this._channels)this._channels.hasOwnProperty(a)&&this._channels[a].shutdown()},a.radio.Radio=b}(d),function(a){\\\"use strict\\\";function b(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a}a.extend=b}(d),function(a){\\\"use strict\\\";function b(){}b.prototype.write=function(a){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},a.ILogWriter=b}(d),function(a){\\\"use strict\\\";function b(){}b.prototype.write=function(a){window.console&&window.console.log&&window.console.log(a)},a.LogWriter=b}(d),function(a){\\\"use strict\\\";function b(){}b.prototype.setLogWriter=function(a){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.getLogWriter=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.getEnabled=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.enable=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.disable=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.debug=function(a,b){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.info=function(a,b){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.warn=function(a,b){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.error=function(a,b){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},a.ILogger=b}(d),function(a){\\\"use strict\\\";function b(){this._logWriter=new d}function c(a){return a<10?\\\"00\\\"+a:a<100?\\\"0\\\"+a:\\\"\\\"+a}var d=a.LogWriter;b.prototype.setLogWriter=function(a){if(!a)throw new Error(\\\"Reference to the ILogWriter object cannot be NULL\\\");this._logWriter=a,this._enabled=!1},b.prototype.getLogWriter=function(){return this._logWriter},b.prototype.getEnabled=function(){return this._enabled},b.prototype.enable=function(){this._enabled=!0},b.prototype.disable=function(){this._enabled=!1},b.prototype.debug=function(a,b){this._log(a,f,b)},b.prototype.info=function(a,b){this._log(a,e,b)},b.prototype.warn=function(a,b){this._log(a,g,b)},b.prototype.error=function(a,b){this._log(a,h,b)},b.prototype._log=function(a,b,d){if(b==h||this._enabled){var e=\\\"\\\",f=new Date;e+=\\\"[\\\"+f.toTimeString()+\\\".\\\"+c(f.getMilliseconds())+\\\"] [\\\"+b+\\\"] \\\",e+=\\\"[\\\"+a+\\\"] \\\"+d,this._logWriter.write(e)}};var e=\\\"INFO\\\",f=\\\"DEBUG\\\",g=\\\"WARN\\\",h=\\\"ERROR\\\";a.Logger=b}(d),function(a){\\\"use strict\\\";function b(a,b){this._pluginName=a,this._eventName=b}var c=a.radio.Channel;b.prototype.getPluginName=function(){return this._pluginName},b.prototype.getEventName=function(){return this._eventName},b.prototype.getName=function(){return this._pluginName+c.SEPARATOR+this._eventName},a.Trigger=b}(d),function(a){\\\"use strict\\\";function b(a,b){this.name=a,this.data=b}b.SUCCESS=\\\"success\\\",b.ERROR=\\\"error\\\",b.createFromTrigger=function(a){return new b(a.getName())},a.Event=b}(d),function(a){\\\"use strict\\\";function b(){this._events={}}b.prototype.addEventListener=function(a,b,c){a&&b&&(c=c||window,this._events[a]=this._events[a]||[],this._events[a].push({cb:b,ctx:c}))},b.prototype.removeEventListener=function(a,b,c){if(a&&b){c=c||window;var d,e,f=!1;for(e in this._events)if(a===e){f=!0;break}if(f){for(d=this._events[e].length-1;d>=0;d--){var g=this._events[e][d];b===g.cb&&c===g.ctx&&this._events[e].splice(d,1)}this._events[e].length||delete this._events[e]}}},b.prototype.dispatchEvent=function(a){if(a.name){var b,c;for(b in this._events)if(this._events.hasOwnProperty(b)&&a.name===b){var d=this._events[b],e=d.slice(0),f=e.length;for(c=0;c<f;c++)e[c].cb.call(e[c].ctx,a);break}}},b.prototype.removeAllListeners=function(a){if(a){var b,c;for(c in this._events)if(this._events.hasOwnProperty(c)){for(b=this._events[c].length-1;b>=0;b--){var d=this._events[c][b];d.ctx===a&&this._events[c].splice(b,1)}this._events[c].length||delete this._events[c]}}else this._events={}},a.EventDispatcher=b}(d),function(a){\\\"use strict\\\";function b(){}function c(a,b){this.url=a||null,this.method=b,this._xmlhttp=null}function d(){d.__super__.constructor.call(this),this._connection=null}var e=a.Event,f=a.EventDispatcher;b.GET=\\\"GET\\\",d.RESPONSE=\\\"response\\\",d.INSTANCE=\\\"instance\\\",a.extend(d,f),d.prototype.close=function(){this.removeAllListeners(null)},d.prototype.load=function(a){a&&a.method&&a.url&&(a._xmlhttp=this._createCORSRequest(a),a._xmlhttp?a._xmlhttp.send():this._loadImage(a))},d.prototype._createCORSRequest=function(a){var b=null;if(\\\"undefined\\\"!=typeof window.XMLHttpRequest){var c=new window.XMLHttpRequest;\\\"withCredentials\\\"in c&&(b=c,b.open(a.method,a.url,!0))}if(null==b&&\\\"undefined\\\"!=typeof window.XDomainRequest&&(b=new window.XDomainRequest,b.open(a.method,a.url)),b){var f={};f[d.INSTANCE]=this;var g=this;b.onload=function(){return b.status&&parseInt(b.status,10)>=400?this.onerror():(f[d.RESPONSE]=b.responseText,void g.dispatchEvent(new e(e.SUCCESS,f)))},b.onerror=function(){g.dispatchEvent(new e(e.ERROR,f))}}return b},d.prototype._loadImage=function(a){this._connection||(this._connection=new Image,this._connection.alt=\\\"\\\"),this._connection.src=a.url;var b={};b[d.RESPONSE]=\\\"\\\",b[d.INSTANCE]=this,this.dispatchEvent(new e(e.SUCCESS,b))},a.URLRequestMethod=b,a.URLRequest=c,a.URLLoader=d}(d),function(a){\\\"use strict\\\";var b=\\\"js\\\",c=\\\"2.0.2.123\\\",d=\\\"150f2b\\\",e=4,f={};f.getVersion=function(){return b+\\\"-\\\"+c+\\\"-\\\"+d},f.getMajor=function(){return f.getNumberAtPosition(0)},f.getMinor=function(){return f.getNumberAtPosition(1)},f.getMicro=function(){return f.getNumberAtPosition(2)},f.getPatch=function(){return f.getNumberAtPosition(3)},f.getBuild=function(){return d},f.getApiLevel=function(){return e},f.getNumberAtPosition=function(a){return c.split(\\\".\\\")[a]},a.Version=f}(c),function(a){\\\"use strict\\\";function b(a,b){this._message=a,this._details=b}b.prototype.getMessage=function(){return this._message},b.prototype.getDetails=function(){return this._details},a.ErrorInfo=b}(c),function(a){\\\"use strict\\\";function b(){this.debugLogging=!1}a.HeartbeatConfig=b}(c),function(a){\\\"use strict\\\";function b(){}b.prototype.onError=function(a){},a.HeartbeatDelegate=b}(c),function(a){\\\"use strict\\\";function b(){}b.prototype.configure=function(a){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.bootstrap=function(a){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.setup=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.destroy=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.enable=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.disable=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.getName=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.isInitialized=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.resolveData=function(a){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},a.plugin.IPlugin=b}(d),function(a){\\\"use strict\\\";function b(a,b,c,d){this.trigger=a,this.action=c,this.plugin=b,this._paramMappings={},this.mergeParams(d)}var c=a.plugin.ParamMapping;b.prototype.mergeParams=function(a){if(a)for(var b=0;b<a.length;b++){var c=a[b];this._paramMappings[c.getKeyName()]=c}},b.prototype.getParams=function(){var a=[];for(var b in this._paramMappings)this._paramMappings.hasOwnProperty(b)&&a.push(this._paramMappings[b]);return a},b.prototype.addParam=function(a){this._paramMappings[a.getKeyName()]=a},b.prototype.removeParam=function(a,b){var d=new c(a,b);this._paramMappings.hasOwnProperty(d.getKeyName())&&delete this._paramMappings[d.getKeyName()]},a.plugin.Behaviour=b}(d),function(a){\\\"use strict\\\";function b(a,b,d){this._pluginName=a,this._key=b,this._paramName=d||a+c.SEPARATOR+b}var c=a.radio.Channel;b.prototype.getPluginName=function(){return this._pluginName},b.prototype.getKey=function(){return this._key},b.prototype.getKeyName=function(){return this._pluginName+c.SEPARATOR+this._key},b.prototype.getParamName=function(){return this._paramName},a.plugin.ParamMapping=b}(d),function(a){\\\"use strict\\\";function b(a){if(!a)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=a,this._plugins={},this._behaviours={},this._radio=new d(this._logger),this._dataChannel=this._radio.channel(g),this._ctrlChannel=this._radio.channel(h)}var c=a.Event,d=a.radio.Radio,e=a.radio.Channel,f=a.plugin.Behaviour;b.ERROR=\\\"error\\\",b.prototype.addPlugin=function(a){var b=a.getName();this._plugins[b]&&this._logger.warn(i,\\\"#addPlugin > Replacing plugin: \\\"+b),this._plugins[b]=a,a.bootstrap(this)},b.prototype.setupPlugins=function(){for(var a in this._plugins)this._plugins.hasOwnProperty(a)&&this._plugins[a].setup()},b.prototype.pluginExists=function(a){return!!this._plugins[a]},b.prototype.isPluginInitialized=function(a){return this._plugins[a]&&this._plugins[a].isInitialized()},b.prototype.on=function(a,b,c,d){this._dataChannel.on(a+e.SEPARATOR+b,c,d)},b.prototype.off=function(a,b,c,d){var f=a&&b?a+e.SEPARATOR+b:null;this._dataChannel.off(f,c,d)},b.prototype.trigger=function(a){var b=a.name,c=this._behaviours[b];if(c){var d,e,f,g,h,i={},j={};for(d=0;d<c.length;d++)if(f=c[d],g=f.getParams())for(e=0;e<g.length;e++)h=g[e],i[h.getPluginName()]=i[h.getPluginName()]||[],h.key in i[h.getPluginName()]||i[h.getPluginName()].push(h.getKey());for(var k in i)i.hasOwnProperty(k)&&(j[k]=this.request(k,i[k]));for(d=0;d<c.length;d++){f=c[d];var l={_behaviour:f,_eventData:a.data||{}};if(g=f.getParams()){for(e=0;e<g.length;e++)h=g[e],l[h.getParamName()]=j[h.getPluginName()]?j[h.getPluginName()][h.getKey()]:null;this.command(f.plugin.getName(),f.action,l)}}}this._dataChannel.trigger(a)},b.prototype.request=function(a,b){var c=this._plugins[a];return c&&b&&0!=b.length?c.resolveData(b):null},b.prototype.raise=function(a){this._errorInfo=a;var d=new c(b.ERROR,a);this._ctrlChannel.trigger(d)},b.prototype.getErrorInfo=function(){return this._errorInfo},b.prototype.destroy=function(){this._radio.shutdown();for(var a in this._plugins)this._plugins.hasOwnProperty(a)&&this._plugins[a].destroy()},b.prototype.comply=function(a,b,c){this._dataChannel.comply(a.getName()+e.SEPARATOR+b,c,a)},b.prototype.command=function(a,b,c){this._dataChannel.command(a+e.SEPARATOR+b,c)},b.prototype.registerBehaviour=function(a,b,c,d){var e=a.getName(),g=new f(a,b,c,d);this._behaviours[e]=this._behaviours[e]||[],this._behaviours[e].push(g)};var g=\\\"data_channel\\\",h=\\\"ctrl_channel\\\",i=\\\"plugin::PluginManager\\\";a.plugin.PluginManager=b}(d),function(a,b){\\\"use strict\\\";function c(a){this._name=a,this._isInitialized=!1,this._isDestroyed=!1,this._isEnabled=!0,this._dataResolver={},this._logTag=\\\"plugin::\\\"+this.getName(),this._logger=new d}var d=a.Logger,e=a.Trigger,f=a.Event,g=b.ErrorInfo;c.INITIALIZED=\\\"initialized\\\",c.prototype.configure=function(a){},c.prototype.bootstrap=function(a){this._pluginManager=a,this._isDestroyed&&this._pluginManager.raise(new g(\\\"Invalid state.\\\",\\\"Plugin already destroyed.\\\"))},c.prototype.setup=function(){this._trigger(c.INITIALIZED),this._isInitialized=!0},c.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._teardown())},c.prototype.enable=function(){this._isEnabled=!0,this._enabled()},c.prototype.disable=function(){this._isEnabled=!1,this._disabled()},c.prototype.getName=function(){return this._name},c.prototype.getLogger=function(){return this._logger},c.prototype.isInitialized=function(){return this._isInitialized},c.prototype.resolveData=function(a){if(!this._isEnabled||!this._isInitialized)return this._logger.warn(this._logTag,\\\"Unable to retrieve plugin data. Plugin: \\\"+this._name+\\\". Enabled: \\\"+this._isEnabled+\\\". Initialized: \\\"+this._isInitialized+\\\".\\\"),null;if(\\\"function\\\"==typeof this._dataResolver)return this._dataResolver.call(this,a);var b=null;if(a)for(var c=0;c<a.length;c++){var d=a[c];this._dataResolver.hasOwnProperty(d)&&(b=b||{},\\\"function\\\"==typeof this._dataResolver[d]?b[d]=this._dataResolver[d].call(this):b[d]=this._dataResolver[d])}return b},c.prototype.toString=function(){return\\\"<plugin: \\\"+this._name+\\\">\\\"},c.prototype._enabled=function(){},c.prototype._disabled=function(){},c.prototype._teardown=function(){},c.prototype._canProcess=function(){return this._isEnabled?!this._isDestroyed||(this._logger.error(this._logTag,\\\"Plugin destroyed.\\\"),!1):(this._logger.error(this._logTag,\\\"Plugin disabled.\\\"),!1)},c.prototype._trigger=function(a,b){var c=f.createFromTrigger(new e(this.getName(),a));c.data=b,this._pluginManager.trigger(c)},a.plugin.BasePlugin=c}(d,c),function(a){\\\"use strict\\\";function b(a,b,c){this.name=a,this.interval=b,this.isActive=!1,this.repeatCount=\\\"undefined\\\"!=typeof c?c:e,this._nextTickTimestamp=0,this.reset()}function c(a,b){if(!a)throw new Error(\\\"Reference to the ClockService object cannot be NULL\\\");if(this._service=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b,this._isDestroyed=!1,this._timers={};var c=this;this._clock=window.setInterval(function(){c._onTick()},1e3*f)}b.prototype.reset=function(){this.tick=0,this._createdTimestamp=(new Date).getTime(),this._updateNextTickTimestamp()},b.prototype.shouldTick=function(){var a=(new Date).getTime();return a>this._nextTickTimestamp-f/2&&(this.tick++,this._updateNextTickTimestamp(),!0)},b.prototype._updateNextTickTimestamp=function(){this._nextTickTimestamp=this._createdTimestamp+1e3*this.interval*(this.tick+1)},c.prototype.createTimer=function(a,c,d){this._timers[a]=new b(a,c,d)},c.prototype.destroyTimer=function(a){delete this._timers[a]},c.prototype.resumeTimer=function(a,b){b=\\\"undefined\\\"!=typeof b&&b,this._logger.debug(d,\\\"#resumeTimer(name=\\\"+a+\\\", reset=\\\"+b+\\\")\\\");var c=this._timers[a];c&&(c.isActive=!0,b&&c.reset())},c.prototype.pauseTimer=function(a,b){b=\\\"undefined\\\"!=typeof b&&b,this._logger.debug(d,\\\"#pauseTimer(name=\\\"+a+\\\", reset=\\\"+b+\\\")\\\");var c=this._timers[a];c&&(c.isActive=!1,b&&c.reset())},c.prototype.isTimerPaused=function(a){var b=this._timers[a];return!!b&&!b.isActive},c.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._timers={},window.clearInterval(this._clock))},c.prototype._onTick=function(){for(var a in this._timers)if(this._timers.hasOwnProperty(a)){var b=this._timers[a];b.isActive&&b.shouldTick()&&(b.interval>1&&this._logger.debug(d,\\\"#_onTick() > \\\"+b.name+\\\"(\\\"+b.tick+\\\" | \\\"+b.repeatCount+\\\")\\\"),0!=b.repeatCount?(this._service.onTick(b.name,b.interval,b.tick),b.repeatCount!=e&&b.repeatCount--):this.destroyTimer(b.name))}};var d=\\\"service.clock::TimerManager\\\",e=-1,f=.25;a.clock.TimerDescriptor=b,a.clock.TimerManager=c}(e),function(a,b,c){\\\"use strict\\\";function d(a){if(d.__super__.constructor.call(this,h),!a)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=a,this._timerManager=new e(this,this._logger),this._setupDataResolver()}var e=c.clock.TimerManager,f=b.StringUtils,g=a.plugin.BasePlugin;a.extend(d,g),d.prototype.bootstrap=function(a){d.__super__.bootstrap.call(this,a),this._pluginManager.comply(this,i,this._cmdCreate),this._pluginManager.comply(this,k,this._cmdResume),this._pluginManager.comply(this,j,this._cmdPause),this._pluginManager.comply(this,l,this._cmdDestroy)},d.prototype._teardown=function(){this._timerManager.destroy()},d.prototype._cmdCreate=function(a){var b=a[o]||s;this._timerManager.createTimer(a[m],a[n],b)},d.prototype._cmdPause=function(a){this._timerManager.pauseTimer(a[m],!!a[q])},d.prototype._cmdResume=function(a){this._timerManager.resumeTimer(a[m],!!a[q])},d.prototype._cmdDestroy=function(a){this._timerManager.destroyTimer(a[m])},d.prototype.onTick=function(a,b,c){a+=\\\".tick\\\";var d={};d[m]=a,d[n]=b,d[p]=c,this._trigger(a,d)},d.prototype._setupDataResolver=function(){var a={},b=this._timerManager;a[r]=function(a){return b.isTimerPaused(a)},this._dataResolver=function(b){if(!b||0==b.length)return null;for(var c=null,d=0;d<b.length;d++){var e=b[d];if(c=c||{},f.startsWith(e,r)){var g=e.split(r+\\\".\\\");g.length>0&&(c[e]=a[r].call(this,g[1]))}}return c}};var h=\\\"service.clock\\\",i=\\\"create\\\",j=\\\"pause\\\",k=\\\"resume\\\",l=\\\"destroy\\\",m=\\\"name\\\",n=\\\"interval\\\",o=\\\"repeat_count\\\",p=\\\"tick\\\",q=\\\"reset\\\",r=\\\"is_paused\\\",s=-1;c.clock.ClockService=d}(d,b,e),function(a,b,c){\\\"use strict\\\";function d(a,b){if(this._logger=new e,this._pluginManager=new f(this._logger),this._pluginManager.addPlugin(new g(this._logger)),b)for(var c=0;c<b.length;c++)this._pluginManager.addPlugin(b[c]);this._pluginManager.setupPlugins(),this._isDestroyed=!1}var e=a.Logger,f=a.plugin.PluginManager,g=b.clock.ClockService;d.prototype.configure=function(a){if(!a)throw new Error(\\\"Configuration object cannot be NULL.\\\");a.debugLogging?this._logger.enable():this._logger.disable(),this._isDestroyed&&this._logger.error(h,\\\"Instance is destroyed.\\\")},d.prototype.destroy=function(){this._isDestroyed||(this._pluginManager.destroy(),this._isDestroyed=!0)};var h=\\\"Heartbeat\\\";c.Heartbeat=d}(d,e,c),a.ADB||(a.ADB={}),a.ADB.core||(a.ADB.core=d),a.ADB.va||(a.ADB.va=c),a.ADB.va.utils||(a.ADB.va.utils=b),a.ADB.va.plugins||(a.ADB.va.plugins={})}(this);\\n\\n// VideoPlayerPlugin\\n!function(a){if(\\\"undefined\\\"==typeof b)var b={};!function(a){\\\"use strict\\\";var b={};b.ASSET_TYPE_VOD=\\\"vod\\\",b.ASSET_TYPE_LIVE=\\\"live\\\",b.ASSET_TYPE_LINEAR=\\\"linear\\\",a.AssetType=b}(b),function(a){\\\"use strict\\\";function b(){this.playerName=null,this.name=null,this.position=null,this.startTime=null}b.prototype.toString=function(){return\\\"playerName=\\\"+this.playerName+\\\", name=\\\"+this.name+\\\", position=\\\"+this.position+\\\", startTime=\\\"+this.startTime},a.AdBreakInfo=b}(b),function(a){\\\"use strict\\\";function b(){this.id=null,this.name=null,this.length=null,this.position=null}b.prototype.toString=function(){return\\\"id=\\\"+this.id+\\\", name=\\\"+this.name+\\\", length=\\\"+this.length+\\\", position=\\\"+this.position},a.AdInfo=b}(b),function(a){\\\"use strict\\\";function b(){this.name=null,this.length=null,this.position=null,this.startTime=null}b.prototype.toString=function(){return\\\"name=\\\"+this.name+\\\", length=\\\"+this.length+\\\", position=\\\"+this.position+\\\", startTime=\\\"+this.startTime},a.ChapterInfo=b}(b),function(a){\\\"use strict\\\";function b(){this.bitrate=null,this.fps=null,this.droppedFrames=null,this.startupTime=null}b.prototype.toString=function(){return\\\"bitrate=\\\"+this.bitrate+\\\", fps=\\\"+this.fps+\\\", droppedFrames=\\\"+this.droppedFrames+\\\", startupTime=\\\"+this.startupTime},a.QoSInfo=b}(b),function(a){\\\"use strict\\\";function b(){this.playerName=null,this.id=null,this.name=null,this.length=null,this.playhead=null,this.streamType=null,this.resumed=!1}b.prototype.toString=function(){return\\\"playerName=\\\"+this.playerName+\\\", id=\\\"+this.id+\\\", name=\\\"+this.name+\\\", length=\\\"+this.length+\\\", playhead=\\\"+this.playhead+\\\", streamType=\\\"+this.streamType+\\\", resumed=\\\"+this.resumed},a.VideoInfo=b}(b),function(a){\\\"use strict\\\";function b(){this.debugLogging=!1}a.VideoPlayerPluginConfig=b}(b),function(a){\\\"use strict\\\";function b(){}b.prototype.getVideoInfo=function(){throw new Error(\\\"Implementation error: Method must be overridden.\\\")},b.prototype.getAdBreakInfo=function(){return null},b.prototype.getAdInfo=function(){return null},b.prototype.getChapterInfo=function(){return null},b.prototype.getQoSInfo=function(){return null},a.VideoPlayerPluginDelegate=b}(b),function(a,b){\\\"use strict\\\";function c(a){if(c.__super__.constructor.call(this,h),!a)throw new Error(\\\"PlayerPlugin delegate cannot be NULL.\\\");this._delegate=a,this._isTrackingSessionActive=!1,this._isTrackingSessionStarted=!1,this._isTrackingAd=!1,this._playheadTimer=null,this._previousPlayhead=-1,this._stalledPlayheadCount=0,this._playheadStalled=!1,this._videoIdle=!1,this._setupDataResolver()}var d=a.plugin.ParamMapping,e=a.Trigger,f=a.plugin.BasePlugin,g=b.VideoPlayerPluginConfig;a.extend(c,f),c.prototype.configure=function(a){if(!a)throw new Error(\\\"Reference to the configuration data cannot be NULL.\\\");if(!(a instanceof g))throw new Error(\\\"Expected config data to be instance of VideoPlayerPluginConfig.\\\");a.debugLogging?this._logger.enable():this._logger.disable(),this._logger.debug(this._logTag,\\\"#configure(debugLogging=\\\"+a.debugLogging+\\\")\\\")},c.prototype.bootstrap=function(a){c.__super__.bootstrap.call(this,a),this._registerCommands(),this._registerBehaviours()},c.prototype._cmdVideoIdleStart=function(a){this._logger.info(this._logTag,\\\"#_cmdVideoIdleStart()\\\"),this._videoIdle=!0},c.prototype._cmdVideoIdleResume=function(a){this._logger.info(this._logTag,\\\"#_cmdVideoIdleResume()\\\"),this._videoIdle&&(this._trigger(o),this._trigger(p),a.isInChapter&&this._trigger(A),a.isInAd&&(this._trigger(u),this._isTrackingAd=!0)),this._videoIdle=!1},c.prototype.trackSessionStart=function(){if(this._logger.info(this._logTag,\\\"#trackSessionStart()\\\"),this._canProcess()){if(!this._isTrackingSessionActive)return void this._logger.warn(this._logTag,\\\"#trackSessionStart() > No active tracking session.\\\");if(this._isTrackingSessionStarted)return void this._logger.info(this._logTag,\\\"#trackSessionStart() > Tracking session already started.\\\");this._trigger(o),this._isTrackingSessionStarted=!0;var a=this._dataResolver([\\\"video.resumed\\\"]);a.hasOwnProperty(\\\"video.resumed\\\")&&a[\\\"video.resumed\\\"]&&this._trigger(p)}},c.prototype.trackVideoLoad=function(){this._logger.info(this._logTag,\\\"#trackVideoLoad()\\\"),this._canProcess()&&(this._trigger(m),this._isTrackingSessionActive=!0,this._isTrackingSessionStarted=!1)},c.prototype.trackVideoUnload=function(){if(this._logger.info(this._logTag,\\\"#trackVideoUnload()\\\"),this._canProcess()){if(!this._isTrackingSessionActive)return void this._logger.warn(this._logTag,\\\"#trackVideoUnload() > No active tracking session.\\\");this._stopPlayheadTimer(),this._trigger(n),this._isTrackingSessionActive=!1,this._isTrackingSessionStarted=!1,this._videoIdle=!1}},c.prototype.trackPlay=function(){this._logger.info(this._logTag,\\\"#trackPlay()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackPlay\\\")&&(this._trigger(s),this._startPlayheadTimer())},c.prototype.trackPause=function(){if(this._logger.info(this._logTag,\\\"#trackPause()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackPause\\\")){this._stopPlayheadTimer();var a={};a[H]=!1,this._trigger(t,a)}},c.prototype.trackBufferStart=function(){this._logger.info(this._logTag,\\\"#trackBufferStart()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackBufferStart\\\")&&(this._stopPlayheadTimer(),this._trigger(w))},c.prototype.trackBufferComplete=function(){this._logger.info(this._logTag,\\\"#trackBufferComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackBufferComplete\\\")&&(this._trigger(x),this._startPlayheadTimer())},c.prototype.trackSeekStart=function(){this._logger.info(this._logTag,\\\"#trackSeekStart()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackSeekStart\\\")&&(this._stopPlayheadTimer(),this._trigger(y))},c.prototype.trackSeekComplete=function(){if(this._logger.info(this._logTag,\\\"#trackSeekComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackSeekComplete\\\")){this._trigger(z),this._startPlayheadTimer();var a=this._dataResolver([\\\"ad.isInAd\\\"]);this._isTrackingAd=a.hasOwnProperty(\\\"ad.isInAd\\\")&&a[\\\"ad.isInAd\\\"]}},c.prototype.trackComplete=function(a){if(this._logger.info(this._logTag,\\\"#trackComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackComplete\\\")){var b={};b[G]=a,this._stopPlayheadTimer(),this._trigger(q,b)}},c.prototype.trackTimedMetadata=function(a){this._logger.info(this._logTag,\\\"#trackComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackTimedMetadata\\\")&&this._trigger(r,a)},c.prototype.trackChapterStart=function(){this._logger.info(this._logTag,\\\"#trackChapterStart()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"#trackChapterStart\\\")&&this._trigger(A)},c.prototype.trackChapterComplete=function(){this._logger.info(this._logTag,\\\"trackChapterComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackChapterComplete\\\")&&this._trigger(B)},c.prototype.trackAdStart=function(){this._logger.info(this._logTag,\\\"#trackAdStart()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackAdStart\\\")&&(this._trigger(u),this._isTrackingAd=!0)},c.prototype.trackAdComplete=function(){this._logger.info(this._logTag,\\\"#trackAdComplete()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackAdComplete\\\")&&(this._trigger(v),this._isTrackingAd=!1)},c.prototype.trackBitrateChange=function(){this._logger.info(this._logTag,\\\"#trackBitrateChange()\\\"),this._canProcess()&&this._startSessionIfNeeded(\\\"trackBitrateChange\\\")&&this._trigger(C)},c.prototype.trackVideoPlayerError=function(a){if(this._logger.info(this._logTag,\\\"#trackVideoPlayerError(errorId=\\\"+a+\\\")\\\"),this._startSessionIfNeeded(\\\"trackVideoPlayerError\\\")){var b={};b[I]=l,b[J]=a,this._trigger(D,b)}},c.prototype.trackApplicationError=function(a){if(this._logger.info(this._logTag,\\\"#trackApplicationError(errorId=\\\"+a+\\\")\\\"),this._startSessionIfNeeded(\\\"trackApplicationError\\\")){var b={};b[I]=k,b[J]=a,this._trigger(D,b)}},c.prototype._registerCommands=function(){this._pluginManager.comply(this,\\\"handleVideoIdleStart\\\",this._cmdVideoIdleStart),this._pluginManager.comply(this,\\\"handleVideoIdleResume\\\",this._cmdVideoIdleResume)},c.prototype._registerBehaviours=function(){this._pluginManager.registerBehaviour(new e(j,E),this,\\\"handleVideoIdleStart\\\"),this._pluginManager.registerBehaviour(new e(j,F),this,\\\"handleVideoIdleResume\\\",[new d(i,\\\"ad.isInAd\\\",\\\"isInAd\\\"),new d(i,\\\"chapter.isInChapter\\\",\\\"isInChapter\\\")])},c.prototype._setupDataResolver=function(){function a(){return g.video?g.video:(g.video=h._delegate.getVideoInfo(),h._logger.info(h._logTag,\\\"Data from delegate > VideoInfo: \\\"+g.video),g.video)}function b(){return g.ad?g.ad:(g.ad=h._delegate.getAdInfo(),h._logger.info(h._logTag,\\\"Data from delegate > AdInfo: \\\"+g.ad),g.ad)}function c(){return g.pod?g.pod:(g.pod=h._delegate.getAdBreakInfo(),h._logger.info(h._logTag,\\\"Data from delegate > AdBreakInfo: \\\"+g.pod),g.pod)}function d(){return g.chapter?g.chapter:(g.chapter=h._delegate.getChapterInfo(),h._logger.info(h._logTag,\\\"Data from delegate > ChapterInfo: \\\"+g.chapter),g.chapter)}function e(){return g.qos?g.qos:(g.qos=h._delegate.getQoSInfo(),h._logger.info(h._logTag,\\\"Data from delegate > QoSInfo: \\\"+g.qos),g.qos)}var f={},g={},h=this;f[\\\"video.id\\\"]=function(){var b=a(),c=b?b.id:null;return h._logger.debug(h._logTag,\\\"Resolving video.id: \\\"+c),c},f[\\\"video.name\\\"]=function(){var b=a(),c=b?b.name:null;return h._logger.debug(h._logTag,\\\"Resolving video.name: \\\"+c),c},f[\\\"video.length\\\"]=function(){var b=a(),c=b?b.length:NaN;return h._logger.debug(h._logTag,\\\"Resolving video.length: \\\"+c),c},f[\\\"video.playerName\\\"]=function(){var b=a(),c=b?b.playerName:null;return h._logger.debug(h._logTag,\\\"Resolving video.playerName: \\\"+c),c},f[\\\"video.streamType\\\"]=function(){var b=a(),c=b?b.streamType:null;return h._logger.debug(h._logTag,\\\"Resolving video.streamType: \\\"+c),c},f[\\\"video.playhead\\\"]=function(){var b=a(),c=b?b.playhead:NaN;return h._logger.debug(h._logTag,\\\"Resolving video.playhead: \\\"+c),c},f[\\\"video.resumed\\\"]=function(){var b=a(),c=!!b&&b.resumed;return h._logger.debug(h._logTag,\\\"Resolving video.resumed: \\\"+c),c},f[\\\"video.playheadStalled\\\"]=function(){return this._playheadStalled},f[\\\"pod.name\\\"]=function(){var a=c(),b=a?a.name:null;return h._logger.debug(h._logTag,\\\"Resolving pod.name: \\\"+b),b},f[\\\"pod.playerName\\\"]=function(){var a=c(),b=a?a.playerName:null;return h._logger.debug(h._logTag,\\\"Resolving pod.playerName: \\\"+b),b},f[\\\"pod.position\\\"]=function(){var a=c(),b=a?a.position:NaN;return h._logger.debug(h._logTag,\\\"Resolving pod.position: \\\"+b),b},f[\\\"pod.startTime\\\"]=function(){var a=c(),b=a?a.startTime:NaN;return h._logger.debug(h._logTag,\\\"Resolving pod.startTime: \\\"+b),b},f[\\\"ad.isInAd\\\"]=function(){var a=b(),c=null!=a;return h._logger.debug(h._logTag,\\\"Resolving ad.isInAd: \\\"+c),c},f[\\\"ad.isInAdBreak\\\"]=function(){var a=c(),b=null!=a;return h._logger.debug(h._logTag,\\\"Resolving ad.isInAdBreak: \\\"+b),b},f[\\\"ad.id\\\"]=function(){var a=b(),c=a?a.id:null;return h._logger.debug(h._logTag,\\\"Resolving ad.id: \\\"+c),c},f[\\\"ad.name\\\"]=function(){var a=b(),c=a?a.name:null;return h._logger.debug(h._logTag,\\\"Resolving ad.name: \\\"+c),c},f[\\\"ad.length\\\"]=function(){var a=b(),c=a?a.length:NaN;return h._logger.debug(h._logTag,\\\"Resolving ad.length: \\\"+c),c},f[\\\"ad.position\\\"]=function(){var a=b(),c=a?a.position:NaN;return h._logger.debug(h._logTag,\\\"Resolving ad.position: \\\"+c),c},f[\\\"chapter.isInChapter\\\"]=function(){var a=d(),b=null!=a;return h._logger.debug(h._logTag,\\\"Resolving chapter.isInChapter: \\\"+b),b},f[\\\"chapter.name\\\"]=function(){var a=d(),b=a?a.name:null;return h._logger.debug(h._logTag,\\\"Resolving chapter.name: \\\"+b),b},f[\\\"chapter.length\\\"]=function(){var a=d(),b=a?a.length:NaN;return h._logger.debug(h._logTag,\\\"Resolving chapter.length: \\\"+b),b},f[\\\"chapter.position\\\"]=function(){var a=d(),b=a?a.position:NaN;return h._logger.debug(h._logTag,\\\"Resolving chapter.position: \\\"+b),b},f[\\\"chapter.startTime\\\"]=function(){var a=d(),b=a?a.startTime:NaN;return h._logger.debug(h._logTag,\\\"Resolving chapter.startTime: \\\"+b),b},f[\\\"qos.bitrate\\\"]=function(){var a=e(),b=a?a.bitrate:NaN;return h._logger.debug(h._logTag,\\\"Resolving qos.bitrate: \\\"+b),b},f[\\\"qos.fps\\\"]=function(){var a=e(),b=a?a.fps:NaN;return h._logger.debug(h._logTag,\\\"Resolving qos.fps: \\\"+b),b},f[\\\"qos.droppedFrames\\\"]=function(){var a=e(),b=a?a.droppedFrames:NaN;return h._logger.debug(h._logTag,\\\"Resolving qos.droppedFrames: \\\"+b),b},f[\\\"qos.startupTime\\\"]=function(){var a=e(),b=a?1e3*a.startupTime:NaN;return h._logger.debug(h._logTag,\\\"Resolving qos.startupTime: \\\"+b),b},this._dataResolver=function(a){if(!a||0==a.length)return null;g={};for(var b=null,c=0;c<a.length;c++){var d=a[c];b=b||{},b[d]=f.hasOwnProperty(d)?f[d].call(this):null}return b}},c.prototype._trackPlayheadStall=function(){this._canProcess()&&(this._playheadStalled||(this._logger.info(this._logTag,\\\"#_trackPlayheadStall()\\\"),this._stalledPlayheadCount=0,this._playheadStalled=!0,this._trigger(t)))},c.prototype._trackExitStall=function(){this._canProcess()&&(this._stalledPlayheadCount=0,this._playheadStalled&&(this._logger.info(this._logTag,\\\"#_trackExitStall()\\\"),this._playheadStalled=!1,this._trigger(s)))},c.prototype._startPlayheadTimer=function(){var a=this;this._playheadTimer||(this._playheadTimer=setInterval(function(){if(a._canProcess()){var b=a._dataResolver([\\\"ad.isInAd\\\",\\\"video.playhead\\\"]);if(a._isTrackingAd)a._playheadStalled&&a._trackExitStall(),b.hasOwnProperty(\\\"ad.isInAd\\\")&&!b[\\\"ad.isInAd\\\"]&&(a._isTrackingAd=!1);else{var c=b[\\\"video.playhead\\\"];c!=a._previousPlayhead?a._trackExitStall():a._previousPlayhead>=0&&c==a._previousPlayhead&&(a._stalledPlayheadCount++,a._stalledPlayheadCount==L&&a._trackPlayheadStall()),a._previousPlayhead=c}}},K))},c.prototype._stopPlayheadTimer=function(){this._playheadTimer&&(clearInterval(this._playheadTimer),this._playheadTimer=null),this._trackExitStall()},c.prototype._startSessionIfNeeded=function(a){return this._isTrackingSessionActive?(this._isTrackingSessionStarted||(this._logger.info(this._logTag,\\\"#\\\"+a+\\\"() > Tracking session auto-start.\\\"),this.trackSessionStart()),!0):(this._logger.warn(this._logTag,\\\"#\\\"+a+\\\"() > No active tracking session.\\\"),!1)};var h=\\\"player\\\",i=h,j=\\\"adobe-heartbeat\\\",k=\\\"sourceErrorExternal\\\",l=\\\"sourceErrorSDK\\\",m=\\\"video_load\\\",n=\\\"video_unload\\\",o=\\\"video_start\\\",p=\\\"video_resume\\\",q=\\\"video_complete\\\",r=\\\"timed_metadata\\\",s=\\\"play\\\",t=\\\"pause\\\",u=\\\"ad_start\\\",v=\\\"ad_complete\\\",w=\\\"buffer_start\\\",x=\\\"buffer_complete\\\",y=\\\"seek_start\\\",z=\\\"seek_complete\\\",A=\\\"chapter_start\\\",B=\\\"chapter_complete\\\",C=\\\"bitrate_change\\\",D=\\\"track_error\\\",E=\\\"video_idle_start\\\",F=\\\"video_idle_resume\\\",G=\\\"callback\\\",H=\\\"filter_report\\\",I=\\\"source\\\",J=\\\"error_id\\\",K=1001,L=2;b.VideoPlayerPlugin=c}(a.ADB.core,b),a.ADB.va.plugins.videoplayer||(a.ADB.va.plugins.videoplayer=b)}(this);\\n\\n// AdobeHeartbeatPlugin\\n!function(a){if(\\\"undefined\\\"==typeof b)var b={};b.clock||(b.clock={}),b.context||(b.context={}),b.filter||(b.filter={}),b.model||(b.model={}),b.network||(b.network={}),function(a,b){\\\"use strict\\\";function c(a,b,c,d,e){if(!b)throw new Error(\\\"Reference to the channel object cannot be NULL\\\");if(this._channel=b,!a)throw new Error(\\\"Reference to the pluginManager object cannot be NULL\\\");if(this._pluginManager=a,!e)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logTag=\\\"ah::Timer.\\\"+c,this._logger=e,this._isDestroyed=!1,this._createTimer(c,d),this._installHandlers()}var d=a.Event;c.KEY_NAME=\\\"name\\\",c.KEY_INTERVAL=\\\"interval\\\",c.KEY_RESET=\\\"reset\\\",c.prototype.resume=function(a){this._logger.debug(this._logTag,\\\"Starting timer: \\\"+this._name);var b={};b[c.KEY_NAME]=e+\\\".\\\"+this._name,b[c.KEY_RESET]=a,this._pluginManager.command(f,i,b)},c.prototype.pause=function(a){this._logger.debug(this._logTag,\\\"Stopping timer: \\\"+this._name);var b={};b[c.KEY_NAME]=e+\\\".\\\"+this._name,b[c.KEY_RESET]=a,this._pluginManager.command(f,h,b)},c.prototype.destroy=function(){if(!this._isDestroyed){this._isDestroyed=!0,this._uninstallHandlers();var a={};a[c.KEY_NAME]=e+\\\".\\\"+this._name,this._pluginManager.command(f,j,a)}},c.prototype.setInterval=function(a){var b=k+\\\".\\\"+e+\\\".\\\"+this._name,c=this._pluginManager.request(f,[b])[b];this.pause(!0),this._createTimer(this._name,a),c||this.resume(!0)},c.prototype._cmdResume=function(a){var b=!1;null!=a&&a.hasOwnProperty(c.KEY_RESET)&&(b=a[c.KEY_RESET]),this.resume(b)},c.prototype._cmdPause=function(a){var b=!1;null!=a&&a.hasOwnProperty(c.KEY_RESET)&&(b=a[c.KEY_RESET]),this.pause(b)},c.prototype._onTick=function(a,b){this._channel.trigger(new d(\\\"clock:\\\"+this._name+\\\".tick\\\",b))},c.prototype._installHandlers=function(){this._channel.comply(\\\"clock:\\\"+this._name+\\\".resume\\\",this._cmdResume,this),this._channel.comply(\\\"clock:\\\"+this._name+\\\".pause\\\",this._cmdPause,this),this._pluginManager.on(f,e+\\\".\\\"+this._name+\\\".tick\\\",this._onTick,this)},c.prototype._uninstallHandlers=function(){this._channel.off(null,null,this),this._pluginManager.off(null,null,null,this)},c.prototype._createTimer=function(a,b){this._name=a,this._interval=b;var d={};d[c.KEY_NAME]=e+\\\".\\\"+this._name,d[c.KEY_INTERVAL]=this._interval,this._pluginManager.command(f,g,d)};var e=\\\"heartbeat\\\",f=\\\"service.clock\\\",g=\\\"create\\\",h=\\\"pause\\\",i=\\\"resume\\\",j=\\\"destroy\\\",k=\\\"is_paused\\\";b.clock.Timer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,d){c.__super__.constructor.call(this,a,b,f,h,d)}var d=a.Event,e=b.clock.Timer;a.extend(c,e),c.prototype._onCheckStatusComplete=function(a){var b=a.data[l];if(this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete(interval=\\\"+b+\\\")\\\"),b){if(b==this._interval)return void this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete() > Interval value not changed.\\\");b>g?(this._logger.warn(this._logTag,\\\"#_onCheckStatusComplete() > Interval value too large: \\\"+b),this.setInterval(g)):(this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete() > Interval changed to: \\\"+b),this.setInterval(b))}else this._logger.warn(this._logTag,\\\"#_onCheckStatusComplete() > Invalid interval value.\\\"),this.setInterval(h)},c.prototype._getSettings=function(a){this._logger.debug(this._logTag,\\\"#_getSettings()\\\"),this._channel.trigger(new d(i))},c.prototype._installHandlers=function(){c.__super__._installHandlers.call(this),this._channel.on(j,this._getSettings,this),this._channel.on(k,this._onCheckStatusComplete,this),this._channel.reply(l,function(){return this._interval},this)};var f=\\\"check_status\\\",g=600,h=60,i=\\\"clock:check_status.tick\\\",j=\\\"clock:check_status.get_settings\\\",k=\\\"net:check_status_complete\\\",l=\\\"check_status_interval\\\";b.clock.CheckStatusTimer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,d){c.__super__.constructor.call(this,a,b,e,f,d)}var d=b.clock.Timer;a.extend(c,d),c.prototype._onCheckStatusComplete=function(a){var b=a.data[g];if(this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete(interval=\\\"+b+\\\")\\\"),b){if(b==this._interval)return void this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete() > Interval value not changed.\\\");this._logger.debug(this._logTag,\\\"#_onCheckStatusComplete() > Interval changed to: \\\"+b),this.setInterval(b)}else this._logger.warn(this._logTag,\\\"#_onCheckStatusComplete() > Invalid interval value.\\\"),this.setInterval(f)},c.prototype._installHandlers=function(){c.__super__._installHandlers.call(this),this._channel.on(h,this._onCheckStatusComplete,this),this._channel.reply(g,function(){return this._interval},this)};var e=\\\"reporting\\\",f=10,g=\\\"reporting_interval\\\",h=\\\"net:check_status_complete\\\";b.clock.ReportingTimer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,d){c.__super__.constructor.call(this,a,b,e,f,d)}var d=b.clock.Timer;a.extend(c,d);var e=\\\"idle\\\",f=1800;b.clock.IdleTimer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,d){c.__super__.constructor.call(this,a,b,e,f,d)}var d=b.clock.Timer;a.extend(c,d);var e=\\\"flush_filter\\\",f=.25;b.clock.FlushFilterTimer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,c){if(!a)throw new Error(\\\"Reference to the pluginManager object cannot be NULL\\\");if(!b)throw new Error(\\\"Reference to the channel object cannot be NULL\\\");if(!c)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._isDestroyed=!1,this._reportingTimer=new f(a,b,c),this._checkStatusTimer=new d(a,b,c),this._flushFilterTimer=new e(a,b,c),this._idleTimer=new g(a,b,c)}var d=b.clock.CheckStatusTimer,e=b.clock.FlushFilterTimer,f=b.clock.ReportingTimer,g=b.clock.IdleTimer;c.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._reportingTimer.destroy(),this._checkStatusTimer.destroy(),this._flushFilterTimer.destroy(),this._idleTimer.destroy())},b.clock.Clock=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b){this.value=a,this.hint=b}function d(a){this.realm=a,this.data={}}c.HINT_SHORT=\\\"short\\\",d.prototype.setField=function(a,b,d){this.data[a]=new c(b,d)},d.prototype._createAccessor=function(a,b,c){var d=this;return function(){return arguments.length&&(d[a]=arguments[0],d.setField(b,arguments[0],c)),d[a]}},b.model.Dao=d,b.model.DaoField=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"asset\\\"),this.adId=this._createAccessor(\\\"_adId\\\",\\\"ad_id\\\",null),this.sid=this._createAccessor(\\\"_sid\\\",\\\"ad_sid\\\",null),this.resolver=this._createAccessor(\\\"_resolver\\\",\\\"resolver\\\",null),this.podId=this._createAccessor(\\\"_podId\\\",\\\"pod_id\\\",null),this.podPosition=this._createAccessor(\\\"_podPosition\\\",\\\"pod_position\\\",null),this.podOffset=this._createAccessor(\\\"_podOffset\\\",\\\"pod_offset\\\",null),this.podName=this._createAccessor(\\\"_podName\\\",\\\"pod_name\\\",null),this.adLength=this._createAccessor(\\\"_adLength\\\",\\\"ad_length\\\",null),this.adName=this._createAccessor(\\\"_adName\\\",\\\"ad_name\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.adId(a.adId()),this.sid(a.sid()),this.resolver(a.resolver()),this.podId(a.podId()),this.podPosition(a.podPosition()),this.podOffset(a.podOffset()),this.podName(a.podName()),this.adLength(a.adLength()),this.adName(a.adName())}else this.adId(\\\"\\\"),this.sid(\\\"\\\"),this.resolver(\\\"\\\"),this.podId(\\\"\\\"),this.podPosition(\\\"\\\"),this.podOffset(0),this.podName(\\\"\\\"),this.adLength(0),this.adName(\\\"\\\")}var d=b.model.Dao;a.extend(c,d),b.model.AdDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"sc\\\"),this.reportSuiteId=this._createAccessor(\\\"_reportSuiteId\\\",\\\"rsid\\\",null),this.trackingServer=this._createAccessor(\\\"_trackingServer\\\",\\\"tracking_server\\\",null),this.ssl=this._createAccessor(\\\"_ssl\\\",\\\"ssl\\\",e.HINT_SHORT),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.reportSuiteId(a.reportSuiteId()),this.trackingServer(a.trackingServer()),this.ssl(a.ssl())}else this.reportSuiteId(\\\"\\\"),this.trackingServer(\\\"\\\"),this.ssl(0)}var d=b.model.Dao,e=b.model.DaoField;a.extend(c,d),b.model.AdobeAnalyticsDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"stream\\\"),this.id=this._createAccessor(\\\"_id\\\",\\\"chapter_id\\\",null),this.sid=this._createAccessor(\\\"_sid\\\",\\\"chapter_sid\\\",null),this.name=this._createAccessor(\\\"_name\\\",\\\"chapter_name\\\",null),this.position=this._createAccessor(\\\"_position\\\",\\\"chapter_pos\\\",null),this.length=this._createAccessor(\\\"_length\\\",\\\"chapter_length\\\",null),this.offset=this._createAccessor(\\\"_offset\\\",\\\"chapter_offset\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.id(a.id()),this.sid(a.sid()),this.name(a.name()),this.position(a.position()),this.length(a.length()),this.offset(a.offset())}else this.id(\\\"\\\"),this.sid(\\\"\\\"),this.name(\\\"\\\"),this.position(0),this.length(0),this.offset(0)}var d=b.model.Dao;a.extend(c,d),b.model.ChapterDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"asset\\\"),this.type=this._createAccessor(\\\"_type\\\",\\\"type\\\",null),this.videoId=this._createAccessor(\\\"_videoId\\\",\\\"video_id\\\",null),this.publisher=this._createAccessor(\\\"_publisher\\\",\\\"publisher\\\",null),this.adData=this._createAccessor(\\\"_adData\\\",\\\"ad_data\\\",null),this.chapterData=this._createAccessor(\\\"_chapterData\\\",\\\"chapter_data\\\",null),this.length=this._createAccessor(\\\"_length\\\",\\\"length\\\",null),this.name=this._createAccessor(\\\"_name\\\",\\\"name\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.type(a.type()),this.name(a.name()),this.videoId(a.videoId()),this.publisher(a.publisher()),this.length(a.length());var b=a.adData()?new e(a.adData()):null;this.adData(b);var d=a.chapterData()?new f(a.chapterData()):null;this.chapterData(d)}else this.type(\\\"\\\"),this.name(\\\"\\\"),this.videoId(\\\"\\\"),this.publisher(\\\"\\\"),this.length(0),this.adData(null),this.chapterData(null)}var d=b.model.Dao,e=b.model.AdDao,f=b.model.ChapterDao;a.extend(c,d),c.TYPE_AD=\\\"ad\\\",c.TYPE_MAIN_CONTENT=\\\"main\\\",b.model.AssetDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"event\\\"),this.type=this._createAccessor(\\\"_type\\\",\\\"type\\\",null),this.duration=this._createAccessor(\\\"_duration\\\",\\\"duration\\\",null),this.playhead=this._createAccessor(\\\"_playhead\\\",\\\"playhead\\\",null),this.id=this._createAccessor(\\\"_id\\\",\\\"id\\\",null),this.source=this._createAccessor(\\\"_source\\\",\\\"source\\\",null),this.ts=this._createAccessor(\\\"_ts\\\",\\\"ts\\\",null),this.prevTs=this._createAccessor(\\\"_prevTs\\\",\\\"prev_ts\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.type(a.type()),this.duration(a.duration()),this.playhead(a.playhead()),this.id(a.id()),this.source(a.source()),this.ts(a.ts()),this.prevTs(a.prevTs())}else this.type(\\\"\\\"),this.duration(0),this.playhead(0),this.id(\\\"\\\"),this.source(\\\"\\\"),this.ts(0),this.prevTs(-1)}var d=b.model.Dao;a.extend(c,d),c.EVENT_TYPE_AA_START=\\\"aa_start\\\",c.EVENT_TYPE_AA_AD_START=\\\"aa_ad_start\\\",c.EVENT_TYPE_START=\\\"start\\\",c.EVENT_TYPE_RESUME=\\\"resume\\\",c.EVENT_TYPE_CHAPTER_START=\\\"chapter_start\\\",c.EVENT_TYPE_CHAPTER_COMPLETE=\\\"chapter_complete\\\",c.EVENT_TYPE_PLAY=\\\"play\\\",c.EVENT_TYPE_PAUSE=\\\"pause\\\",c.EVENT_TYPE_STALL=\\\"stall\\\",c.EVENT_TYPE_BUFFER=\\\"buffer\\\",c.EVENT_TYPE_BITRATE_CHANGE=\\\"bitrate_change\\\",c.EVENT_TYPE_ERROR=\\\"error\\\",c.EVENT_TYPE_COMPLETE=\\\"complete\\\",b.model.EventDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"stream\\\"),this.bitrate=this._createAccessor(\\\"_bitrate\\\",\\\"bitrate\\\",null),this.fps=this._createAccessor(\\\"_fps\\\",\\\"fps\\\",null),this.droppedFrames=this._createAccessor(\\\"_droppedFrames\\\",\\\"dropped_frames\\\",null),this.startupTime=this._createAccessor(\\\"_startup_time\\\",\\\"startup_time\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.bitrate(a.bitrate()),this.fps(a.fps()),this.droppedFrames(a.droppedFrames()),this.startupTime(a.startupTime()),this.isStartupTimeOverridden=a.isStartupTimeOverridden}else this.bitrate(0),this.fps(0),this.droppedFrames(0),this.startupTime(0),this.isStartupTimeOverridden=!1}var d=b.model.Dao;a.extend(c,d),b.model.QoSDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"sp\\\"),this.ovp=this._createAccessor(\\\"_ovp\\\",\\\"ovp\\\",null),this.sdk=this._createAccessor(\\\"_sdk\\\",\\\"sdk\\\",null),this.channel=this._createAccessor(\\\"_channel\\\",\\\"channel\\\",null),this.playerName=this._createAccessor(\\\"_playerName\\\",\\\"player_name\\\",null),this.libVersion=this._createAccessor(\\\"_libVersion\\\",\\\"hb_version\\\",null),this.apiLevel=this._createAccessor(\\\"_apiLevel\\\",\\\"hb_api_lvl\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.ovp(a.ovp()),this.sdk(a.sdk()),this.channel(a.channel()),this.playerName(a.playerName()),this.libVersion(a.libVersion()),this.apiLevel(a.apiLevel())}else this.ovp(e),this.sdk(e),this.channel(e),this.playerName(\\\"\\\"),this.libVersion(\\\"\\\"),this.apiLevel(0)}var d=b.model.Dao;a.extend(c,d);var e=\\\"unknown\\\";b.model.ServiceProviderDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"event\\\"),this.sessionId=this._createAccessor(\\\"_sessionId\\\",\\\"sid\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.sessionId(a.sessionId())}else this.sessionId(null)}var d=b.model.Dao;a.extend(c,d),b.model.SessionDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"stream\\\"),this.type=this._createAccessor(\\\"_type\\\",\\\"type\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.type(a.type())}else this.type(null)}var d=b.model.Dao;a.extend(c,d),b.model.StreamDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"user\\\"),this.analyticsVisitorId=this._createAccessor(\\\"_analyticsVisitorId\\\",\\\"aid\\\",null),this.marketingCloudVisitorId=this._createAccessor(\\\"_marketingCloudVisitorId\\\",\\\"mid\\\",null),this.visitorId=this._createAccessor(\\\"_visitorId\\\",\\\"id\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.analyticsVisitorId(a.analyticsVisitorId()),this.marketingCloudVisitorId(a.marketingCloudVisitorId()),this.visitorId(a.visitorId())}else this.analyticsVisitorId(null),this.marketingCloudVisitorId(null),this.visitorId(null)}var d=b.model.Dao;a.extend(c,d),b.model.UserDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(){if(c.__super__.constructor.call(this,\\\"aam\\\"),this.audienceManagerBlob=this._createAccessor(\\\"_audienceManagerBlob\\\",\\\"blob\\\",null),this.audienceManagerLocationHint=this._createAccessor(\\\"_audienceManagerLocationHint\\\",\\\"loc_hint\\\",null),arguments.length&&arguments[0]instanceof c){var a=arguments[0];this.audienceManagerBlob(a.audienceManagerBlob()),this.audienceManagerLocationHint(a.audienceManagerLocationHint())}else this.audienceManagerBlob(null),this.audienceManagerLocationHint(null)}var d=b.model.Dao;a.extend(c,d),b.model.AudienceManagerDao=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b,c,i,j){this.eventData=new e,this.eventData.type(b),this.eventData.duration(0),this.eventData.ts((new Date).getTime()),this.eventData.playhead(c),this.assetData=new f(a._assetData),this.streamData=new g(a._streamData),this.qosData=new h(a._qosData),this.cuserData=d.clone(a._cuserData),this.meta=i,this.callback=j,this.filterReport=!0}var d=a.ObjectUtils,e=b.model.EventDao,f=b.model.AssetDao,g=b.model.StreamDao,h=b.model.QoSDao;b.model.TrackItem=c}(a.ADB.va.utils,b),function(a,b){\\\"use strict\\\";function c(a,b,c,i,j,k){this.adobeAnalyticsData=a,this.userData=b,this.aamData=c,this.serviceProviderData=i,this.sessionData=j,this.eventData=new e(k.eventData),this.assetData=new f(k.assetData),this.streamData=new g(k.streamData),this.qosData=new h(k.qosData),this.cuserData=d.clone(k.cuserData),this.meta=d.clone(k.meta),this.callback=k.callback,this.filterReport=k.filterReport}var d=a.ObjectUtils,e=b.model.EventDao,f=b.model.AssetDao,g=b.model.StreamDao,h=b.model.QoSDao;b.model.CUserDao;b.model.Report=c}(a.ADB.va.utils,b),function(a){\\\"use strict\\\";function b(){}b.prototype.serializeReport=function(a){},b.prototype.serializeDao=function(a){},b.prototype.serializeMap=function(a){},b.prototype.serializeNumber=function(a,b,c,d){},b.prototype.serializeString=function(a,b,c,d){},a.model.ISerializer=b}(b),function(a,b){\\\"use strict\\\";function c(a){if(!a)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=a}var d=b.model.Dao,e=b.model.DaoField,f=b.model.ISerializer;a.extend(c,f),c.prototype.serializeReport=function(a){var b=[];return b.push(this.serializeDao(a.adobeAnalyticsData)),b.push(this.serializeDao(a.userData)),b.push(this.serializeDao(a.aamData)),b.push(this.serializeMap(a.cuserData,\\\"cuser\\\")),b.push(this.serializeDao(a.serviceProviderData)),b.push(this.serializeDao(a.sessionData)),b.push(this.serializeDao(a.eventData)),b.push(this.serializeDao(a.assetData)),b.push(this.serializeDao(a.streamData)),b.push(this.serializeDao(a.qosData)),b.push(this.serializeMap(a.meta,\\\"meta\\\")),{serializedOutput:b.filter(function(a){return!!a}).join(\\\"&\\\"),callback:a.callback}},c.prototype.serializeDao=function(a){var b=this._processDao(a);return b.filter(function(a){return!!a}).join(\\\"&\\\")},c.prototype.serializeMap=function(a,b){var c=[],d=b?b:\\\"meta\\\";for(var e in a)a.hasOwnProperty(e)&&a[e]&&c.push(\\\"s:\\\"+d+\\\":\\\"+e+\\\"=\\\"+window.encodeURIComponent(a[e]));return c.join(\\\"&\\\")},c.prototype.serializeNumber=function(a,b,c,d){var f=h;return null==b||isNaN(b)?null:(d===e.HINT_SHORT&&(f=i),f+\\\":\\\"+c+\\\":\\\"+a+\\\"=\\\"+Math.floor(b))},c.prototype.serializeString=function(a,b,c,d){return b?j+\\\":\\\"+c+\\\":\\\"+a+\\\"=\\\"+window.encodeURIComponent(b):null},c.prototype._processDao=function(a){var b=[];for(var c in a.data)if(a.data.hasOwnProperty(c)){var e=a.data[c],f=e.value,h=e.hint,i=null,j=a.realm;if(null==f)continue;\\\"number\\\"==typeof f?i=this.serializeNumber(c,f,j,h):\\\"string\\\"==typeof f?i=this.serializeString(c,f,j,h):f instanceof d?i=this.serializeDao(f):this._logger.warn(g,\\\"#_processDao() > Unable to serialize DAO. Field: \\\"+c+\\\". Value: \\\"+f+\\\".\\\"),i&&b.push(i)}return b};var g=\\\"ah::QuerystringSerializer\\\",h=\\\"l\\\",i=\\\"h\\\",j=\\\"s\\\";b.model.QuerystringSerializer=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b){if(!a)throw new Error(\\\"Reference to the data object cannot be NULL\\\");if(this._data=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b}c.prototype.parse=function(){var a,b,c,i,j;if(window.DOMParser){var k=new window.DOMParser;j=k.parseFromString(this._data,\\\"text/xml\\\")}else j=new window.ActiveXObject(\\\"Microsoft.XMLDOM\\\"),j.async=!1,j.loadXML(this._data);var l;l=parseInt(j.getElementsByTagName(\\\"trackingInterval\\\")[0].childNodes[0].nodeValue,10),l&&(a=l),l=parseInt(j.getElementsByTagName(\\\"setupCheckInterval\\\")[0].childNodes[0].nodeValue,10),l&&(b=l),l=parseInt(j.getElementsByTagName(\\\"trackExternalErrors\\\")[0].childNodes[0].nodeValue,10),l&&(c=1==l),j.getElementsByTagName(\\\"nielsenEnabled\\\")[0]?(l=parseInt(j.getElementsByTagName(\\\"nielsenEnabled\\\")[0].childNodes[0].nodeValue,10),i=1==l):i=!0;var m={};return m[e]=a,m[f]=b,m[g]=c,m[h]=i,this._logger.debug(d,\\\"#parse() > Obtained configuration settings.\\\"),m};var d=\\\"ah::SettingsParser\\\",e=\\\"reporting_interval\\\",f=\\\"check_status_interval\\\",g=\\\"track_external_errors\\\",h=\\\"nielsen_enabled\\\";b.network.SettingsParser=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b){if(this._trackingServer=null,this._checkStatusServer=null,this._publisher=null,this._isConfigured=!1,this._isDestroyed=!1,this._quietMode=!1,this._visitorOptedOut=!1,this._prevReportSent=null,!a)throw new Error(\\\"Reference to the channel object cannot be NULL\\\");if(this._channel=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b,this._serializer=new i(b),this._installEventListeners()}var d=a.Event,e=a.URLRequestMethod,f=a.URLRequest,g=a.URLLoader,h=b.network.SettingsParser,i=b.model.QuerystringSerializer;c.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._logger.debug(j,\\\"#destroy()\\\"),this._uninstallEventListeners())},c.prototype._onApiConfig=function(a){var b=a.data;this._logger.debug(j,\\\"#_onApiConfig(sb_server=\\\"+b[k]+\\\", check_status_server=\\\"+b[l]+\\\", publisher=\\\"+b[m]+\\\", quiet_mode=\\\"+b[n]+\\\", ssl=\\\"+b[o]+\\\")\\\"),this._trackingServer=this._updateRequestProtocol(b[k],b[o]),this._checkStatusServer=this._updateRequestProtocol(b[l],b[o]),this._publisher=b[m],this._quietMode=b[n],this._isConfigured=!0},c.prototype._onUpdateVisitorOptOut=function(a){var b=a.data;this._logger.debug(j,\\\"#_onUpdateVisitorOptOut(visitor_opt_out=\\\"+b[q]+\\\")\\\"),this._visitorOptedOut=b[q]},c.prototype._onFilterReportAvailable=function(a){var b=a.data;if(!this._isConfigured)return void this._logger.warn(j,\\\"#_onFilterReportAvailable() > Unable to send request: not configured.\\\");var c=b[p],h=this._serializer.serializeReport(c),i=this._trackingServer+\\\"/?\\\"+h.serializedOutput;if(this._prevReportSent&&this._prevReportSent.eventData&&c.eventData&&this._prevReportSent.eventData.playhead==c.eventData.playhead&&this._prevReportSent.eventData.ts==c.eventData.ts&&this._prevReportSent.eventData.prevTs==c.eventData.prevTs&&this._prevReportSent.eventData.type==c.eventData.type)return void this._logger.debug(j,\\\"#_onFilterReportAvailable() > Duplicate heartbeat report not sent for URL:\\\\n\\\"+i);this._prevReportSent=c;var k=new f(i,e.GET);this._logger.debug(j,\\\"#_onFilterReportAvailable() > \\\"+k.url);var l=this,m=function(a){o.close(),h.callback&&h.callback.call(null)},n=function(a){o.close(),l._logger.warn(j,\\\"#_onFilterReportAvailable() > Failed to send heartbeat report.\\\"),h.callback&&h.callback.call(null)};if(!this._quietMode&&!this._visitorOptedOut){var o=new g;o.addEventListener(d.SUCCESS,m,this),o.addEventListener(d.ERROR,n,this),o.load(k)}},c.prototype._onClockCheckStatusTick=function(a){function b(a){if(a.data){var b=new h(a.data.response,i._logger),c=b.parse();c?i._channel.trigger(new d(v,c)):i._logger.warn(j,\\\"#_onClockCheckStatusTick() > Failed to parse the config. settings.\\\")}n.close()}function c(a){i._logger.warn(j,\\\"#_onClockCheckStatusTick() > Failed to obtain the config. settings.\\\"),n.close()}if(!this._isConfigured)return void this._logger.warn(j,\\\"#_onClockCheckStatusTick() > Unable to send request: not configured.\\\");if(!this._publisher)return void this._logger.warn(j,\\\"#_onClockCheckStatusTick() > Publisher is NULL.\\\");var i=this,k=this._publisher.replace(/[^a-zA-Z0-9]+/,\\\"-\\\").toLocaleLowerCase(),l=this._checkStatusServer+k+\\\".xml?r=\\\"+(new Date).getTime(),m=new f(l,e.GET),n=new g;n.addEventListener(d.SUCCESS,b,this),n.addEventListener(d.ERROR,c,this),this._logger.debug(j,\\\"#_onClockCheckStatusTick() > Get new settings from: \\\"+l),n.load(m)},c.prototype._updateRequestProtocol=function(a,b){var c=a;return 0===c.indexOf(\\\"http://\\\")?c=c.slice(7):0===c.indexOf(\\\"https://\\\")&&(c=c.slice(8)),b?\\\"https://\\\"+c:\\\"http://\\\"+c},c.prototype._installEventListeners=function(){this._channel.on(r,this._onApiConfig,this),this._channel.on(s,this._onUpdateVisitorOptOut,this),this._channel.on(t,this._onFilterReportAvailable,this),this._channel.on(u,this._onClockCheckStatusTick,this)},c.prototype._uninstallEventListeners=function(){this._channel.off(null,null,this)};var j=\\\"ah::Network\\\",k=\\\"tracking_server\\\",l=\\\"check_status_server\\\",m=\\\"publisher\\\",n=\\\"quiet_mode\\\",o=\\\"ssl\\\",p=\\\"report\\\",q=\\\"visitor_opt_out\\\",r=\\\"api:config\\\",s=\\\"api:update_visitor_optout\\\",t=\\\"filter:data_available\\\",u=\\\"clock:check_status.tick\\\",v=\\\"net:check_status_complete\\\";b.network.Network=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b){if(!a)throw new Error(\\\"Reference to the channel object cannot be NULL\\\");if(this._channel=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b,this._isDestroyed=!1,this._isBufferingInProgress=!1,this._reportBuffer={},this._tsHistory={},this._workQueue=new i,this._installEventListeners()}function d(a){var b=[];return a&&a.forEach(function(a){a.eventData.type()==k.EVENT_TYPE_PAUSE||a.eventData.type()==k.EVENT_TYPE_STALL?(!a.filterReport||a.eventData.duration()>u)&&b.push(a):b.push(a)}),b}function e(a){var b=-1,c=-1,d=[];return a.forEach(function(a){a.eventData.type()==k.EVENT_TYPE_START?a.assetData.type()==l.TYPE_MAIN_CONTENT?b==-1?b=d.push(a)-1:(a.eventData.prevTs(-1),d[b]=a):c==-1?c=d.push(a)-1:(a.eventData.prevTs(-1),d[c]=a):d.push(a)}),d}function f(a){var b=[];return a.forEach(function(c){if(c.eventData.type()==k.EVENT_TYPE_PLAY){if(c.eventData.duration()>t)b.push(c);else if(0==c.eventData.duration()&&c.assetData.type()==l.TYPE_MAIN_CONTENT){var d=g(a);d.indexOf(c)==d.length-1&&b.push(c)}}else b.push(c)}),b}function g(a){var b=[];return a.forEach(function(a){a.eventData.type()!=k.EVENT_TYPE_PLAY&&a.eventData.type()!=k.EVENT_TYPE_BUFFER&&a.eventData.type()!=k.EVENT_TYPE_START||b.push(a)}),b}var h=a.radio.Command,i=a.radio.CommandQueue,j=a.Event,k=b.model.EventDao,l=b.model.AssetDao;c.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._logger.debug(w,\\\"#destroy()\\\"),this._uninstallEventListeners(),this.clear())},c.prototype.clear=function(){this._logger.debug(w,\\\"#clear()\\\"),this._workQueue.cancelAllCommands(),this._reportBuffer={},this._tsHistory={},this._isBufferingInProgress=!1},c.prototype.flush=function(){this._workQueue.addCommand(new h(this._flushBufferReport,this))},c.prototype._bufferReport=function(a){if(!this._isDestroyed){var b=a[q];if(b){var c=b.sessionData.sessionId();this._reportBuffer[c]=this._reportBuffer[c]||[],this._reportBuffer[c].push(b)}if(!this._isBufferingInProgress){this._isBufferingInProgress=!0;var d={};d[p]=!0,d[r]=1,this._channel.command(s,d)}}},c.prototype._flushBufferReport=function(){function a(a){if(a)for(var c=0;c<a.length;c++){var d=a[c],e=d.sessionData.sessionId();b._tsHistory[e]=b._tsHistory[e]||{};var f=d.eventData.type()+\\\".\\\"+(d.assetData.type()==l.TYPE_AD?d.assetData.adData().adId():d.assetData.videoId());b._tsHistory[e].hasOwnProperty(f)&&d.eventData.prevTs(b._tsHistory[e][f]),b._tsHistory[e][f]=d.eventData.ts()}}if(!this._isDestroyed){var b=this;for(var c in this._reportBuffer)if(this._reportBuffer.hasOwnProperty(c)){var g=f(e(d(this._reportBuffer[c])));a(g);for(var h=0;h<g.length;h++){var i=g[h],k={};k[q]=i,this._channel.trigger(new j(n,k))}}this._reportBuffer={};var m=this._channel.request(v),o=this._tsHistory[m]||{};this._tsHistory={},this._tsHistory[m]=o,this._isBufferingInProgress=!1}},c.prototype._onContextReportAvailable=function(a){var b=a.data;this._workQueue.addCommand(new h(this._bufferReport,this,[b]))},c.prototype._onClockFlushFilterTick=function(a){this.flush()},c.prototype._installEventListeners=function(){this._channel.on(m,this._onContextReportAvailable,this),this._channel.on(o,this._onClockFlushFilterTick,this)},c.prototype._uninstallEventListeners=function(){this._channel.off(null,null,this)};var m=\\\"context:report_available\\\",n=\\\"filter:data_available\\\",o=\\\"clock:flush_filter.tick\\\",p=\\\"reset\\\",q=\\\"report\\\",r=\\\"repeat_count\\\",s=\\\"clock:flush_filter.resume\\\",t=250,u=250,v=\\\"session_id\\\",w=\\\"ah::ReportFilter\\\";b.filter.ReportFilter=c}(a.ADB.core,b),function(a,b){\\\"use strict\\\";function c(a,b){this._onFail={fn:a,ctx:b}}var d=a.ErrorInfo;c.prototype.validateFields=function(a,b){if(!a)return this._fail(\\\"Data cannot be null\\\");if(b)for(var c=0;c<b.length;c++){var d=b[c];switch(d){case\\\"videoId\\\":if(!a.hasOwnProperty(\\\"videoId\\\"))return this._fail(\\\"The ID for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.videoId)return this._fail(\\\"The ID for the main video must be a String.\\\");if(\\\"\\\"===a.videoId)return this._fail(\\\"The ID for the main video cannot be an empty string.\\\");break;case\\\"streamType\\\":if(!a.hasOwnProperty(\\\"streamType\\\"))return this._fail(\\\"The stream type for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.streamType)return this._fail(\\\"The stream type for the main video must be a String.\\\");if(\\\"\\\"===a.streamType)return this._fail(\\\"The stream type for the main video cannot be an empty string.\\\");break;case\\\"videoLength\\\":if(!a.hasOwnProperty(\\\"videoLength\\\"))return this._fail(\\\"The length of the main video must be specified.\\\");if(\\\"number\\\"!=typeof a.videoLength)return this._fail(\\\"The length of the main video must be a Number.\\\");if(isNaN(a.videoLength))return this._fail(\\\"The length of the main video cannot be NaN.\\\");break;case\\\"playhead\\\":if(!a.hasOwnProperty(\\\"playhead\\\"))return this._fail(\\\"The playhead for the main video must be specified.\\\");if(\\\"number\\\"!=typeof a.playhead)return this._fail(\\\"The playhead for the main video must be a Number.\\\");if(isNaN(a.playhead))return this._fail(\\\"The playhead for the main video cannot be NaN.\\\");break;case\\\"playerName\\\":if(!a.hasOwnProperty(\\\"playerName\\\"))return this._fail(\\\"The player name for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.playerName)return this._fail(\\\"The player name for the main video must be a String.\\\");if(\\\"\\\"===a.playerName)return this._fail(\\\"The player name for the main video cannot be an empty string.\\\");break;case\\\"rsid\\\":if(!a.hasOwnProperty(\\\"rsid\\\"))return this._fail(\\\"account (rsid) is required and has to be set in the AppMeasurement instance.\\\");if(\\\"string\\\"!=typeof a.rsid)return this._fail(\\\"account (rsid) of the AppMeasurement instance must be a String.\\\");if(\\\"\\\"===a.rsid)return this._fail(\\\"account (rsid) of the AppMeasurement instance  cannot be an empty string.\\\");break;case\\\"trackingServer\\\":if(!a.hasOwnProperty(\\\"trackingServer\\\"))return this._fail(\\\"trackingServer is required and has to be set in the AppMeasurement instance.\\\");if(\\\"string\\\"!=typeof a.trackingServer)return this._fail(\\\"trackingServer of the AppMeasurement instance must be a String.\\\");if(\\\"\\\"===a.trackingServer)return this._fail(\\\"trackingServer of the AppMeasurement instance cannot be an empty string.\\\");break;case\\\"podPlayerName\\\":if(!a.hasOwnProperty(\\\"podPlayerName\\\"))return this._fail(\\\"The player name for the ad-break must be specified.\\\");if(\\\"string\\\"!=typeof a.podPlayerName)return this._fail(\\\"The player name for the ad-break must be a String.\\\");if(\\\"\\\"===a.podPlayerName)return this._fail(\\\"The player name for the ad-break cannot be an empty string.\\\");break;case\\\"podPosition\\\":if(!a.hasOwnProperty(\\\"podPosition\\\"))return this._fail(\\\"Position (index) of the ad-break must be specified.\\\");if(\\\"number\\\"!=typeof a.podPosition)return this._fail(\\\"Position (index) of the ad-break must be a Number.\\\");if(isNaN(a.podPosition))return this._fail(\\\"Position (index) of the ad-break cannot be NaN.\\\");break;case\\\"adId\\\":if(!a.hasOwnProperty(\\\"adId\\\"))return this._fail(\\\"The ad ID must be specified.\\\");if(\\\"string\\\"!=typeof a.adId)return this._fail(\\\"The ad ID must be a String.\\\");if(\\\"\\\"===a.adId)return this._fail(\\\"The ad ID cannot be an empty string.\\\");break;case\\\"adPosition\\\":if(!a.hasOwnProperty(\\\"adPosition\\\"))return this._fail(\\\"Position (index) of the ad must be specified.\\\");if(\\\"number\\\"!=typeof a.adPosition)return this._fail(\\\"Position (index) of the ad must be a Number.\\\");if(isNaN(a.adPosition))return this._fail(\\\"Position (index) of the ad cannot be NaN.\\\");break;case\\\"chapterPosition\\\":if(!a.hasOwnProperty(\\\"chapterPosition\\\"))return this._fail(\\\"Position (index) of the chapter must be specified.\\\");if(\\\"number\\\"!=typeof a.chapterPosition)return this._fail(\\\"Position (index) of the chapter must be a Number.\\\");if(isNaN(a.chapterPosition))return this._fail(\\\"Position (index) of the chapter cannot be NaN.\\\");break;case\\\"chapterOffset\\\":if(!a.hasOwnProperty(\\\"chapterOffset\\\"))return this._fail(\\\"Chapter start-time (offset) must be specified.\\\");if(\\\"number\\\"!=typeof a.chapterOffset)return this._fail(\\\"Chapter start-time (offset) must be a Number.\\\");if(isNaN(a.chapterOffset))return this._fail(\\\"Chapter start-time (offset) cannot be NaN.\\\");break;case\\\"chapterLength\\\":if(!a.hasOwnProperty(\\\"chapterLength\\\"))return this._fail(\\\"The length of the chapter must be specified.\\\");if(\\\"number\\\"!=typeof a.chapterLength)return this._fail(\\\"The length of the chapter must be a Number.\\\");if(isNaN(a.chapterLength))return this._fail(\\\"The length of the chapter cannot be NaN.\\\");break;default:return this._fail(\\\"Unable to validate unknown parameter: \\\"+d)}}return!0},c.prototype._fail=function(a){var b=new d(\\\"Invalid input data\\\",a);return this._onFail.fn&&this._onFail.fn.call(this._onFail.ctx,b),!1},b.context.InputDataValidator=c}(a.ADB.va,b),function(a,b){\\\"use strict\\\";function c(a,b){if(!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");if(this._logger=b,!a)throw new Error(\\\"Reference to the context object cannot be NULL\\\");this._context=a}var d=b.model.Report;\\nc.prototype.createReportForItem=function(a){return this._logger.debug(e,\\\"Creating report for item: \\\"+a.eventData.type()),new d(this._context._adobeAnalyticsData,this._context._userData,this._context._aamData,this._context._serviceProviderData,this._context._sessionData,a)};var e=\\\"ah::ReportFactory\\\";b.context.ReportFactory=c}(a.ADB.core,b),function(a,b,c,d){\\\"use strict\\\";function e(a,b){if(!a)throw new Error(\\\"Reference to the channel object cannot be NULL\\\");if(this._channel=a,!b)throw new Error(\\\"Reference to the logger object cannot be NULL\\\");this._logger=b,this._lastInBandItem=null,this._autoComputedStartupTime=0,this._reportingInterval=fa,this._assetData=null,this._streamData=null,this._qosData=null,this._sessionData=null,this._cuserData=null,this._adobeAnalyticsData=new j,this._serviceProviderData=new k,this._userData=new l,this._aamData=new m,this._isTrackingSessionActive=!1,this._isVideoComplete=!1,this._activeAssetId=null,this._isDestroyed=!1,this._doNotOverrideEventDuration=!1,this._reportFactory=new u(this,this._logger),this._inputDataValidator=new v(function(a){this._logger.error(w,a.getMessage()+\\\" | \\\"+a.getDetails()),this._channel.trigger(new h(y,a))},this),this._stashedChapterData=null,this._stashedAdData=null,this._trackExternalErrors=!0,this._installEventListeners()}var f=c.md5,g=c.ObjectUtils,h=a.Event,i=d.model.SessionDao,j=d.model.AdobeAnalyticsDao,k=d.model.ServiceProviderDao,l=d.model.UserDao,m=d.model.AudienceManagerDao,n=d.model.EventDao,o=d.model.AssetDao,p=d.model.StreamDao,q=d.model.QoSDao,r=d.model.AdDao,s=d.model.ChapterDao,t=d.model.TrackItem,u=d.context.ReportFactory,v=d.context.InputDataValidator;e.prototype.destroy=function(){this._isDestroyed||(this._isDestroyed=!0,this._logger.debug(w,\\\"#destroy()\\\"),this._uninstallEventListeners())},e.prototype._onApiAnalyticsStart=function(a){this._logger.debug(w,\\\"#_onApiAnalyticsStart()\\\");var b=a.data;if(this._checkCall(\\\"_onApiAnalyticsStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._userData.visitorId(b.vid),this._userData.analyticsVisitorId(b.aid),this._userData.marketingCloudVisitorId(b.mid),this._aamData.audienceManagerBlob(b.blob),this._aamData.audienceManagerLocationHint(b.loc_hint),b.customerIDs&&(this._cuserData=b.customerIDs),this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_AA_START,b.playhead,null,b._eventData[E]);c.assetData.adData(null),c.assetData.type(o.TYPE_MAIN_CONTENT),this._cuserData=null,this._sendHit(c)}},e.prototype._onApiAnalyticsAdStart=function(a){this._logger.debug(w,\\\"#_onApiAnalyticsAdStart()\\\");var b=a.data;if(this._checkCall(\\\"_onApiAnalyticsAdStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_AA_AD_START,b.playhead,null,b._eventData[E]);this._sendHit(c)}},e.prototype._onApiVideoLoad=function(a){var b=a.data;this._logger.debug(w,\\\"#_onApiVideoLoad(rsid=\\\"+b.rsid+\\\", aa_trackingServer=\\\"+b.trackingServer+\\\")\\\"),this._resetInternalState(),this._inputDataValidator.validateFields(b,[\\\"rsid\\\",\\\"trackingServer\\\"])&&(this._sessionData.sessionId(this._generateSessionId()),this._isTrackingSessionActive=!0)},e.prototype._onApiVideoUnload=function(a){return this._logger.debug(w,\\\"#_onApiVideoUnload()\\\"),this._isTrackingSessionActive?void(this._isTrackingSessionActive=!1):void this._logger.debug(w,\\\"#_onApiVideoUnload() > No active tracking session.\\\")},e.prototype._onApiVideoStart=function(a){var b=a.data;if(this._logger.debug(w,\\\"#_onApiVideoStart(id=\\\"+b.videoId+\\\", name=\\\"+b.videoName+\\\", length=\\\"+b.videoLength+\\\", type=\\\"+b.streamType+\\\", playerName=\\\"+b.playerName+\\\")\\\"),this._checkCall(\\\"_onApiVideoStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"videoId\\\",\\\"streamType\\\",\\\"videoLength\\\",\\\"playhead\\\",\\\"playerName\\\"])){this._adobeAnalyticsData.reportSuiteId(b.rsid),this._adobeAnalyticsData.trackingServer(b.trackingServer),this._adobeAnalyticsData.ssl(Number(b.useSsl)),this._serviceProviderData.ovp(b.ovp),this._serviceProviderData.sdk(b.sdk),this._serviceProviderData.channel(b.channel),this._serviceProviderData.libVersion(b.version),this._serviceProviderData.apiLevel(b.apiLvl),this._activeAssetId=b.videoId,this._serviceProviderData.playerName(b.playerName),this._assetData.videoId(this._activeAssetId),this._assetData.length(b.videoLength),this._assetData.type(o.TYPE_MAIN_CONTENT),this._assetData.publisher(b.publisher),this._assetData.name(b.videoName),this._streamData.type(b.streamType),this._updateQoSInfo(b);var c=b.metaNielsen?g.merge(b.metaVideo,b.metaNielsen):b.metaVideo,d=new t(this,n.EVENT_TYPE_START,b.playhead,c,b._eventData[E]);this._sendHit(d)}},e.prototype._onApiVideoResume=function(a){var b=a.data;if(this._logger.debug(w,\\\"#_onApiVideoResume(id=\\\"+b.videoId+\\\", name=\\\"+b.videoName+\\\", length=\\\"+b.videoLength+\\\", type=\\\"+b.streamType+\\\", playerName=\\\"+b.playerName+\\\")\\\"),this._checkCall(\\\"_onApiVideoResume\\\")&&this._inputDataValidator.validateFields(b,[\\\"videoId\\\",\\\"streamType\\\",\\\"videoLength\\\",\\\"playhead\\\",\\\"playerName\\\"])){this._activeAssetId=b.videoId,this._assetData.videoId(this._activeAssetId),this._assetData.length(b.videoLength),this._assetData.type(o.TYPE_MAIN_CONTENT),this._assetData.name(b.videoName),this._streamData.type(b.streamType);var c=new t(this,n.EVENT_TYPE_RESUME,b.playhead,null,b._eventData[E]);this._sendHit(c)}},e.prototype._onApiVideoComplete=function(a){this._logger.debug(w,\\\"#_onApiVideoComplete()\\\");var b=a.data;if(this._checkCall(\\\"_onApiVideoComplete\\\")){var c=new t(this,n.EVENT_TYPE_COMPLETE,this._assetData.length(),null,b._eventData[E]);this._sendHit(c),this._isVideoComplete=!0}},e.prototype._onApiPlay=function(a){this._logger.debug(w,\\\"#_onApiPlay()\\\");var b=a.data;if(this._checkCall(\\\"_onApiPlay\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_PLAY,b.playhead,null,b._eventData[E]);this._sendHit(c)}},e.prototype._onApiPause=function(a){this._logger.debug(w,\\\"#_onApiPause()\\\");var b=a.data;if(this._checkCall(\\\"_onApiPause\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._updateQoSInfo(b);var c=b.playheadStalled?n.EVENT_TYPE_STALL:n.EVENT_TYPE_PAUSE,d=new t(this,c,b.playhead,null,b._eventData[E]);b._eventData.hasOwnProperty(F)&&(d.filterReport=b._eventData[F]),this._sendHit(d)}},e.prototype._onApiBufferStart=function(a){this._logger.debug(w,\\\"#_onApiBufferStart()\\\");var b=a.data;if(this._checkCall(\\\"_onApiBufferStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_BUFFER,b.playhead,null,b._eventData[E]);this._sendHit(c)}},e.prototype._onApiSeekStart=function(a){this._logger.debug(w,\\\"#_onApiSeekStart()\\\"),this._checkCall(\\\"_onApiSeekStart\\\")&&(this._stashedAdData=this._assetData.adData(),this._stashedChapterData=this._assetData.chapterData(),this._assetData.adData(null),this._assetData.type(o.TYPE_MAIN_CONTENT),this._activeAssetId=this._assetData.videoId(),this._assetData.chapterData(null))},e.prototype._onApiSeekComplete=function(a){this._logger.debug(w,\\\"#_onApiSeekComplete()\\\");var b=a.data;if(this._checkCall(\\\"_onApiSeekComplete\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){if(b.isInAd){if(!this._inputDataValidator.validateFields(b,[\\\"adId\\\",\\\"adPosition\\\",\\\"podPosition\\\",\\\"podPlayerName\\\"]))return;var c=f(this._assetData.videoId())+\\\"_\\\"+b.podPosition;if(this._stashedAdData&&this._stashedAdData.podId()==c&&parseInt(this._stashedAdData.podPosition(),10)==b.adPosition)this._assetData.adData(this._stashedAdData),this._activeAssetId=this._stashedAdData.adId();else if(!this._assetData.adData()){this._activeAssetId=b.adId;var d=new r;d.adId(this._activeAssetId),d.adName(b.adName),d.adLength(b.adLength),d.podId(c),d.resolver(b.podPlayerName),d.podPosition(b.podPosition+\\\"\\\"),d.podName(b.podName),d.podOffset(b.podSecond),d.sid(this._generateSessionId()),this._assetData.adData(d)}this._assetData.type(o.TYPE_AD)}else this._assetData.adData(null),this._assetData.type(o.TYPE_MAIN_CONTENT),this._activeAssetId=this._assetData.videoId();if(b.isInChapter){if(!this._inputDataValidator.validateFields(b,[\\\"chapterPosition\\\",\\\"chapterLength\\\",\\\"chapterOffset\\\"]))return;if(this._stashedChapterData&&b.chapterPosition==this._stashedChapterData.position())this._assetData.chapterData(this._stashedChapterData);else if(!this._assetData.chapterData()){var e=new s;e.id(f(this._assetData.videoId())+\\\"_\\\"+b.chapterPosition),e.name(b.chapterName),e.length(b.chapterLength),e.position(b.chapterPosition),e.offset(b.chapterOffset),e.sid(this._generateSessionId()),this._assetData.chapterData(e)}}else this._assetData.chapterData(null);this._stashedAdData=null,this._stashedChapterData=null}},e.prototype._onApiAdStart=function(a){var b=a.data;if(this._logger.debug(w,\\\"#_onApiAdStart(id=\\\"+b.adId+\\\", player_name=\\\"+b.podPlayerName+\\\", parent_name=\\\"+this._assetData.videoId()+\\\", pod_pos=\\\"+b.adPosition+\\\")\\\"),this._checkCall(\\\"_onApiAdStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\",\\\"podPosition\\\",\\\"podPlayerName\\\",\\\"adId\\\",\\\"adPosition\\\"])){this._activeAssetId=b.adId;var c=new r;c.adId(this._activeAssetId),c.adName(b.adName),c.adLength(b.adLength),c.resolver(b.podPlayerName),c.podId(f(this._assetData.videoId())+\\\"_\\\"+b.podPosition),c.podPosition(b.adPosition+\\\"\\\"),c.podName(b.podName),c.podOffset(b.podSecond),c.sid(this._generateSessionId()),this._assetData.adData(c),this._assetData.type(o.TYPE_AD),this._updateQoSInfo(b);var d=g.merge(b.metaVideo,b.metaAd);d=b.metaNielsen?g.merge(d,b.metaNielsen):d;var e=new t(this,n.EVENT_TYPE_START,b.playhead,d,b._eventData[E]);this._sendHit(e)}},e.prototype._onApiAdComplete=function(a){this._logger.debug(w,\\\"#_onApiAdComplete()\\\");var b=a.data;if(this._checkCall(\\\"_onApiAdComplete\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){if(this._assetData.type()!=o.TYPE_AD)return void this._logger.warn(w,\\\"#_onApiAdComplete() > Ignoring the ad complete event, because we are no longer in an ad.\\\");this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_COMPLETE,b.playhead,null,b._eventData[E]);this._sendHit(c),this._assetData.adData(null),this._assetData.type(o.TYPE_MAIN_CONTENT),this._activeAssetId=this._assetData.videoId()}},e.prototype._onApiChapterStart=function(a){var b=a.data;if(this._logger.debug(w,\\\"#_onApiChapterStart(name=\\\"+b.chapterName+\\\", length=\\\"+b.chapterLength+\\\", position=\\\"+b.chapterPosition+\\\", chapter_offset=\\\"+b.chapterOffset+\\\")\\\"),this._checkCall(\\\"_onApiChapterStart\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\",\\\"chapterPosition\\\",\\\"chapterOffset\\\",\\\"chapterLength\\\"])){var c=new s;c.id(f(this._assetData.videoId())+\\\"_\\\"+b.chapterPosition),c.name(b.chapterName),c.length(b.chapterLength),c.position(b.chapterPosition),c.offset(b.chapterOffset),c.sid(this._generateSessionId()),this._assetData.chapterData(c),this._updateQoSInfo(b);var d=g.merge(b.metaVideo,b.metaChapter),e=new t(this,n.EVENT_TYPE_CHAPTER_START,b.playhead,d,b._eventData[E]);e.assetData.adData(null),e.assetData.type(o.TYPE_MAIN_CONTENT),this._sendHit(e)}},e.prototype._onApiChapterComplete=function(a){this._logger.debug(w,\\\"#_onApiChapterComplete()\\\");var b=a.data;if(this._checkCall(\\\"_onApiChapterComplete\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){if(!this._assetData.chapterData())return void this._logger.warn(w,\\\"#_onApiChapterComplete() > Ignoring the chapter complete event, because we are no longer in a chapter.\\\");this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_CHAPTER_COMPLETE,b.playhead,null,b._eventData[E]);c.assetData.adData(null),c.assetData.type(o.TYPE_MAIN_CONTENT),this._sendHit(c),this._assetData.chapterData(null)}},e.prototype._onApiBitrateChange=function(a){this._logger.debug(w,\\\"#_onApiBitrateChange()\\\");var b=a.data;if(this._checkCall(\\\"_onApiBitrateChange\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])){this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_BITRATE_CHANGE,b.playhead,null,b._eventData[E]);this._sendHit(c)}},e.prototype._onApiTrackError=function(a){var b=a.data;if(this._logger.debug(w,\\\"#_onApiTrackError(source=\\\"+b._eventData.source+\\\", err_id=\\\"+b._eventData.error_id+\\\")\\\"),!this._isTrackingSessionActive)return void this._logger.warn(w,\\\"#_onApiTrackError() > No active tracking session.\\\");if(this._trackExternalErrors||b._eventData.source===x){this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_ERROR,0,null,b._eventData[E]);c.eventData.id(b._eventData.error_id),c.eventData.source(b._eventData.source),this._sendHit(c)}},e.prototype._onApiTrackInternalError=function(a){var b=a.data;this._logger.debug(w,\\\"#_onApiTrackInternalError(source=\\\"+b.source+\\\", err_id=\\\"+b.error_id+\\\")\\\"),this._updateQoSInfo(b);var c=new t(this,n.EVENT_TYPE_ERROR,0);c.eventData.id(b.error_id),c.eventData.source(b.source),this._sendHit(c)},e.prototype._onApiQuantumEnd=function(a){this._logger.debug(w,\\\"#_onApiQuantumEnd(interval=\\\"+this._channel.request(B)+\\\")\\\");var b=a.data;this._checkCall(\\\"_onApiQuantumEnd\\\")&&this._inputDataValidator.validateFields(b,[\\\"playhead\\\"])&&(this._lastInBandItem&&(this._lastInBandItem.eventData.playhead(b.playhead),this._updateQoSInfo(b),this._lastInBandItem.qosData.bitrate(this._qosData.bitrate()),this._lastInBandItem.qosData.fps(this._qosData.fps()),this._lastInBandItem.qosData.droppedFrames(this._qosData.droppedFrames()),this._lastInBandItem.qosData.startupTime(this._qosData.startupTime())),this._sendHit(this._lastInBandItem))},e.prototype._onNetworkCheckStatusComplete=function(a){var b=a.data;this._trackExternalErrors=b[I],this._reportingInterval=b[J],this._reportingInterval||(this._reportingInterval=fa),this._logger.debug(w,\\\"#_onNetworkCheckStatusComplete(track_ext_err=\\\"+this._trackExternalErrors+\\\")\\\")},e.prototype._onResetSessionId=function(a){var b=this._generateSessionId();this._sessionData=new i,this._sessionData.sessionId(b),this._logger.debug(w,\\\"#_resetSessionId(new sessionId=\\\"+b+\\\")\\\")},e.prototype._installEventListeners=function(){this._channel.on(K,this._onApiAnalyticsStart,this),this._channel.on(L,this._onApiAnalyticsAdStart,this),this._channel.on(M,this._onApiVideoLoad,this),this._channel.on(N,this._onApiVideoUnload,this),this._channel.on(O,this._onApiVideoStart,this),this._channel.on(P,this._onApiVideoComplete,this),this._channel.on(Q,this._onApiVideoResume,this),this._channel.on(R,this._onApiAdStart,this),this._channel.on(S,this._onApiAdComplete,this),this._channel.on(T,this._onApiPlay,this),this._channel.on(U,this._onApiPause,this),this._channel.on(V,this._onApiBufferStart,this),this._channel.on(W,this._onApiSeekStart,this),this._channel.on(X,this._onApiSeekComplete,this),this._channel.on(Y,this._onApiChapterStart,this),this._channel.on(Z,this._onApiChapterComplete,this),this._channel.on(aa,this._onApiBitrateChange,this),this._channel.on($,this._onApiTrackError,this),this._channel.on(_,this._onApiTrackInternalError,this),this._channel.on(ba,this._onApiQuantumEnd,this),this._channel.on(da,this._onNetworkCheckStatusComplete,this),this._channel.on(D,this._onResetSessionId,this),this._channel.reply(C,function(){return this._sessionData&&this._sessionData.sessionId()?this._sessionData.sessionId():null},this)},e.prototype._uninstallEventListeners=function(){this._channel.off(null,null,this)},e.prototype._resetInternalState=function(){this._logger.debug(w,\\\"#_resetInternalState()\\\"),this._isTrackingSessionActive=!1,this._isVideoComplete=!1,this._autoComputedStartupTime=0,this._streamData=new p,this._qosData=new q,this._sessionData=new i,this._assetData=new o,this._cuserData=null,this._stashedAdData=null,this._stashedChapterData=null,this._lastInBandItem=null},e.prototype._generateSessionId=function(){return\\\"\\\"+(new Date).getTime()+Math.floor(1e9*Math.random())},e.prototype._updateQoSInfo=function(a){this._qosData.bitrate(a.bitrate||0),this._qosData.fps(a.fps||0),this._qosData.droppedFrames(a.droppedFrames||0),null==a.startupTime||isNaN(a.startupTime)?(this._qosData.startupTime(this._autoComputedStartupTime),this._qosData.isStartupTimeOverridden=!1):(this._qosData.startupTime(a.startupTime),this._qosData.isStartupTimeOverridden=!0)},e.prototype._checkCall=function(a){return this._isTrackingSessionActive?!this._isVideoComplete||(this._logger.warn(w,\\\"#\\\"+a+\\\"() > The video content already completed.\\\"),!1):(this._logger.warn(w,\\\"#\\\"+a+\\\"() > No active tracking session.\\\"),!1)},e.prototype._updateLastInBandItem=function(a){var b=(new Date).getTime(),c=1e3*Math.abs(a.eventData.playhead()-this._lastInBandItem.eventData.playhead()),d=Math.abs(b-this._lastInBandItem.eventData.ts());this._lastInBandItem.eventData.type()!=n.EVENT_TYPE_PAUSE&&this._lastInBandItem.eventData.type()!=n.EVENT_TYPE_STALL?(c<=d*ea||this._doNotOverrideEventDuration)&&d<=this._reportingInterval*ea*1e3?this._lastInBandItem.eventData.duration(b-this._lastInBandItem.eventData.ts()):(this._logger.warn(w,\\\"[WARNING] Resetting duration in lastInBandItem to 0. playheadDelta:\\\"+c+\\\" tsDelta:\\\"+d+\\\" event type:\\\"+this._lastInBandItem.eventData.type()),this._lastInBandItem.eventData.duration(0)):this._lastInBandItem.eventData.duration(b-this._lastInBandItem.eventData.ts()),this._doNotOverrideEventDuration&&(this._doNotOverrideEventDuration=!1),this._lastInBandItem.eventData.ts(b),this._lastInBandItem.eventData.playhead(a.eventData.playhead()),this._lastInBandItem.qosData.startupTime(a.qosData.startupTime()),this._lastInBandItem.qosData.isStartupTimeOverridden=a.qosData.isStartupTimeOverridden},e.prototype._sendHit=function(a){function b(a){var b=c._reportFactory.createReportForItem(a);b.qosData.isStartupTimeOverridden||b.qosData.startupTime(c._autoComputedStartupTime);var e={};e[G]=b,c._channel.trigger(new h(ca,e)),b.eventData.type()!=n.EVENT_TYPE_PLAY&&b.eventData.type()!=n.EVENT_TYPE_BUFFER&&b.eventData.type()!=n.EVENT_TYPE_START||(d={},d[H]=!0,c._channel.command(z,d))}var c=this,d={};switch(a.eventData.type()){case n.EVENT_TYPE_START:case n.EVENT_TYPE_PLAY:case n.EVENT_TYPE_PAUSE:case n.EVENT_TYPE_STALL:case n.EVENT_TYPE_BUFFER:this._lastInBandItem&&(this._updateLastInBandItem(a),this._lastInBandItem.eventData.type()==n.EVENT_TYPE_START&&this._lastInBandItem.assetData.type()==o.TYPE_MAIN_CONTENT&&(this._autoComputedStartupTime+=this._lastInBandItem.eventData.duration()),a!=this._lastInBandItem&&b(this._lastInBandItem)),b(a),this._lastInBandItem=a,d={},d[H]=!0,this._channel.command(z,d);break;case n.EVENT_TYPE_COMPLETE:this._lastInBandItem&&(a.assetData.type()==o.TYPE_AD&&(this._doNotOverrideEventDuration=!0),this._updateLastInBandItem(a),b(this._lastInBandItem)),b(a),a.assetData.type()==o.TYPE_MAIN_CONTENT?(this._lastInBandItem=null,d={},d[H]=!0,this._channel.command(A,d)):a.assetData.type()==o.TYPE_AD&&(this._lastInBandItem.assetData.adData(null),this._lastInBandItem.assetData.type(o.TYPE_MAIN_CONTENT),this._doNotOverrideEventDuration=!0);break;case n.EVENT_TYPE_CHAPTER_START:case n.EVENT_TYPE_CHAPTER_COMPLETE:this._lastInBandItem&&(this._updateLastInBandItem(a),b(this._lastInBandItem)),b(a),this._lastInBandItem&&(this._lastInBandItem.assetData.chapterData(a.eventData.type()==n.EVENT_TYPE_CHAPTER_START?new s(a.assetData.chapterData()):null),this._lastInBandItem.eventData.duration(0),b(this._lastInBandItem));break;default:b(a)}};var w=\\\"ah::Context\\\",x=\\\"sourceErrorSDK\\\",y=\\\"error\\\",z=\\\"clock:reporting.resume\\\",A=\\\"clock:reporting.pause\\\",B=\\\"reporting_interval\\\",C=\\\"session_id\\\",D=\\\"reset_session_id\\\",E=\\\"callback\\\",F=\\\"filter_report\\\",G=\\\"report\\\",H=\\\"reset\\\",I=\\\"track_external_errors\\\",J=\\\"reporting_interval\\\",K=\\\"api:aa_start\\\",L=\\\"api:aa_ad_start\\\",M=\\\"api:video_load\\\",N=\\\"api:video_unload\\\",O=\\\"api:video_start\\\",P=\\\"api:video_complete\\\",Q=\\\"api:video_resume\\\",R=\\\"api:ad_start\\\",S=\\\"api:ad_complete\\\",T=\\\"api:play\\\",U=\\\"api:pause\\\",V=\\\"api:buffer_start\\\",W=\\\"api:seek_start\\\",X=\\\"api:seek_complete\\\",Y=\\\"api:chapter_start\\\",Z=\\\"api:chapter_complete\\\",$=\\\"api:track_error\\\",_=\\\"api:track_internal_error\\\",aa=\\\"api:bitrate_change\\\",ba=\\\"api:quantum_end\\\",ca=\\\"context:report_available\\\",da=\\\"net:check_status_complete\\\",ea=1.5,fa=10;d.context.Context=e}(a.ADB.core,a.ADB.va,a.ADB.va.utils,b),function(a){\\\"use strict\\\";function b(a,b){this.trackingServer=a,this.publisher=b,this.ssl=!1,this.ovp=c,this.sdk=c,this.quietMode=!1,this.debugLogging=!1,this.__isPrimetime=!1,this.__psdkVersion=null}var c=\\\"unknown\\\";a.AdobeHeartbeatPluginConfig=b}(b),function(a){\\\"use strict\\\";function b(){}b.prototype.onError=function(a){},a.AdobeHeartbeatPluginDelegate=b}(b),function(a,b,c){\\\"use strict\\\";function d(a){d.__super__.constructor.call(this,q),this._radio=new i(this._logger),this._channel=this._radio.channel(y),this._delegate=a,this._context=new l(this._channel,this._logger),this._filter=new m(this._channel,this._logger),this._network=new n(this._channel,this._logger),this._setupDataResolver()}var e=a.Event,f=a.Trigger,g=a.plugin.BasePlugin,h=a.plugin.ParamMapping,i=a.radio.Radio,j=b.ErrorInfo,k=b.Version,l=c.context.Context,m=c.filter.ReportFilter,n=c.network.Network,o=c.clock.Clock,p=c.AdobeHeartbeatPluginConfig;a.extend(d,g),d.prototype.configure=function(a){if(!a)throw new Error(\\\"Reference to the configuration data cannot be NULL.\\\");if(!(a instanceof p))throw new Error(\\\"Expected config data to be instance of AdobeHeartbeatPluginConfig.\\\");this._config=a,this._config.debugLogging?this._logger.enable():this._logger.disable(),this._logger.debug(this._logTag,\\\"#configure({trackingServer=\\\"+this._config.trackingServer+\\\", publisher=\\\"+this._config.publisher+\\\", quietMode=\\\"+this._config.quietMode+\\\", ssl=\\\"+this._config.ssl+\\\"})\\\");var b=this._config.trackingServer+\\\"/settings/\\\",c={};c[ba]=this._config.trackingServer,c[ca]=b,c[da]=this._config.publisher,c[ea]=this._config.quietMode,c[fa]=this._config.ssl,this._channel.trigger(new e(ja,c)),this._isConfigured=!0},d.prototype.bootstrap=function(a){d.__super__.bootstrap.call(this,a),this._channel.on(z,this._onError,this),this._clock=new o(this._pluginManager,this._channel,this._logger),this._channel.command(Ea),this._channel.trigger(new e(La)),this._registerCommands(),this._registerBehaviours()},d.prototype._teardown=function(){this._logger.debug(this._logTag,\\\"#_teardown()\\\"),this._radio.shutdown(),this._context.destroy(),this._clock.destroy(),this._filter.destroy(),this._network.destroy()},d.prototype._canProcess=function(){return this._isConfigured?this._errorInfo?(this._logger.error(this._logTag,\\\"_canProcess() > Plugin in ERROR state.\\\"),!1):d.__super__._canProcess.call(this):(this._logger.error(this._logTag,\\\"_canProcess() > Plugin not configured.\\\"),!1)},d.prototype._cmdAnalyticsError=function(a){this._errorInfo||(this._errorInfo=new j(\\\"Internal error\\\",\\\"AdobeAnalyticsPlugin is in ERROR state.\\\"),this._trigger(z,this._errorInfo),this._delegate&&this._delegate.onError(this._errorInfo))},d.prototype._cmdAnalyticsStart=function(a){if(this._canProcess()){var b={};b[ga]=a.visitorOptedOut,this._channel.trigger(new e(ka,b)),this._channel.trigger(new e(ha,a))}},d.prototype._cmdAnalyticsAdStart=function(a){this._canProcess()&&this._channel.trigger(new e(ia,a))},d.prototype._cmdVideoLoad=function(a){this._errorInfo=null,this._canProcess()&&(this._isTrackingSessionActive&&this._channel.trigger(new e(ma,a)),this._isTrackingSessionActive=!1,this._isPaused=!0,this._isSeeking=!1,this._isBuffering=!1,this._isVideoIdle=!1,this._filter.clear(),this._channel.trigger(new e(la,a)),this._isTrackingSessionActive=!0)},d.prototype._cmdVideoUnload=function(a){this._errorInfo=null,this._canProcess()&&(this._channel.trigger(new e(ma,a)),this._filter.flush(),this._runReportingTimer(!1),this._runFlushFilterTimer(!1),this._runIdleTimer(!1),this._isTrackingSessionActive=!1)},d.prototype._cmdVideoStart=function(a){this._canProcess()&&this._channel.trigger(new e(na,a))},d.prototype._cmdVideoComplete=function(a){this._canProcess()&&this._channel.trigger(new e(oa,a))},d.prototype._cmdVideoResume=function(a){this._canProcess()&&this._channel.trigger(new e(pa,a))},d.prototype._cmdPlay=function(a){this._canProcess()&&(this._isPaused=!1,this._resumePlaybackIfPossible(a))},d.prototype._cmdPause=function(a){this._canProcess()&&(this._channel.trigger(new e(ta,a)),this._isPaused=!0,this._runIdleTimer(!0))},d.prototype._cmdAdStart=function(a){this._canProcess()&&(this._channel.trigger(new e(qa,a)),this._resumePlaybackIfPossible(a))},d.prototype._cmdAdComplete=function(a){this._canProcess()&&(this._channel.trigger(new e(ra,a)),a.isInAdBreak||this._resumePlaybackIfPossible(a))},d.prototype._cmdBufferStart=function(a){this._canProcess()&&(this._channel.trigger(new e(ua,a)),this._isBuffering=!0,this._runIdleTimer(!0))},d.prototype._cmdBufferComplete=function(a){this._canProcess()&&(this._isBuffering=!1,this._resumePlaybackIfPossible(a))},d.prototype._cmdSeekStart=function(a){this._canProcess()&&(this._channel.trigger(new e(va,a)),this._channel.trigger(new e(ta,a)),this._isSeeking=!0,this._runIdleTimer(!0))},d.prototype._cmdSeekComplete=function(a){this._canProcess()&&(this._channel.trigger(new e(wa,a)),this._isSeeking=!1,this._resumePlaybackIfPossible(a))},d.prototype._cmdChapterStart=function(a){this._canProcess()&&this._channel.trigger(new e(xa,a))},d.prototype._cmdChapterComplete=function(a){this._canProcess()&&this._channel.trigger(new e(ya,a))},d.prototype._cmdBitrateChange=function(a){this._canProcess()&&this._channel.trigger(new e(Ba,a))},d.prototype._cmdTrackError=function(a){this._canProcess()&&this._channel.trigger(new e(za,a))},d.prototype._cmdClockReportingTick=function(a){this._canProcess()&&this._channel.trigger(new e(Ca,a))},d.prototype._cmdIdleTick=function(a){this._canProcess()&&(this._isVideoIdle=!0,this._trigger(V),this._filter.flush(),this._runReportingTimer(!1),this._runFlushFilterTimer(!1),this._runIdleTimer(!1),this._trigger(T))},d.prototype._onError=function(a){this._errorInfo=a.data;var b={};b[_]=Da,b[aa]=this._errorInfo.getMessage()+\\\"|\\\"+this._errorInfo.getDetails(),this._channel.trigger(new e(Aa,b)),this._runReportingTimer(!1),this._trigger(z,this._errorInfo),this._delegate&&this._delegate.onError(this._errorInfo)},d.prototype._runIdleTimer=function(a){var b={};b[$]=!0,a?this._channel.command(Ja,b):this._channel.command(Ka,b)},d.prototype._runFlushFilterTimer=function(a){var b={};b[$]=!0,a?this._channel.command(Ha,b):this._channel.command(Ia,b)},d.prototype._runReportingTimer=function(a){var b={};b[$]=!0,a?this._channel.command(Fa,b):this._channel.command(Ga,b)},d.prototype._registerCommands=function(){this._pluginManager.comply(this,\\\"handleAnalyticsError\\\",this._cmdAnalyticsError),this._pluginManager.comply(this,\\\"handleAnalyticsStart\\\",this._cmdAnalyticsStart),this._pluginManager.comply(this,\\\"handleAnalyticsAdStart\\\",this._cmdAnalyticsAdStart),this._pluginManager.comply(this,\\\"handleVideoLoad\\\",this._cmdVideoLoad),this._pluginManager.comply(this,\\\"handleVideoUnload\\\",this._cmdVideoUnload),this._pluginManager.comply(this,\\\"handleVideoStart\\\",this._cmdVideoStart),this._pluginManager.comply(this,\\\"handleVideoComplete\\\",this._cmdVideoComplete),this._pluginManager.comply(this,\\\"handleVideoResume\\\",this._cmdVideoResume),this._pluginManager.comply(this,\\\"handlePlay\\\",this._cmdPlay),this._pluginManager.comply(this,\\\"handlePause\\\",this._cmdPause),this._pluginManager.comply(this,\\\"handleAdStart\\\",this._cmdAdStart),this._pluginManager.comply(this,\\\"handleAdComplete\\\",this._cmdAdComplete),this._pluginManager.comply(this,\\\"handleBufferStart\\\",this._cmdBufferStart),this._pluginManager.comply(this,\\\"handleBufferComplete\\\",this._cmdBufferComplete),this._pluginManager.comply(this,\\\"handleSeekStart\\\",this._cmdSeekStart),this._pluginManager.comply(this,\\\"handleSeekComplete\\\",this._cmdSeekComplete),this._pluginManager.comply(this,\\\"handleChapterStart\\\",this._cmdChapterStart),this._pluginManager.comply(this,\\\"handleChapterComplete\\\",this._cmdChapterComplete),this._pluginManager.comply(this,\\\"handleBitrateChange\\\",this._cmdBitrateChange),this._pluginManager.comply(this,\\\"handleTrackError\\\",this._cmdTrackError),this._pluginManager.comply(this,\\\"handleClockReportingTick\\\",this._cmdClockReportingTick),this._pluginManager.comply(this,\\\"handleIdleTick\\\",this._cmdIdleTick)},d.prototype._registerBehaviours=function(){this._pluginManager.registerBehaviour(new f(t,C),this,\\\"handleVideoLoad\\\",[new h(s,\\\"rsid\\\",\\\"rsid\\\"),new h(s,\\\"tracking_server\\\",\\\"trackingServer\\\")]),this._pluginManager.registerBehaviour(new f(t,D),this,\\\"handleVideoUnload\\\"),this._pluginManager.registerBehaviour(new f(t,E),this,\\\"handleVideoStart\\\",[new h(t,\\\"video.id\\\",\\\"videoId\\\"),new h(t,\\\"video.name\\\",\\\"videoName\\\"),new h(t,\\\"video.length\\\",\\\"videoLength\\\"),new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"video.playerName\\\",\\\"playerName\\\"),new h(t,\\\"video.streamType\\\",\\\"streamType\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\"),new h(s,\\\"rsid\\\",\\\"rsid\\\"),new h(s,\\\"tracking_server\\\",\\\"trackingServer\\\"),new h(s,\\\"channel\\\",\\\"channel\\\"),new h(s,\\\"meta.video.*\\\",\\\"metaVideo\\\"),new h(s,\\\"ssl\\\",\\\"useSsl\\\"),new h(u,\\\"meta\\\",\\\"metaNielsen\\\"),new h(r,\\\"publisher\\\",\\\"publisher\\\"),new h(r,\\\"sdk\\\",\\\"sdk\\\"),new h(r,\\\"ovp\\\",\\\"ovp\\\"),new h(r,\\\"version\\\",\\\"version\\\"),new h(r,\\\"api_level\\\",\\\"apiLvl\\\")]),this._pluginManager.registerBehaviour(new f(t,G),this,\\\"handleVideoComplete\\\",[new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,F),this,\\\"handleVideoResume\\\",[new h(t,\\\"video.id\\\",\\\"videoId\\\"),new h(t,\\\"video.name\\\",\\\"videoName\\\"),new h(t,\\\"video.length\\\",\\\"videoLength\\\"),new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"video.playerName\\\",\\\"playerName\\\"),new h(t,\\\"video.streamType\\\",\\\"streamType\\\")]),this._pluginManager.registerBehaviour(new f(t,H),this,\\\"handlePlay\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,I),this,\\\"handlePause\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"video.playheadStalled\\\",\\\"playheadStalled\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,J),this,\\\"handleAdStart\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"ad.id\\\",\\\"adId\\\"),new h(t,\\\"ad.name\\\",\\\"adName\\\"),new h(t,\\\"ad.length\\\",\\\"adLength\\\"),new h(t,\\\"ad.position\\\",\\\"adPosition\\\"),new h(t,\\\"pod.name\\\",\\\"podName\\\"),new h(t,\\\"pod.playerName\\\",\\\"podPlayerName\\\"),new h(t,\\\"pod.position\\\",\\\"podPosition\\\"),new h(t,\\\"pod.startTime\\\",\\\"podSecond\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\"),new h(s,\\\"meta.video.*\\\",\\\"metaVideo\\\"),new h(s,\\\"meta.ad.*\\\",\\\"metaAd\\\"),new h(u,\\\"meta\\\",\\\"metaNielsen\\\")]),this._pluginManager.registerBehaviour(new f(t,K),this,\\\"handleAdComplete\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"ad.isInAdBreak\\\",\\\"isInAdBreak\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,L),this,\\\"handleBufferStart\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,M),this,\\\"handleBufferComplete\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,N),this,\\\"handleSeekStart\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\")]),this._pluginManager.registerBehaviour(new f(t,O),this,\\\"handleSeekComplete\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"ad.isInAd\\\",\\\"isInAd\\\"),new h(t,\\\"ad.id\\\",\\\"adId\\\"),new h(t,\\\"ad.position\\\",\\\"adPosition\\\"),new h(t,\\\"pod.playerName\\\",\\\"podPlayerName\\\"),new h(t,\\\"pod.position\\\",\\\"podPosition\\\"),new h(t,\\\"chapter.isInChapter\\\",\\\"isInChapter\\\"),new h(t,\\\"chapter.position\\\",\\\"chapterPosition\\\"),new h(t,\\\"chapter.name\\\",\\\"chapterName\\\"),new h(t,\\\"chapter.length\\\",\\\"chapterLength\\\"),new h(t,\\\"chapter.startTime\\\",\\\"chapterOffset\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),\\nthis._pluginManager.registerBehaviour(new f(t,P),this,\\\"handleChapterStart\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"chapter.position\\\",\\\"chapterPosition\\\"),new h(t,\\\"chapter.name\\\",\\\"chapterName\\\"),new h(t,\\\"chapter.length\\\",\\\"chapterLength\\\"),new h(t,\\\"chapter.startTime\\\",\\\"chapterOffset\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\"),new h(s,\\\"meta.video.*\\\",\\\"metaVideo\\\"),new h(s,\\\"meta.chapter.*\\\",\\\"metaChapter\\\"),new h(u,\\\"meta\\\",\\\"metaNielsen\\\")]),this._pluginManager.registerBehaviour(new f(t,Q),this,\\\"handleChapterComplete\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,R),this,\\\"handleBitrateChange\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(t,S),this,\\\"handleTrackError\\\"),this._pluginManager.registerBehaviour(new f(v,X),this,\\\"handleClockReportingTick\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(v,Z),this,\\\"handleIdleTick\\\",[]),this._pluginManager.registerBehaviour(new f(r,V),this,\\\"handleClockReportingTick\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(s,z),this,\\\"handleAnalyticsError\\\"),this._pluginManager.registerBehaviour(new f(s,A),this,\\\"handleAnalyticsStart\\\",[new h(s,\\\"vid\\\",\\\"vid\\\"),new h(s,\\\"aid\\\",\\\"aid\\\"),new h(s,\\\"mid\\\",\\\"mid\\\"),new h(s,\\\"customerIDs\\\",\\\"customerIDs\\\"),new h(s,\\\"visitorOptedOut\\\",\\\"visitorOptedOut\\\"),new h(s,\\\"blob\\\",\\\"blob\\\"),new h(s,\\\"loc_hint\\\",\\\"loc_hint\\\"),new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")]),this._pluginManager.registerBehaviour(new f(s,B),this,\\\"handleAnalyticsAdStart\\\",[new h(t,\\\"video.playhead\\\",\\\"playhead\\\"),new h(t,\\\"qos.fps\\\",\\\"fps\\\"),new h(t,\\\"qos.droppedFrames\\\",\\\"droppedFrames\\\"),new h(t,\\\"qos.bitrate\\\",\\\"bitrate\\\"),new h(t,\\\"qos.startupTime\\\",\\\"startupTime\\\")])},d.prototype._setupDataResolver=function(){var a={},b=this;a.version=function(){return k.getVersion()},a.api_level=function(){return k.getApiLevel()},a.tracking_server=function(){return b._config?b._config.trackingServer:null},a.publisher=function(){return b._config?b._config.publisher:null},a.quiet_mode=function(){return!!b._config&&b._config.quietMode},a.ovp=function(){return b._config?b._config.ovp:null},a.sdk=function(){return b._config?b._config.sdk:null},a.is_primetime=function(){return!!b._config&&b._config.__isPrimetime},a.psdk_version=function(){return b._config?b._config.__psdkVersion:null},a.session_id=function(){return b._channel.request(w)},this._dataResolver=function(b){if(!b||0==b.length)return null;for(var c=null,d=0;d<b.length;d++){var e=b[d];c=c||{},c[e]=a.hasOwnProperty(e)?a[e].call(this):null}return c}},d.prototype._resumePlaybackIfPossible=function(a){this._errorInfo||this._isPaused||this._isSeeking||this._isBuffering||(this._isVideoIdle&&(this._isVideoIdle=!1,this._resumePlaybackFromIdle()),this._runIdleTimer(!1),this._channel.trigger(new e(sa,a)))},d.prototype._resumePlaybackFromIdle=function(){this._trigger(V),this._filter.clear(),this._channel.trigger(new e(x)),this._trigger(U),this._runReportingTimer(!0),this._runFlushFilterTimer(!0)};var q=\\\"adobe-heartbeat\\\",r=q,s=\\\"adobe-analytics\\\",t=\\\"player\\\",u=\\\"nielsen\\\",v=\\\"service.clock\\\",w=\\\"session_id\\\",x=\\\"reset_session_id\\\",y=\\\"heartbeat-channel\\\",z=\\\"error\\\",A=\\\"aa_start\\\",B=\\\"sc_ad_start\\\",C=\\\"video_load\\\",D=\\\"video_unload\\\",E=\\\"video_start\\\",F=\\\"video_resume\\\",G=\\\"video_complete\\\",H=\\\"play\\\",I=\\\"pause\\\",J=\\\"ad_start\\\",K=\\\"ad_complete\\\",L=\\\"buffer_start\\\",M=\\\"buffer_complete\\\",N=\\\"seek_start\\\",O=\\\"seek_complete\\\",P=\\\"chapter_start\\\",Q=\\\"chapter_complete\\\",R=\\\"bitrate_change\\\",S=\\\"track_error\\\",T=\\\"video_idle_start\\\",U=\\\"video_idle_resume\\\",V=\\\"quantum_close\\\",W=\\\"heartbeat.reporting\\\",X=W+\\\".tick\\\",Y=\\\"heartbeat.idle\\\",Z=Y+\\\".tick\\\",$=\\\"reset\\\",_=\\\"source\\\",aa=\\\"error_id\\\",ba=\\\"tracking_server\\\",ca=\\\"check_status_server\\\",da=\\\"publisher\\\",ea=\\\"quiet_mode\\\",fa=\\\"ssl\\\",ga=\\\"visitor_opt_out\\\",ha=\\\"api:aa_start\\\",ia=\\\"api:aa_ad_start\\\",ja=\\\"api:config\\\",ka=\\\"api:update_visitor_optout\\\",la=\\\"api:video_load\\\",ma=\\\"api:video_unload\\\",na=\\\"api:video_start\\\",oa=\\\"api:video_complete\\\",pa=\\\"api:video_resume\\\",qa=\\\"api:ad_start\\\",ra=\\\"api:ad_complete\\\",sa=\\\"api:play\\\",ta=\\\"api:pause\\\",ua=\\\"api:buffer_start\\\",va=\\\"api:seek_start\\\",wa=\\\"api:seek_complete\\\",xa=\\\"api:chapter_start\\\",ya=\\\"api:chapter_complete\\\",za=\\\"api:track_error\\\",Aa=\\\"api:track_internal_error\\\",Ba=\\\"api:bitrate_change\\\",Ca=\\\"api:quantum_end\\\",Da=\\\"sourceErrorHeartbeat\\\",Ea=\\\"clock:check_status.resume\\\",Fa=\\\"clock:reporting.resume\\\",Ga=\\\"clock:reporting.pause\\\",Ha=\\\"clock:flush_filter.resume\\\",Ia=\\\"clock:flush_filter.pause\\\",Ja=\\\"clock:idle.resume\\\",Ka=\\\"clock:idle.pause\\\",La=\\\"clock:check_status.get_settings\\\";c.AdobeHeartbeatPlugin=d}(a.ADB.core,a.ADB.va,b),a.ADB.va.plugins.ah||(a.ADB.va.plugins.ah=b)}(this);\\n\\n// AdobeAnalyticsPlugin\\n!function(a){if(\\\"undefined\\\"==typeof b)var b={};!function(a,b){\\\"use strict\\\";function c(a,b){this._onFail={fn:a,ctx:b}}var d=a.ErrorInfo;c.prototype.validateFields=function(a,b){if(!a)return this._fail(\\\"Data cannot be null\\\");if(b)for(var c=0;c<b.length;c++){var d=b[c];switch(d){case\\\"videoId\\\":if(!a.hasOwnProperty(\\\"videoId\\\"))return this._fail(\\\"The ID for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.videoId)return this._fail(\\\"The ID for the main video must be a String.\\\");if(\\\"\\\"===a.videoId)return this._fail(\\\"The ID for the main video cannot be an empty string.\\\");break;case\\\"streamType\\\":if(!a.hasOwnProperty(\\\"streamType\\\"))return this._fail(\\\"The stream type for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.streamType)return this._fail(\\\"The stream type for the main video must be a String.\\\");if(\\\"\\\"===a.streamType)return this._fail(\\\"The stream type for the main video cannot be an empty string.\\\");break;case\\\"playerName\\\":if(!a.hasOwnProperty(\\\"playerName\\\"))return this._fail(\\\"The player name for the main video must be specified.\\\");if(\\\"string\\\"!=typeof a.playerName)return this._fail(\\\"The player name for the main video must be a String.\\\");if(\\\"\\\"===a.playerName)return this._fail(\\\"The player name for the main video cannot be an empty string.\\\");break;case\\\"videoLength\\\":if(!a.hasOwnProperty(\\\"videoLength\\\"))return this._fail(\\\"The length of the main video must be specified.\\\");if(\\\"number\\\"!=typeof a.videoLength)return this._fail(\\\"The length of the main video must be a Number.\\\");if(isNaN(a.videoLength))return this._fail(\\\"The length of the main video cannot be NaN.\\\");break;case\\\"podPlayerName\\\":if(!a.hasOwnProperty(\\\"podPlayerName\\\"))return this._fail(\\\"The player name for the ad-break must be specified.\\\");if(\\\"string\\\"!=typeof a.podPlayerName)return this._fail(\\\"The player name for the ad-break must be a String.\\\");if(\\\"\\\"===a.podPlayerName)return this._fail(\\\"The player name for the ad-break cannot be an empty string.\\\");break;case\\\"podPosition\\\":if(!a.hasOwnProperty(\\\"podPosition\\\"))return this._fail(\\\"Position (index) of the ad-break must be specified.\\\");if(\\\"number\\\"!=typeof a.podPosition)return this._fail(\\\"Position (index) of the ad-break must be a Number.\\\");if(isNaN(a.podPosition))return this._fail(\\\"Position (index) of the ad-break cannot be NaN.\\\");break;case\\\"adId\\\":if(!a.hasOwnProperty(\\\"adId\\\"))return this._fail(\\\"The ad ID must be specified.\\\");if(\\\"string\\\"!=typeof a.adId)return this._fail(\\\"The ad ID must be a String.\\\");if(\\\"\\\"===a.adId)return this._fail(\\\"The ad ID cannot be an empty string.\\\");break;case\\\"adPosition\\\":if(!a.hasOwnProperty(\\\"adPosition\\\"))return this._fail(\\\"Position (index) of the ad must be specified.\\\");if(\\\"number\\\"!=typeof a.adPosition)return this._fail(\\\"Position (index) of the ad must be a Number.\\\");if(isNaN(a.adPosition))return this._fail(\\\"Position (index) of the ad cannot be NaN.\\\");break;case\\\"adLength\\\":if(!a.hasOwnProperty(\\\"adLength\\\"))return this._fail(\\\"The length of the ad must be specified.\\\");if(\\\"number\\\"!=typeof a.adLength)return this._fail(\\\"The length of the ad must be a Number.\\\");if(isNaN(a.adLength))return this._fail(\\\"The length of the ad cannot be NaN.\\\");break;default:return this._fail(\\\"Unable to validate unknown parameter: \\\"+d)}}return!0},c.prototype._fail=function(a){var b=new d(\\\"Invalid input data\\\",a);return this._onFail.fn&&this._onFail.fn.call(this._onFail.ctx,b),!1},b.InputDataValidator=c}(a.ADB.va,b),function(a){\\\"use strict\\\";function b(){this.channel=c,this.debugLogging=!1}var c=\\\"\\\";a.AdobeAnalyticsPluginConfig=b}(b),function(a){\\\"use strict\\\";function b(){}b.prototype.onError=function(a){},a.AdobeAnalyticsPluginDelegate=b}(b),function(a,b,c,d){\\\"use strict\\\";function e(a,b){if(e.__super__.constructor.call(this,r),!a)throw new Error(\\\"The reference to the AppMeasurement object cannot be NULL.\\\");this._appMeasurement=a,this._delegate=b,this._customMetaKeys=[],this._videoMetadata={},this._adMetadata={},this._chapterMetadata={},this._errorInfo=null,this._workQueue=new k(!0,w),this._inputDataValidator=new q(function(a){this._errorInfo=a,this._logger.error(this._logTag,a.getMessage()+\\\" | \\\"+a.getDetails());var b=this;setTimeout(function(){b._trigger(x,a),b._delegate&&b._delegate.onError(b._errorInfo)},0)},this),this._appMeasurement.isReadyToTrack(),this._setupDataResolver()}var f=a.Trigger,g=a.plugin.BasePlugin,h=a.plugin.ParamMapping,i=a.radio.Channel,j=a.radio.Command,k=a.radio.CommandQueue,l=b.ErrorInfo,m=c.md5,n=c.StringUtils,o=c.ObjectUtils,p=d.AdobeAnalyticsPluginConfig,q=d.InputDataValidator;a.extend(e,g),e.prototype.configure=function(a){if(!a)throw new Error(\\\"Reference to the configuration data cannot be NULL.\\\");if(!(a instanceof p))throw new Error(\\\"Expected config data to be instance of AdobeAnalyticsPluginConfig.\\\");this._config=a,this._config.debugLogging?this._logger.enable():this._logger.disable(),this._logger.debug(this._logTag,\\\"#configure({trackingServer=\\\"+this._config.debugLogging+\\\", channel=\\\"+this._config.channel+\\\", ssl=\\\"+this._appMeasurement.ssl+\\\"})\\\")},e.prototype.bootstrap=function(a){e.__super__.bootstrap.call(this,a),this._registerCommands(),this._registerBehaviours()},e.prototype.setup=function(){this._appMeasurement.isReadyToTrack()?this._onAppMeasurementReady():this._appMeasurement.callbackWhenReadyToTrack(this,this._onAppMeasurementReady,[]),e.__super__.setup.call(this)},e.prototype.setVideoMetadata=function(a){this._videoMetadata=o.clone(a)},e.prototype.setAdMetadata=function(a){this._adMetadata=o.clone(a)},e.prototype.setChapterMetadata=function(a){this._chapterMetadata=o.clone(a)},e.prototype._canProcess=function(){return this._errorInfo?(this._logger.error(this._logTag,\\\"#_canProcess() > In ERROR state.\\\"),!1):e.__super__._canProcess.call(this)},e.prototype._cmdVideoLoad=function(a){this._errorInfo=null},e.prototype._cmdVideoStart=function(a){this._logger.debug(this._logTag,\\\"#_cmdVideoStart()\\\"),this._canProcess()&&this._workQueue.addCommand(new j(this._executeOpen,this,[a]))},e.prototype._cmdAdStart=function(a){this._logger.debug(this._logTag,\\\"#_cmdAdStart()\\\"),this._canProcess()&&this._workQueue.addCommand(new j(this._executeOpenAd,this,[a]))},e.prototype._cmdHeartbeatPluginError=function(a){this._errorInfo||(this._errorInfo=new l(\\\"Internal error\\\",\\\"HeartbeatPlugin is in ERROR state.\\\"),this._trigger(x,this._errorInfo),this._delegate&&this._delegate.onError(this._errorInfo))},e.prototype._resetAppMeasurementContextData=function(){delete this._appMeasurement.contextData[\\\"a.contentType\\\"],delete this._appMeasurement.contextData[\\\"a.media.name\\\"],delete this._appMeasurement.contextData[\\\"a.media.friendlyName\\\"],delete this._appMeasurement.contextData[\\\"a.media.length\\\"],delete this._appMeasurement.contextData[\\\"a.media.playerName\\\"],delete this._appMeasurement.contextData[\\\"a.media.channel\\\"],delete this._appMeasurement.contextData[\\\"a.media.view\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.name\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.friendlyName\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.podFriendlyName\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.length\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.playerName\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.pod\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.podPosition\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.podSecond\\\"],delete this._appMeasurement.contextData[\\\"a.media.ad.view\\\"];for(var a=0;a<this._customMetaKeys.length;a++){var b=this._customMetaKeys[a];delete this._appMeasurement.contextData[b]}this._customMetaKeys=[]},e.prototype._executeOpen=function(a){if(this._logger.debug(this._logTag,\\\"#_executeOpen(id=\\\"+a.videoId+\\\", videoName=\\\"+a.videoName+\\\", streamType=\\\"+a.streamType+\\\", length=\\\"+a.videoLength+\\\", playerName=\\\"+a.playerName+\\\", channel=\\\"+a.channel+\\\", isPrimetime=\\\"+a.isPrimetime+\\\", sessionId=\\\"+a.sessionId+\\\")\\\"),this._canProcess()&&this._inputDataValidator.validateFields(a,[\\\"videoId\\\",\\\"streamType\\\",\\\"videoLength\\\",\\\"playerName\\\"])){this._resetAppMeasurementContextData();for(var b in a.metaVideo)a.metaVideo.hasOwnProperty(b)&&(this._appMeasurement.contextData[b]=a.metaVideo[b],this._customMetaKeys.push(b));if(a.metaNielsen)for(var b in a.metaNielsen)a.metaNielsen.hasOwnProperty(b)&&(this._appMeasurement.contextData[b]=a.metaNielsen[b],this._customMetaKeys.push(b));this._appMeasurement.contextData[\\\"a.contentType\\\"]=a.streamType,this._appMeasurement.contextData[\\\"a.media.name\\\"]=a.videoId,this._appMeasurement.contextData[\\\"a.media.friendlyName\\\"]=a.videoName||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.length\\\"]=Math.floor(a.videoLength)||\\\"0.0\\\",this._appMeasurement.contextData[\\\"a.media.playerName\\\"]=a.playerName,this._appMeasurement.contextData[\\\"a.media.channel\\\"]=a.channel||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.view\\\"]=!0,this._appMeasurement.contextData[\\\"a.media.vsid\\\"]=a.sessionId,this._appMeasurement.pev3=y,this._appMeasurement.pe=a.isPrimetime?B:A,this._appMeasurement.track();var c=this;setTimeout(function(){c._trigger(E,a)},0)}},e.prototype._executeOpenAd=function(a){var b=m(a.videoId)+\\\"_\\\"+a.podPosition;if(this._logger.debug(this._logTag,\\\"#_executeOpenAd(id=\\\"+a.adId+\\\", streamType=\\\"+a.streamType+\\\", length=\\\"+a.adLength+\\\", podPlayerName=\\\"+a.podPlayerName+\\\", parentId=\\\"+a.videoId+\\\", podId=\\\"+b+\\\", parentPodPosition=\\\"+a.adPosition+\\\", podSecond=\\\"+a.podSecond+\\\")\\\"),this._canProcess()&&this._inputDataValidator.validateFields(a,[\\\"videoId\\\",\\\"streamType\\\",\\\"playerName\\\",\\\"adId\\\",\\\"adLength\\\",\\\"podPlayerName\\\",\\\"adPosition\\\"])){a.podSecond=null==a.podSecond||isNaN(a.podSecond)?a.playhead:a.podSecond,this._resetAppMeasurementContextData();var c;for(c in a.metaVideo)a.metaVideo.hasOwnProperty(c)&&(this._appMeasurement.contextData[c]=a.metaVideo[c],this._customMetaKeys.push(c));for(c in a.metaAd)a.metaAd.hasOwnProperty(c)&&(this._appMeasurement.contextData[c]=a.metaAd[c],this._customMetaKeys.push(c));if(a.metaNielsen)for(var c in a.metaNielsen)a.metaNielsen.hasOwnProperty(c)&&(this._appMeasurement.contextData[c]=a.metaNielsen[c],this._customMetaKeys.push(c));this._appMeasurement.contextData[\\\"a.contentType\\\"]=a.streamType,this._appMeasurement.contextData[\\\"a.media.name\\\"]=a.videoId,this._appMeasurement.contextData[\\\"a.media.playerName\\\"]=a.playerName,this._appMeasurement.contextData[\\\"a.media.channel\\\"]=a.channel||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.vsid\\\"]=a.sessionId,this._appMeasurement.contextData[\\\"a.media.friendlyName\\\"]=a.videoName||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.length\\\"]=Math.floor(a.videoLength)||\\\"0.0\\\",this._appMeasurement.contextData[\\\"a.media.ad.name\\\"]=a.adId,this._appMeasurement.contextData[\\\"a.media.ad.friendlyName\\\"]=a.adName||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.ad.podFriendlyName\\\"]=a.podName||\\\"\\\",this._appMeasurement.contextData[\\\"a.media.ad.length\\\"]=Math.floor(a.adLength)||\\\"0.0\\\",this._appMeasurement.contextData[\\\"a.media.ad.playerName\\\"]=a.podPlayerName,this._appMeasurement.contextData[\\\"a.media.ad.pod\\\"]=b,this._appMeasurement.contextData[\\\"a.media.ad.podPosition\\\"]=Math.floor(a.adPosition)||\\\"0.0\\\",this._appMeasurement.contextData[\\\"a.media.ad.podSecond\\\"]=Math.floor(a.podSecond)||\\\"0.0\\\",this._appMeasurement.contextData[\\\"a.media.ad.view\\\"]=!0,this._appMeasurement.pev3=z,this._appMeasurement.pe=a.isPrimetime?D:C,this._appMeasurement.track();var d=this;setTimeout(function(){d._trigger(F,a)},0)}},e.prototype._setupDataResolver=function(){var a={},b=this;a.rsid=function(){return b._appMeasurement.account},a.tracking_server=function(){return b._appMeasurement.ssl&&b._appMeasurement.trackingServerSecure?b._appMeasurement.trackingServerSecure:b._appMeasurement.trackingServer},a.ssl=function(){return b._appMeasurement.ssl},a.vid=function(){return b._appMeasurement.visitorID},a.aid=function(){return b._appMeasurement.analyticsVisitorID},a.mid=function(){return b._appMeasurement.marketingCloudVisitorID},a.blob=function(){return b._appMeasurement.audienceManagerBlob},a.loc_hint=function(){return b._appMeasurement.audienceManagerLocationHint?parseInt(b._appMeasurement.audienceManagerLocationHint):\\\"\\\"},a.customerIDs=function(){var a=b._appMeasurement.visitor.getCustomerIDs(),c={};for(var d in a)if(a.hasOwnProperty(d)){var e=a[d];if(\\\"object\\\"==typeof e){for(var f in e)e.hasOwnProperty(f)&&(\\\"authState\\\"==f?c[d+\\\".as\\\"]=e[f]:c[d+\\\".\\\"+f]=e[f]);c[d+\\\".as\\\"]||(c[d+\\\".as\\\"]=\\\"0\\\")}}return c},a.channel=function(){return b._config?b._config.channel:null},a.meta=function(a){var c=a.split(\\\".\\\");if(c.length<2)return null;var d=c.shift();switch(a=c.join(\\\".\\\"),d){case\\\"video\\\":return a==i.WILDCARD?b._videoMetadata:b._videoMetadata[a];case\\\"ad\\\":return a==i.WILDCARD?b._adMetadata:b._adMetadata[a];case\\\"chapter\\\":return a==i.WILDCARD?b._chapterMetadata:b._chapterMetadata[a];default:return null}},a.visitorOptedOut=function(){return void 0!=b._appMeasurement.visitorOptedOut&&b._appMeasurement.visitorOptedOut},this._dataResolver=function(b){if(!b||0==b.length)return null;for(var c=null,d=0;d<b.length;d++){var e=b[d];c=c||{},n.startsWith(e,\\\"meta.\\\")?c[e]=a.meta(e.split(\\\"meta.\\\")[1]):c[e]=a.hasOwnProperty(e)?a[e].call(this):null}return c}},e.prototype._registerCommands=function(){this._pluginManager.comply(this,\\\"handleVideoLoad\\\",this._cmdVideoLoad),this._pluginManager.comply(this,\\\"handleVideoStart\\\",this._cmdVideoStart),this._pluginManager.comply(this,\\\"handleAdStart\\\",this._cmdAdStart),this._pluginManager.comply(this,\\\"handleHeartbeatPluginError\\\",this._cmdHeartbeatPluginError)},e.prototype._registerBehaviours=function(){this._pluginManager.registerBehaviour(new f(u,G),this,\\\"handleVideoLoad\\\"),this._pluginManager.registerBehaviour(new f(u,H),this,\\\"handleVideoStart\\\",[new h(u,\\\"video.id\\\",\\\"videoId\\\"),new h(u,\\\"video.streamType\\\",\\\"streamType\\\"),new h(u,\\\"video.name\\\",\\\"videoName\\\"),new h(u,\\\"video.length\\\",\\\"videoLength\\\"),new h(u,\\\"video.playerName\\\",\\\"playerName\\\"),new h(u,\\\"video.streamType\\\",\\\"streamType\\\"),new h(v,\\\"is_primetime\\\",\\\"isPrimetime\\\"),new h(v,\\\"session_id\\\",\\\"sessionId\\\"),new h(s,\\\"channel\\\",\\\"channel\\\"),new h(s,\\\"meta.video.*\\\",\\\"metaVideo\\\"),new h(t,\\\"meta\\\",\\\"metaNielsen\\\")]),this._pluginManager.registerBehaviour(new f(u,I),this,\\\"handleAdStart\\\",[new h(u,\\\"video.id\\\",\\\"videoId\\\"),new h(u,\\\"video.streamType\\\",\\\"streamType\\\"),new h(u,\\\"video.playhead\\\",\\\"playhead\\\"),new h(u,\\\"video.playerName\\\",\\\"playerName\\\"),new h(u,\\\"video.name\\\",\\\"videoName\\\"),new h(u,\\\"video.length\\\",\\\"videoLength\\\"),new h(u,\\\"ad.id\\\",\\\"adId\\\"),new h(u,\\\"ad.length\\\",\\\"adLength\\\"),new h(u,\\\"ad.position\\\",\\\"adPosition\\\"),new h(u,\\\"ad.name\\\",\\\"adName\\\"),new h(u,\\\"pod.name\\\",\\\"podName\\\"),new h(u,\\\"pod.position\\\",\\\"podPosition\\\"),new h(u,\\\"pod.playerName\\\",\\\"podPlayerName\\\"),new h(u,\\\"pod.startTime\\\",\\\"podSecond\\\"),new h(v,\\\"is_primetime\\\",\\\"isPrimetime\\\"),new h(v,\\\"session_id\\\",\\\"sessionId\\\"),new h(s,\\\"channel\\\",\\\"channel\\\"),new h(s,\\\"meta.video.*\\\",\\\"metaVideo\\\"),new h(s,\\\"meta.ad.*\\\",\\\"metaAd\\\"),new h(t,\\\"meta\\\",\\\"metaNielsen\\\")]),this._pluginManager.registerBehaviour(new f(v,x),this,\\\"handleHeartbeatPluginError\\\")},e.prototype._onAppMeasurementReady=function(){this._workQueue.resume()};var r=\\\"adobe-analytics\\\",s=r,t=\\\"nielsen\\\",u=\\\"player\\\",v=\\\"adobe-heartbeat\\\",w=2e3,x=\\\"error\\\",y=\\\"video\\\",z=\\\"videoAd\\\",A=\\\"ms_s\\\",B=\\\"msp_s\\\",C=\\\"msa_s\\\",D=\\\"mspa_s\\\",E=\\\"aa_start\\\",F=\\\"sc_ad_start\\\",G=\\\"video_load\\\",H=\\\"video_start\\\",I=\\\"ad_start\\\";d.AdobeAnalyticsPlugin=e}(a.ADB.core,a.ADB.va,a.ADB.va.utils,b),function(a){\\\"use strict\\\";var b={SHOW:\\\"a.media.show\\\",SEASON:\\\"a.media.season\\\",EPISODE:\\\"a.media.episode\\\",ASSET_ID:\\\"a.media.asset\\\",GENRE:\\\"a.media.genre\\\",FIRST_AIR_DATE:\\\"a.media.airDate\\\",FIRST_DIGITAL_DATE:\\\"a.media.digitalDate\\\",RATING:\\\"a.media.rating\\\",ORIGINATOR:\\\"a.media.originator\\\",NETWORK:\\\"a.media.network\\\",SHOW_TYPE:\\\"a.media.type\\\",AD_LOAD:\\\"a.media.adLoad\\\",MVPD:\\\"a.media.pass.mvpd\\\",AUTHORIZED:\\\"a.media.pass.auth\\\",DAY_PART:\\\"a.media.dayPart\\\",FEED:\\\"a.media.feed\\\",STREAM_FORMAT:\\\"a.media.format\\\"},c={ADVERTISER:\\\"a.media.ad.advertiser\\\",CAMPAIGN_ID:\\\"a.media.ad.campaign\\\",CREATIVE_ID:\\\"a.media.ad.creative\\\",PLACEMENT_ID:\\\"a.media.ad.placement\\\",SITE_ID:\\\"a.media.ad.site\\\",CREATIVE_URL:\\\"a.media.ad.creativeURL\\\"};a.VideoMetadataKeys=b,a.AdMetadataKeys=c}(b),a.ADB.va.plugins.aa||(a.ADB.va.plugins.aa=b)}(this);\\n\\n// MediaHeartbeat\\n!function(a){!function(a){\\\"use strict\\\";function b(){this.trackingServer=void 0,this.channel=void 0,this.ovp=void 0,this.appVersion=void 0,this.playerName=void 0,this.ssl=!1,this.debugLogging=!1}a.MediaHeartbeatConfig=b,a.MediaHeartbeatConfig.sharedInstance=new b}(a.ADB.va),function(a){\\\"use strict\\\";function b(){this.data={}}var c=a.plugins.videoplayer.VideoInfo,d=a.plugins.videoplayer.AdBreakInfo,e=a.plugins.videoplayer.AdInfo,f=a.plugins.videoplayer.ChapterInfo,g=a.plugins.videoplayer.QoSInfo;b.MEDIAINFO_KEY_NAME=\\\"a.name\\\",b.MEDIAINFO_KEY_VIDEOID=\\\"a.videoId\\\",b.MEDIAINFO_KEY_ADID=\\\"a.adId\\\",b.MEDIAINFO_KEY_LENGTH=\\\"a.length\\\",b.MEDIAINFO_KEY_PLAYHEAD=\\\"a.playhead\\\",b.MEDIAINFO_KEY_STREAMTYPE=\\\"a.streamType\\\",b.MEDIAINFO_KEY_POSITION=\\\"a.position\\\",b.MEDIAINFO_KEY_STARTTIME=\\\"a.startTime\\\",b.MEDIAINFO_KEY_BITRATE=\\\"a.bitrate\\\",b.MEDIAINFO_KEY_FPS=\\\"a.fps\\\",b.MEDIAINFO_KEY_DROPPEDFRAMES=\\\"a.droppedFrames\\\",b.MEDIAINFO_KEY_STARTUPTIME=\\\"a.startupTime\\\",b.MEDIAINFO_KEY_TIMEDMETADATA=\\\"a.timedMetadata\\\",b.prototype.setValue=function(a,b){this.data[a]=b},b.prototype.getValue=function(a){return this.data.hasOwnProperty(a)?this.data[a]:null},b.prototype.createVideoInfo=function(){var a=new c;return a.id=null!=this.getValue(b.MEDIAINFO_KEY_VIDEOID)?this.getValue(b.MEDIAINFO_KEY_VIDEOID):\\\"\\\",a.name=null!=this.getValue(b.MEDIAINFO_KEY_NAME)?this.getValue(b.MEDIAINFO_KEY_NAME):\\\"\\\",a.length=null!=this.getValue(b.MEDIAINFO_KEY_LENGTH)?this.getValue(b.MEDIAINFO_KEY_LENGTH):0,a.playhead=null!=this.getValue(b.MEDIAINFO_KEY_PLAYHEAD)?this.getValue(b.MEDIAINFO_KEY_PLAYHEAD):0,a.streamType=null!=this.getValue(b.MEDIAINFO_KEY_STREAMTYPE)?this.getValue(b.MEDIAINFO_KEY_STREAMTYPE):\\\"\\\",a},b.prototype.createAdBreakInfo=function(){var a=new d;return a.name=null!=this.getValue(b.MEDIAINFO_KEY_NAME)?this.getValue(b.MEDIAINFO_KEY_NAME):\\\"\\\",a.position=null!=this.getValue(b.MEDIAINFO_KEY_POSITION)?this.getValue(b.MEDIAINFO_KEY_POSITION):0,a.startTime=null!=this.getValue(b.MEDIAINFO_KEY_STARTTIME)?this.getValue(b.MEDIAINFO_KEY_STARTTIME):0,a},b.prototype.createAdInfo=function(){var a=new e;return a.id=null!=this.getValue(b.MEDIAINFO_KEY_ADID)?this.getValue(b.MEDIAINFO_KEY_ADID):\\\"\\\",a.name=null!=this.getValue(b.MEDIAINFO_KEY_NAME)?this.getValue(b.MEDIAINFO_KEY_NAME):\\\"\\\",a.length=null!=this.getValue(b.MEDIAINFO_KEY_LENGTH)?this.getValue(b.MEDIAINFO_KEY_LENGTH):0,a.position=null!=this.getValue(b.MEDIAINFO_KEY_POSITION)?this.getValue(b.MEDIAINFO_KEY_POSITION):0,a},b.prototype.createChapterInfo=function(){var a=new f;return a.name=null!=this.getValue(b.MEDIAINFO_KEY_NAME)?this.getValue(b.MEDIAINFO_KEY_NAME):\\\"\\\",a.length=null!=this.getValue(b.MEDIAINFO_KEY_LENGTH)?this.getValue(b.MEDIAINFO_KEY_LENGTH):0,a.startTime=null!=this.getValue(b.MEDIAINFO_KEY_STARTTIME)?this.getValue(b.MEDIAINFO_KEY_STARTTIME):0,a.position=null!=this.getValue(b.MEDIAINFO_KEY_POSITION)?this.getValue(b.MEDIAINFO_KEY_POSITION):0,a},b.prototype.createQoSInfo=function(){var a=new g;return a.bitrate=null!=this.getValue(b.MEDIAINFO_KEY_BITRATE)?this.getValue(b.MEDIAINFO_KEY_BITRATE):0,a.fps=null!=this.getValue(b.MEDIAINFO_KEY_FPS)?this.getValue(b.MEDIAINFO_KEY_FPS):0,a.droppedFrames=null!=this.getValue(b.MEDIAINFO_KEY_DROPPEDFRAMES)?this.getValue(b.MEDIAINFO_KEY_DROPPEDFRAMES):0,a.startupTime=null!=this.getValue(b.MEDIAINFO_KEY_STARTUPTIME)?this.getValue(b.MEDIAINFO_KEY_STARTUPTIME):0,a},a.MediaObject=b}(a.ADB.va),function(a,b){\\\"use strict\\\";function c(a){c.__super__.constructor.call(this),this._heartbeat=a}function d(a){d.__super__.constructor.call(this),this._heartbeat=a}function e(a){e.__super__.constructor.call(this),this._heartbeat=a}function f(a){f.__super__.constructor.call(this),this._heartbeat=a}a.extend(c,b.plugins.aa.AdobeAnalyticsPluginDelegate),c.prototype.onError=function(a){b.MediaHeartbeat._onDelegateError.call(this._heartbeat,a)},a.extend(d,b.plugins.ah.AdobeHeartbeatPluginDelegate),d.prototype.onError=function(a){b.MediaHeartbeat._onDelegateError.call(this._heartbeat,a)},a.extend(e,b.HeartbeatDelegate),e.prototype.onError=function(a){b.MediaHeartbeat._onDelegateError.call(this._heartbeat,a)},a.extend(f,b.plugins.videoplayer.VideoPlayerPluginDelegate),f.prototype.getVideoInfo=function(){return this._heartbeat&&this._heartbeat._videoInfo?(this._heartbeat._delegate&&(this._heartbeat._videoInfo.playhead=this._heartbeat._delegate.getCurrentPlaybackTime()),this._heartbeat._videoInfo):null},f.prototype.getAdBreakInfo=function(){return this._heartbeat&&this._heartbeat._adBreakInfo?this._heartbeat._adBreakInfo:null},f.prototype.getAdInfo=function(){return this._heartbeat&&this._heartbeat._adInfo?this._heartbeat._adInfo:null},f.prototype.getChapterInfo=function(){return this._heartbeat&&this._heartbeat._chapterInfo?this._heartbeat._chapterInfo:null},f.prototype.getQoSInfo=function(){if(this._heartbeat&&this._heartbeat._delegate&&this._heartbeat._delegate.getQoSObject()){var a=this._heartbeat._delegate.getQoSObject();if(a&&\\\"object\\\"==typeof a&&a.setValue)return a.createQoSInfo()}return null},b._MediaAnalyticsPluginDelegate=c,b._MediaHeartbeatPluginDelegate=d,b._ADBMediaHeartbeatDelegate=e,b._MediaHeartbeatVideoPlayerPluginDelegate=f}(a.ADB.core,a.ADB.va),function(a,b){\\\"use strict\\\";function c(){}function d(a){d.__super__.constructor.call(this),this._heartbeat=a}var e=b.MediaHeartbeatConfig;b.plugins.nielsen&&(c.MEDIAHEARTBEAT_NIELSEN_CONTENT_METADATA=\\\"media_nielsen_content_metadata\\\",c.MEDIAHEARTBEAT_NIELSEN_AD_METADATA=\\\"media_nielsen_ad_metadata\\\",c.MEDIAHEARTBEAT_NIELSEN_CHANNEL_METADATA=\\\"media_nielsen_channel_metadata\\\",e.prototype.nielsenConfigKey=void 0,e.prototype.nielsenAppInfo=void 0,a.extend(d,b.plugins.nielsen.NielsenPluginDelegate),d.prototype.getMetadataInfo=function(){if(this._heartbeat&&this._heartbeat._currentContentMediaObject){var a=this._heartbeat._currentContentMediaObject.getValue(c.MEDIAHEARTBEAT_NIELSEN_CONTENT_METADATA);if(\\\"object\\\"==typeof a)return a}return null},d.prototype.getAdMetadataInfo=function(){if(this._heartbeat&&this._heartbeat._currentAdMediaObject){var a=this._heartbeat._currentAdMediaObject.getValue(c.MEDIAHEARTBEAT_NIELSEN_AD_METADATA);if(\\\"object\\\"==typeof a)return a}return null},d.prototype.getChannelInfo=function(){if(this._heartbeat&&this._heartbeat._currentContentMediaObject){var a=this._heartbeat._currentContentMediaObject.getValue(c.MEDIAHEARTBEAT_NIELSEN_CHANNEL_METADATA);if(\\\"object\\\"==typeof a)return a}return null},d.prototype.onError=function(a){this._heartbeat&&b.MediaHeartbeat._onError.call(this._heartbeat,a)},b._MediaHeartbeatNielsen=c,b._MediaHeartbeatNielsenPluginDelegate=d)}(a.ADB.core,a.ADB.va),function(b,c){\\\"use strict\\\";function d(){}function e(b,d,e){if(this._logger=new z,this._plugins=[],this._playerPlugin=null,this._aaPlugin=null,this._ahPlugin=null,this._nielsenPlugin=null,this._currentContentMediaObject=void 0,this._currentAdMediaObject=void 0,this._videoInfo=void 0,this._adBreakInfo=void 0,this._adInfo=void 0,this._chapterInfo=void 0,this._state={},this._delegate=b,e)this.appMeasurement=e;else{if(!a.s)return void this._logger.error($,\\\"Valid AppMeasurement instance required for initialising MediaHeartbeat\\\");this.appMeasurement=a.s}d&&\\\"object\\\"==typeof d&&void 0!=d.trackingServer?(this._config=d,c.MediaHeartbeat._debugLogging||this._config.debugLogging?this._logger.enable():this._logger.disable()):this._logger.error($,\\\"Valid config required for initialising MediaHeartbeat\\\")}function f(a,b){if(a==e.Event.AdBreakStart){if(this._logger.info($,\\\"#::trackEvent(AdBreakStart)\\\"),!t.call(this,Y))return void this._logger.error($,\\\"API call trackEvent:AdBreakStart is unsupported in the current state.\\\");b&&\\\"object\\\"==typeof b&&b.setValue?(this._adBreakInfo=b.createAdBreakInfo(),this._adBreakInfo.playerName=this._config.playerName?this._config.playerName:\\\"\\\"):this._logger.error($,\\\"Invalid AdBreak Info for MediaHeartbeatEvent.AdBreakStart event.\\\")}else{if(this._logger.info($,\\\"#::trackEvent(AdBreakComplete)\\\"),!t.call(this,Y,!0))return void this._logger.error($,\\\"API call trackEvent:AdBreakComplete is unsupported in the current state.\\\");this._adBreakInfo=void 0}}function g(a,b,c){if(a==e.Event.AdStart){if(this._logger.info($,\\\"#::trackEvent(AdStart)\\\"),!t.call(this,X))return void this._logger.error($,\\\"API call trackEvent:AdStart is unsupported in the current state.\\\");if(b&&\\\"object\\\"==typeof b&&b.setValue){this._currentAdMediaObject=b,this._adInfo=b.createAdInfo();var d=b.getValue(e.MediaObjectKey.StandardAdMetadata);if(d&&\\\"object\\\"==typeof d)for(var f in d)d.hasOwnProperty(f)&&(c[f]=d[f]);this._aaPlugin&&this._aaPlugin.setAdMetadata(c),this._playerPlugin.trackAdStart(),this._state[Z]||this._state[S]||this.trackPlay()}else this._logger.error($,\\\"Invalid Ad Info for MediaHeartbeatEvent.AdStart event.\\\")}else if(a==e.Event.AdComplete){if(this._logger.info($,\\\"#::trackEvent(AdComplete)\\\"),!t.call(this,X,!0))return void this._logger.error($,\\\"API call trackEvent:AdComplete is unsupported in the current state.\\\");this._playerPlugin.trackAdComplete(),this._adInfo=null}else{if(this._logger.info($,\\\"#::trackEvent(AdSkip)\\\"),!t.call(this,X,!0))return void this._logger.error($,\\\"API call trackEvent:AdSkip is unsupported in the current state.\\\");this._adInfo=null}}function h(a){if(a==e.Event.SeekStart){if(this._logger.info($,\\\"#::trackEvent(SeekStart)\\\"),!t.call(this,V))return void this._logger.error($,\\\"API call trackEvent:SeekStart is unsupported in the current state.\\\");this._playerPlugin.trackSeekStart()}else{if(this._logger.info($,\\\"#::trackEvent(SeekComplete)\\\"),!t.call(this,V,!0))return void this._logger.error($,\\\"API call trackEvent:SeekComplete is unsupported in the current state.\\\");this._playerPlugin.trackSeekComplete()}}function i(a,b,c){if(a==e.Event.ChapterStart){if(this._logger.info($,\\\"#::trackEvent(ChapterStart)\\\"),!t.call(this,W))return void this._logger.error($,\\\"API call trackEvent:ChapterStart is unsupported in the current state.\\\");b&&\\\"object\\\"==typeof b&&b.setValue?(this._chapterInfo=b.createChapterInfo(),this._aaPlugin&&this._aaPlugin.setChapterMetadata(c),this._playerPlugin.trackChapterStart(),this._state[Z]||this._state[S]||this.trackPlay()):this._logger.error($,\\\"Invalid Chapter Info for MediaHeartbeatEvent.ChapterStart event.\\\")}else if(a==e.Event.ChapterComplete){if(this._logger.info($,\\\"#::trackEvent(ChapterComplete)\\\"),!t.call(this,W,!0))return void this._logger.error($,\\\"API call trackEvent:ChapterComplete is unsupported in the current state.\\\");this._chapterInfo=null,this._playerPlugin.trackChapterComplete()}else{if(this._logger.info($,\\\"#::trackEvent(ChapterSkip)\\\"),!t.call(this,W,!0))return void this._logger.error($,\\\"API call trackEvent:ChapterSkip is unsupported in the current state.\\\");this._chapterInfo=null}}function j(a){if(a==e.Event.BufferStart){if(this._logger.info($,\\\"#::trackEvent(BufferStart)\\\"),!t.call(this,U))return void this._logger.error($,\\\"API call trackEvent:BufferStart is unsupported in the current state.\\\");this._playerPlugin.trackBufferStart()}else{if(this._logger.info($,\\\"#::trackEvent(BufferComplete)\\\"),!t.call(this,U,!0))return void this._logger.error($,\\\"API call trackEvent:BufferComplete is unsupported in the current state.\\\");this._playerPlugin.trackBufferComplete()}}function k(){return this._logger.info($,\\\"#::trackEvent(BitrateChange)\\\"),w.call(this)?void this._playerPlugin.trackBitrateChange():void this._logger.error($,\\\"API call trackEvent:BitrateChange is unsupported in the current state.\\\")}function l(a){if(this._logger.info($,\\\"#::trackEvent(TimedMetadataUpdate)\\\"),a&&\\\"object\\\"==typeof a&&a.setValue){var b=a.getValue(B.MEDIAINFO_KEY_TIMEDMETADATA);this._playerPlugin&&b&&\\\"string\\\"==typeof b&&this._playerPlugin.trackTimedMetadata(b)}}function m(){this._aaPlugin=new I(this.appMeasurement,new K(this));var a=new J;a.channel=this._config.channel?this._config.channel:\\\"\\\",a.debugLogging=c.MediaHeartbeat._debugLogging||this._config.debugLogging,this._aaPlugin.configure(a),this._plugins.push(this._aaPlugin)}function n(){this._ahPlugin=new L(new N(this));var a=new M(this._config.trackingServer,this.appMeasurement.visitor.marketingCloudOrgID);a.debugLogging=c.MediaHeartbeat._debugLogging||this._config.debugLogging,a.ovp=this._config.ovp?this._config.ovp:\\\"\\\",a.ssl=this._config.ssl,a.sdk=this._config.appVersion?this._config.appVersion:\\\"\\\";var b=s.call(this);b&&b.length>0&&(a.__primetime=!0,a.__psdkVersion=b),this._ahPlugin.configure(a),this._plugins.push(this._ahPlugin)}function o(){this._playerPlugin=new F(new H(this));var a=new G;a.debugLogging=c.MediaHeartbeat._debugLogging||this._config.debugLogging,this._playerPlugin.configure(a),this._plugins.push(this._playerPlugin)}function p(){if(c.plugins.nielsen&&this._config.nielsenConfigKey&&this._config.nielsenAppInfo){this._nielsenPlugin=new c.plugins.nielsen.NielsenPlugin(new c._MediaHeartbeatNielsenPluginDelegate(this));var a=new c.plugins.nielsen.NielsenPluginConfig;a.debugLogging=c.MediaHeartbeat._debugLogging||this._config.debugLogging,a.appInfo=this._config.nielsenAppInfo,a.configKey=this._config.nielsenConfigKey,this._nielsenPlugin.configure(a),this._plugins.push(this._nielsenPlugin)}}function q(){var a=new D;a.debugLogging=c.MediaHeartbeat._debugLogging||this._config.debugLogging,this._heartbeat=new C(new E(this),this._plugins),this._heartbeat.configure(a)}function r(a){this._logger.error($,a.getMessage()+\\\" | \\\"+a.getDetails())}function s(){return this._currentContentMediaObject?this._currentContentMediaObject.getValue(_):null}function t(a,b){if(a!=Q&&(!this._state[Q]||this._state[T]))return!1;a===R&&u.call(this);var c=!(a===Y&&!b);if(c&&(b?!this._state[a]:this._state[a]))return!1;switch(a){case R:this._state[S]=b,this._state[Z]=!0;break;case S:this._state[R]=b;break;case Y:if(!b&&this._state[X])return!1;break;case X:if(!b&&!this._state[Y])return!1}return this._state[a]=!b,!0}function u(){this._state[V]&&this.trackEvent(e.Event.SeekComplete),this._state[U]&&this.trackEvent(e.Event.BufferComplete)}function v(a){this._state[a]=!1}function w(){return this._state[Q]}function x(){this._state={}}function y(){this._plugins=[],this._aaPlugin=null,this._ahPlugin=null,this._playerPlugin=null,this._nielsenPlugin=null,this._heartbeat&&(this._heartbeat.destroy(),this._heartbeat=null)}var z=b.Logger,A=c.plugins.videoplayer.AssetType,B=c.MediaObject,C=c.Heartbeat,D=c.HeartbeatConfig,E=c._ADBMediaHeartbeatDelegate,F=c.plugins.videoplayer.VideoPlayerPlugin,G=c.plugins.videoplayer.VideoPlayerPluginConfig,H=c._MediaHeartbeatVideoPlayerPluginDelegate,I=c.plugins.aa.AdobeAnalyticsPlugin,J=c.plugins.aa.AdobeAnalyticsPluginConfig,K=c._MediaAnalyticsPluginDelegate,L=c.plugins.ah.AdobeHeartbeatPlugin,M=c.plugins.ah.AdobeHeartbeatPluginConfig,N=c._MediaHeartbeatPluginDelegate;if(d.prototype.getCurrentPlaybackTime=function(){return null},d.prototype.getQoSObject=function(){return null},e.Event={AdBreakStart:\\\"adBreakStart\\\",AdBreakComplete:\\\"adBreakComplete\\\",AdStart:\\\"adStart\\\",AdComplete:\\\"adComplete\\\",AdSkip:\\\"adSkip\\\",ChapterStart:\\\"chapterStart\\\",ChapterComplete:\\\"chapterComplete\\\",ChapterSkip:\\\"chapterSkip\\\",SeekStart:\\\"seekStart\\\",SeekComplete:\\\"seekComplete\\\",BufferStart:\\\"bufferStart\\\",BufferComplete:\\\"bufferComplete\\\",BitrateChange:\\\"bitrateChange\\\",TimedMetadataUpdate:\\\"timedMetadataUpdate\\\"},e.StreamType={VOD:\\\"vod\\\",LIVE:\\\"live\\\",LINEAR:\\\"linear\\\"},e.MediaObjectKey={StandardVideoMetadata:\\\"media_standard_content_metadata\\\",StandardAdMetadata:\\\"media_standard_ad_metadata\\\",VideoResumed:\\\"resumed\\\"},e.VideoMetadataKeys=c.plugins.aa.VideoMetadataKeys,e.AdMetadataKeys=c.plugins.aa.AdMetadataKeys,e.version=function(){return c.Version.getVersion()},e.prototype.trackSessionStart=function(a,b){if(this._logger.info($,\\\"#::trackSessionStart()\\\"),!t.call(this,Q))return void this._logger.error($,\\\"API call trackSessionStart is unsupported in the current state.\\\");if(!a||\\\"object\\\"!=typeof a||!a.setValue)return v.call(this,Q),void this._logger.error($,\\\"Invalid Media Info object\\\");this._currentContentMediaObject=a,this._videoInfo=a.createVideoInfo(),this._videoInfo.playerName=void 0!=this._config.playerName?this._config.playerName:\\\"\\\";var c=a.getValue(e.MediaObjectKey.StandardVideoMetadata);if(c&&\\\"object\\\"==typeof c)for(var d in c)c.hasOwnProperty(d)&&(b[d]=c[d]);var f=a.getValue(e.MediaObjectKey.VideoResumed);f&&\\\"boolean\\\"==typeof f&&(this._videoInfo.resumed=a.getValue(e.MediaObjectKey.VideoResumed)),P.call(this),this._playerPlugin&&(this._aaPlugin&&this._aaPlugin.setVideoMetadata(b),this._playerPlugin.trackVideoLoad(),this._playerPlugin.trackSessionStart())},e.prototype.trackPlay=function(){return this._logger.info($,\\\"#::trackPlay()\\\"),t.call(this,R)?void this._playerPlugin.trackPlay():void this._logger.error($,\\\"API call trackPlay is unsupported in the current state.\\\")},e.prototype.trackPause=function(){return this._logger.info($,\\\"#::trackPause()\\\"),t.call(this,S)?void(this._playerPlugin&&this._playerPlugin.trackPause()):void this._logger.error($,\\\"API call trackPause is unsupported in the current state.\\\")},e.prototype.trackComplete=function(){return this._logger.info($,\\\"#::trackComplete()\\\"),t.call(this,T)?void(this._playerPlugin&&this._playerPlugin.trackComplete(function(){})):void this._logger.error($,\\\"API call trackComplete is unsupported in the current state.\\\")},e.prototype.trackSessionEnd=function(){return this._logger.info($,\\\"#::trackSessionEnd()\\\"),t.call(this,Q,!0)?(this._playerPlugin&&this._playerPlugin.trackVideoUnload(),x.call(this),void y.call(this)):(x.call(this),y.call(this),void this._logger.error($,\\\"API call trackSessionEnd is unsupported in the current state.\\\"))},e.prototype.trackError=function(a){return this._logger.info($,\\\"#::trackError()\\\"),w.call(this)?void(this._playerPlugin&&this._playerPlugin.trackVideoPlayerError(a?a:\\\"unknown_error_id\\\")):void this._logger.error($,\\\"API call trackError is unsupported in the current state.\\\")},e.prototype.trackEvent=function(a,b,c){switch(a){case e.Event.AdBreakStart:case e.Event.AdBreakComplete:f.call(this,a,b);break;case e.Event.AdStart:case e.Event.AdComplete:case e.Event.AdSkip:g.call(this,a,b,c);break;case e.Event.SeekStart:case e.Event.SeekComplete:h.call(this,a);break;case e.Event.ChapterStart:case e.Event.ChapterComplete:case e.Event.ChapterSkip:i.call(this,a,b,c);break;case e.Event.BufferStart:case e.Event.BufferComplete:j.call(this,a);break;case e.Event.BitrateChange:k.call(this);break;case e.Event.TimedMetadataUpdate:l.call(this,b)}},c.plugins.nielsen){var O=c._MediaHeartbeatNielsen;e.MediaObjectKey.NielsenContentMetadata=O.MEDIAHEARTBEAT_NIELSEN_CONTENT_METADATA,e.MediaObjectKey.NielsenAdMetadata=O.MEDIAHEARTBEAT_NIELSEN_AD_METADATA,e.MediaObjectKey.NielsenChannelMetadata=O.MEDIAHEARTBEAT_NIELSEN_CHANNEL_METADATA,e.prototype.nielsenLoadMetadata=function(a){this._nielsenPlugin&&this._nielsenPlugin.loadMetadata(a)}}var P=function(){if(!this.appMeasurement||!this.appMeasurement.visitor)throw new Error(\\\"appMeasurement.visitor object cannot be NULL.\\\");m.call(this),n.call(this),o.call(this),p.call(this),q.call(this)},Q=1,R=2,S=3,T=4,U=5,V=6,W=7,X=8,Y=9,Z=10;e.createMediaObject=function(a,b,c,d){var f=new B;f.setValue(B.MEDIAINFO_KEY_VIDEOID,b),f.setValue(B.MEDIAINFO_KEY_NAME,a),f.setValue(B.MEDIAINFO_KEY_LENGTH,c),f.setValue(B.MEDIAINFO_KEY_PLAYHEAD,0);var g=A.ASSET_TYPE_VOD;switch(d){case e.StreamType.VOD:g=A.ASSET_TYPE_VOD;break;case e.StreamType.LIVE:g=A.ASSET_TYPE_LIVE;break;case e.StreamType.LINEAR:g=A.ASSET_TYPE_LINEAR}return f.setValue(B.MEDIAINFO_KEY_STREAMTYPE,g),f},e.createAdBreakObject=function(a,b,c){var d=new B;return d.setValue(B.MEDIAINFO_KEY_NAME,a),d.setValue(B.MEDIAINFO_KEY_POSITION,b),d.setValue(B.MEDIAINFO_KEY_STARTUPTIME,c),d},e.createAdObject=function(a,b,c,d){var e=new B;return e.setValue(B.MEDIAINFO_KEY_NAME,a),e.setValue(B.MEDIAINFO_KEY_ADID,b),e.setValue(B.MEDIAINFO_KEY_POSITION,c),e.setValue(B.MEDIAINFO_KEY_LENGTH,d),e},e.createChapterObject=function(a,b,c,d){var e=new B;return e.setValue(B.MEDIAINFO_KEY_NAME,a),e.setValue(B.MEDIAINFO_KEY_POSITION,b),e.setValue(B.MEDIAINFO_KEY_LENGTH,c),e.setValue(B.MEDIAINFO_KEY_STARTTIME,d),e},e.createQoSObject=function(a,b,c,d){var e=new B;return e.setValue(B.MEDIAINFO_KEY_BITRATE,a),e.setValue(B.MEDIAINFO_KEY_FPS,c),e.setValue(B.MEDIAINFO_KEY_DROPPEDFRAMES,d),e.setValue(B.MEDIAINFO_KEY_STARTUPTIME,b),e},e.createTimedMetadataObject=function(a){var b=new B;return b.setValue(B.MEDIAINFO_KEY_TIMEDMETADATA,a),b};var $=\\\"MediaHeartbeat\\\",_=\\\"a.__pttvsdkVersion\\\";c.MediaHeartbeat=e,c.MediaHeartbeatDelegate=d,c.MediaHeartbeat._onDelegateError=r,c.MediaHeartbeat._debugLogging=!1}(a.ADB.core,a.ADB.va),a.ADB||(a.ADB={}),a.ADB.core||(a.ADB.core=core),a.ADB.va||(a.ADB.va=va),a.ADB.va.plugins||(a.ADB.va.plugins={})}(this);\\n\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************************************!*\
  !*** ../~/raw-loader!./integrations/adobe/lib/visitor_api-2.4.0.js ***!
  \*********************************************************************/
/***/ (function(module, exports) {

eval("module.exports = \"!function e(t,i,n){function r(s,o){if(!i[s]){if(!t[s]){var l=\\\"function\\\"==typeof require&&require;if(!o&&l)return l(s,!0);if(a)return a(s,!0);var u=new Error(\\\"Cannot find module '\\\"+s+\\\"'\\\");throw u.code=\\\"MODULE_NOT_FOUND\\\",u}var c=i[s]={exports:{}};t[s][0].call(c.exports,function(e){var i=t[s][1][e];return r(i||e)},c,c.exports,e,t,i,n)}return i[s].exports}for(var a=\\\"function\\\"==typeof require&&require,s=0;s<n.length;s++)r(n[s]);return r}({1:[function(e,t,i){(function(i){e(\\\"./utils/polyfills\\\");var n=e(\\\"./strategies/LocalVisitor\\\"),r=e(\\\"./strategies/ProxyVisitor\\\"),a=e(\\\"./strategies/PlaceholderVisitor\\\"),s=e(\\\"./utils/callbackRegistryFactory\\\"),o=e(\\\"./Message\\\"),l=e(\\\"./enums\\\"),u=l.MESSAGES;t.exports=function(e,t,l,c){function d(e){Object.assign(I,e)}function f(e){Object.assign(I.state,e),I.callbackRegistry.executeAll(I.state)}function g(e){if(!A.isInvalid(e)){v=!1;var t=A.parse(e);I.setStateAndPublish(t.state)}}function _(e){!v&&C&&(v=!0,A.send(c,e))}function m(){d(new n(l._generateID)),I.getMarketingCloudVisitorID(),I.callbackRegistry.executeAll(I.state,!0),i.removeEventListener(\\\"message\\\",p)}function p(e){if(!A.isInvalid(e)){var t=A.parse(e);v=!1,i.clearTimeout(this.timeout),i.removeEventListener(\\\"message\\\",p),d(new r(I)),i.addEventListener(\\\"message\\\",g),I.setStateAndPublish(t.state),I.callbackRegistry.hasCallbacks()&&_(u.GETSTATE)}}function h(){C&&postMessage?(i.addEventListener(\\\"message\\\",p),_(u.HANDSHAKE),this.timeout=setTimeout(m,250)):m()}function S(){i.s_c_in||(i.s_c_il=[],i.s_c_in=0),I._c=\\\"Visitor\\\",I._il=i.s_c_il,I._in=i.s_c_in,I._il[I._in]=I,i.s_c_in++}function D(){function e(e){0!==e.indexOf(\\\"_\\\")&&\\\"function\\\"==typeof l[e]&&(I[e]=function(){})}Object.keys(l).forEach(e),I.getSupplementalDataID=l.getSupplementalDataID}var I=this,C=t.whitelistParentDomain;I.state={},I.version=l.version,I.marketingCloudOrgID=e;var v=!1,A=new o(e,C);I.callbackRegistry=s(),I.findField=function(e,t){if(I.state[e])return t(I.state[e]),I.state[e]},I.messageParent=_,I.setStateAndPublish=f,function(){S(),D(),d(new a(I)),h()}()}}).call(this,\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{})},{\\\"./Message\\\":2,\\\"./enums\\\":4,\\\"./strategies/LocalVisitor\\\":5,\\\"./strategies/PlaceholderVisitor\\\":6,\\\"./strategies/ProxyVisitor\\\":7,\\\"./utils/callbackRegistryFactory\\\":8,\\\"./utils/polyfills\\\":10}],2:[function(e,t,i){var n=e(\\\"./enums\\\"),r=n.MESSAGES,a={0:\\\"prefix\\\",1:\\\"orgID\\\",2:\\\"state\\\"};t.exports=function(e,t){this.parse=function(e){try{var t={};return e.data.split(\\\"|\\\").forEach(function(e,i){if(void 0!==e){t[a[i]]=2!==i?e:JSON.parse(e)}}),t}catch(e){}},this.isInvalid=function(i){var n=this.parse(i);if(!n||Object.keys(n).length<2)return!0;var a=e!==n.orgID,s=!t||i.origin!==t,o=-1===Object.keys(r).indexOf(n.prefix);return a||s||o},this.send=function(i,n,r){var a=n+\\\"|\\\"+e;r&&r===Object(r)&&(a+=\\\"|\\\"+JSON.stringify(r));try{i.postMessage(a,t)}catch(e){}}}},{\\\"./enums\\\":4}],3:[function(e,t,i){(function(i){function n(){function e(){o.windowLoaded=!0}i.addEventListener?i.addEventListener(\\\"load\\\",e):i.attachEvent&&i.attachEvent(\\\"onload\\\",e),o.codeLoadEnd=(new Date).getTime()}/** @license ============== DO NOT ALTER ANYTHING BELOW THIS LINE ! ============\\n\\nAdobe Visitor API for JavaScript version: 2.4.0\\nCopyright 1996-2015 Adobe, Inc. All Rights Reserved\\nMore info available at https://marketing.adobe.com/resources/help/en_US/mcvid/\\n*/\\nvar r=e(\\\"./ChildVisitor\\\"),a=e(\\\"./Message\\\"),s=e(\\\"./utils/makeChildMessageListener\\\"),o=function(e,t){function n(e){var t=e;return function(e){var i=e||_.location.href;try{var n=g._extractParamFromUri(i,t);if(n)return R.parsePipeDelimetedKeyValues(n)}catch(e){}}}function r(e){function t(e,t){e&&e.match(h.VALID_VISITOR_ID_REGEX)&&t(e)}t(e[I],g.setMarketingCloudVisitorID),g._setFieldExpire(L,-1),t(e[O],g.setAnalyticsVisitorID)}function o(e){e=e||{},g._supplementalDataIDCurrent=e.supplementalDataIDCurrent||\\\"\\\",g._supplementalDataIDCurrentConsumed=e.supplementalDataIDCurrentConsumed||{},g._supplementalDataIDLast=e.supplementalDataIDLast||\\\"\\\",g._supplementalDataIDLastConsumed=e.supplementalDataIDLastConsumed||{}}function l(e){for(var t=\\\"\\\",i=0,n=e.length;i<n;i++){var r=e[i],a=r[0],s=r[1];null!=s&&s!==P&&(t=function(e,t,i){return i=i?i+=\\\"|\\\":i,i+=e+\\\"=\\\"+encodeURIComponent(t)}(a,s,t))}return function(e){var t=R.getTimestampInSeconds();return e=e?e+=\\\"|\\\":e,e+=\\\"TS=\\\"+t}(t)}function u(e){var t=e.minutesToLive,i=\\\"\\\";return g.idSyncDisableSyncs&&(i=i||\\\"Error: id syncs have been disabled\\\"),\\\"string\\\"==typeof e.dpid&&e.dpid.length||(i=i||\\\"Error: config.dpid is empty\\\"),\\\"string\\\"==typeof e.url&&e.url.length||(i=i||\\\"Error: config.url is empty\\\"),void 0===t?t=20160:(t=parseInt(t,10),(isNaN(t)||t<=0)&&(i=i||\\\"Error: config.minutesToLive needs to be a positive number\\\")),{error:i,ttl:t}}function c(e){for(var t=0,i=e.length;t<i;t++)if(!h.POSITIVE_INT_REGEX.test(e[t]))return!1;return!0}function d(e,t){for(;e.length<t.length;)e.push(\\\"0\\\");for(;t.length<e.length;)t.push(\\\"0\\\")}function f(e,t){for(var i=0;i<e.length;i++){var n=parseInt(e[i],10),r=parseInt(t[i],10);if(n>r)return 1;if(r>n)return-1}return 0}if(!e)throw new Error(\\\"Visitor requires Adobe Marketing Cloud Org ID\\\");var g=this;g.version=\\\"2.4.0\\\";var _=i,m=_.Visitor;m.version=g.version,_.s_c_in||(_.s_c_il=[],_.s_c_in=0),g._c=\\\"Visitor\\\",g._il=_.s_c_il,g._in=_.s_c_in,g._il[g._in]=g,_.s_c_in++,g._log={requests:[]};var p=_.document,h={POST_MESSAGE_ENABLED:!!_.postMessage,DAYS_BETWEEN_SYNC_ID_CALLS:1,MILLIS_PER_DAY:864e5,ADOBE_MC:\\\"adobe_mc\\\",ADOBE_MC_SDID:\\\"adobe_mc_sdid\\\",VALID_VISITOR_ID_REGEX:/^[0-9a-fA-F\\\\-]+$/,ADOBE_MC_TTL_IN_MIN:5,POSITIVE_INT_REGEX:/^\\\\d+$/,VERSION_REGEX:/vVersion\\\\|((\\\\d+\\\\.)?(\\\\d+\\\\.)?(\\\\*|\\\\d+))(?=$|\\\\|)/,HAS_JSON_STRINGIFY:window.JSON===Object(window.JSON)&&\\\"function\\\"==typeof window.JSON.stringify},S=function(e){return!Object.prototype[e]};g._hash=function(e){var t,i,n=0;if(e)for(t=0;t<e.length;t++)i=e.charCodeAt(t),n=(n<<5)-n+i,n&=n;return n},g._generateID=function(e,t){var i,n,r=\\\"0123456789\\\",a=\\\"\\\",s=\\\"\\\",o=8,l=10,u=10;if(t===I&&(x.isClientSideMarketingCloudVisitorID=!0),1===e){for(r+=\\\"ABCDEF\\\",i=0;i<16;i++)n=Math.floor(Math.random()*o),a+=r.substring(n,n+1),n=Math.floor(Math.random()*o),s+=r.substring(n,n+1),o=16;return a+\\\"-\\\"+s}for(i=0;i<19;i++)n=Math.floor(Math.random()*l),a+=r.substring(n,n+1),0===i&&9===n?l=3:(1===i||2===i)&&10!==l&&n<2?l=10:i>2&&(l=10),n=Math.floor(Math.random()*u),s+=r.substring(n,n+1),0===i&&9===n?u=3:(1===i||2===i)&&10!==u&&n<2?u=10:i>2&&(u=10);return a+s},g._getDomain=function(e){var t;if(!e&&_.location&&(e=_.location.hostname),t=e)if(/^[0-9.]+$/.test(t))t=\\\"\\\";else{var i=\\\",ac,ad,ae,af,ag,ai,al,am,an,ao,aq,ar,as,at,au,aw,ax,az,ba,bb,be,bf,bg,bh,bi,bj,bm,bo,br,bs,bt,bv,bw,by,bz,ca,cc,cd,cf,cg,ch,ci,cl,cm,cn,co,cr,cu,cv,cw,cx,cz,de,dj,dk,dm,do,dz,ec,ee,eg,es,et,eu,fi,fm,fo,fr,ga,gb,gd,ge,gf,gg,gh,gi,gl,gm,gn,gp,gq,gr,gs,gt,gw,gy,hk,hm,hn,hr,ht,hu,id,ie,im,in,io,iq,ir,is,it,je,jo,jp,kg,ki,km,kn,kp,kr,ky,kz,la,lb,lc,li,lk,lr,ls,lt,lu,lv,ly,ma,mc,md,me,mg,mh,mk,ml,mn,mo,mp,mq,mr,ms,mt,mu,mv,mw,mx,my,na,nc,ne,nf,ng,nl,no,nr,nu,nz,om,pa,pe,pf,ph,pk,pl,pm,pn,pr,ps,pt,pw,py,qa,re,ro,rs,ru,rw,sa,sb,sc,sd,se,sg,sh,si,sj,sk,sl,sm,sn,so,sr,st,su,sv,sx,sy,sz,tc,td,tf,tg,th,tj,tk,tl,tm,tn,to,tp,tr,tt,tv,tw,tz,ua,ug,uk,us,uy,uz,va,vc,ve,vg,vi,vn,vu,wf,ws,yt,\\\",n=t.split(\\\".\\\"),r=n.length-1,a=r-1;if(r>1&&n[r].length<=2&&(2===n[r-1].length||i.indexOf(\\\",\\\"+n[r]+\\\",\\\")<0)&&a--,a>0)for(t=\\\"\\\";r>=a;)t=n[r]+(t?\\\".\\\":\\\"\\\")+t,r--}return t},g.cookieRead=function(e){e=encodeURIComponent(e);var t=(\\\";\\\"+p.cookie).split(\\\" \\\").join(\\\";\\\"),i=t.indexOf(\\\";\\\"+e+\\\"=\\\"),n=i<0?i:t.indexOf(\\\";\\\",i+1);return i<0?\\\"\\\":decodeURIComponent(t.substring(i+2+e.length,n<0?t.length:n))},g.cookieWrite=function(e,t,i){var n,r=g.cookieLifetime;if(t=\\\"\\\"+t,r=r?(\\\"\\\"+r).toUpperCase():\\\"\\\",i&&\\\"SESSION\\\"!==r&&\\\"NONE\\\"!==r){if(n=\\\"\\\"!==t?parseInt(r||0,10):-60)i=new Date,i.setTime(i.getTime()+1e3*n);else if(1===i){i=new Date;var a=i.getYear();i.setYear(a+2+(a<1900?1900:0))}}else i=0;return e&&\\\"NONE\\\"!==r?(p.cookie=encodeURIComponent(e)+\\\"=\\\"+encodeURIComponent(t)+\\\"; path=/;\\\"+(i?\\\" expires=\\\"+i.toGMTString()+\\\";\\\":\\\"\\\")+(g.cookieDomain?\\\" domain=\\\"+g.cookieDomain+\\\";\\\":\\\"\\\"),g.cookieRead(e)===t):0},g._callbackList=null,g._callCallback=function(e,t){try{\\\"function\\\"==typeof e?e.apply(_,t):e[1].apply(e[0],t)}catch(e){}},g._registerCallback=function(e,t){t&&(null==g._callbackList&&(g._callbackList={}),void 0==g._callbackList[e]&&(g._callbackList[e]=[]),g._callbackList[e].push(t))},g._callAllCallbacks=function(e,t){if(null!=g._callbackList){var i=g._callbackList[e];if(i)for(;i.length>0;)g._callCallback(i.shift(),t)}},g._addQuerystringParam=function(e,t,i,n){var r=encodeURIComponent(t)+\\\"=\\\"+encodeURIComponent(i),a=R.parseHash(e),s=R.hashlessUrl(e);if(-1===s.indexOf(\\\"?\\\"))return s+\\\"?\\\"+r+a;var o=s.split(\\\"?\\\"),l=o[0]+\\\"?\\\",u=o[1];return l+R.addQueryParamAtLocation(u,r,n)+a},g._extractParamFromUri=function(e,t){var i=new RegExp(\\\"[\\\\\\\\?&#]\\\"+t+\\\"=([^&#]*)\\\"),n=i.exec(e);if(n&&n.length)return decodeURIComponent(n[1])},g._parseAdobeMcFromUrl=n(h.ADOBE_MC),g._parseAdobeMcSdidFromUrl=n(h.ADOBE_MC_SDID),g._attemptToPopulateSdidFromUrl=function(t){var i=g._parseAdobeMcSdidFromUrl(t),n=1e9;i&&i.TS&&(n=R.getTimestampInSeconds()-i.TS),i&&i.SDID&&i[C]===e&&n<g.sdidParamExpiry&&(g._supplementalDataIDCurrent=i.SDID,g._supplementalDataIDCurrentConsumed.SDID_URL_PARAM=!0)},g._attemptToPopulateIdsFromUrl=function(){var t=g._parseAdobeMcFromUrl();if(t&&t.TS){var i=R.getTimestampInSeconds(),n=i-t.TS;if(Math.floor(n/60)>h.ADOBE_MC_TTL_IN_MIN||t[C]!==e)return;r(t)}},g.resetState=function(e){e?g._mergeServerState(e):o()},g._mergeServerState=function(e){if(e)try{if(e=function(e){return R.isObject(e)?e:R.parseJSON(e)}(e),e[g.marketingCloudOrgID]){var t=e[g.marketingCloudOrgID];!function(e){R.isObject(e)&&g.setCustomerIDs(e)}(t.customerIDs),o(t.sdid)}}catch(e){throw new Error(\\\"`serverState` has an invalid format.\\\")}},g._timeout=null,g._loadData=function(e,t,i,n){t=g._addQuerystringParam(t,\\\"d_fieldgroup\\\",e,1),n.url=g._addQuerystringParam(n.url,\\\"d_fieldgroup\\\",e,1),n.corsUrl=g._addQuerystringParam(n.corsUrl,\\\"d_fieldgroup\\\",e,1),x.fieldGroupObj[e]=!0,n===Object(n)&&n.corsUrl&&\\\"XMLHttpRequest\\\"===g._requestProcs.corsMetadata.corsType?g._requestProcs.fireCORS(n,i,e):g.useCORSOnly||g._loadJSONP(e,t,i)},g._loadJSONP=function(e,t,i){var n,r=0,a=0;if(t&&p){for(n=0;!r&&n<2;){try{r=p.getElementsByTagName(n>0?\\\"HEAD\\\":\\\"head\\\"),r=r&&r.length>0?r[0]:0}catch(e){r=0}n++}if(!r)try{p.body&&(r=p.body)}catch(e){r=0}if(r)for(n=0;!a&&n<2;){try{a=p.createElement(n>0?\\\"SCRIPT\\\":\\\"script\\\")}catch(e){a=0}n++}}if(!t||!r||!a)return void(i&&i());a.type=\\\"text/javascript\\\",a.src=t,r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a);var s=g.loadTimeout;i&&(null==g._timeout&&(g._timeout={}),g._timeout[e]=setTimeout(function(){i(!0)},s)),g._log.requests.push(t)},g._clearTimeout=function(e){null!=g._timeout&&g._timeout[e]&&(clearTimeout(g._timeout[e]),g._timeout[e]=0)},g._isAllowedDone=!1,g._isAllowedFlag=!1,g.isAllowed=function(){return g._isAllowedDone||(g._isAllowedDone=!0,(g.cookieRead(g.cookieName)||g.cookieWrite(g.cookieName,\\\"T\\\",1))&&(g._isAllowedFlag=!0)),g._isAllowedFlag},g._fields=null,g._fieldsExpired=null;var D=\\\"MC\\\",I=\\\"MCMID\\\",C=\\\"MCORGID\\\",v=\\\"MCCIDH\\\",A=\\\"MCSYNCS\\\",y=\\\"MCSYNCSOP\\\",M=\\\"MCIDTS\\\",b=\\\"MCOPTOUT\\\",E=\\\"A\\\",O=\\\"MCAID\\\",T=\\\"AAM\\\",k=\\\"MCAAMLH\\\",L=\\\"MCAAMB\\\",P=\\\"NONE\\\";g._settingsDigest=0,g._getSettingsDigest=function(){if(!g._settingsDigest){var e=g.version;g.audienceManagerServer&&(e+=\\\"|\\\"+g.audienceManagerServer),g.audienceManagerServerSecure&&(e+=\\\"|\\\"+g.audienceManagerServerSecure),g._settingsDigest=g._hash(e)}return g._settingsDigest},g._readVisitorDone=!1,g._readVisitor=function(){if(!g._readVisitorDone){g._readVisitorDone=!0;var e,t,i,n,r,a,s=g._getSettingsDigest(),o=!1,l=g.cookieRead(g.cookieName),u=new Date;if(null==g._fields&&(g._fields={}),l&&\\\"T\\\"!==l)for(l=l.split(\\\"|\\\"),l[0].match(/^[\\\\-0-9]+$/)&&(parseInt(l[0],10)!==s&&(o=!0),l.shift()),l.length%2==1&&l.pop(),e=0;e<l.length;e+=2)t=l[e].split(\\\"-\\\"),i=t[0],n=l[e+1],t.length>1?(r=parseInt(t[1],10),a=t[1].indexOf(\\\"s\\\")>0):(r=0,a=!1),o&&(i===v&&(n=\\\"\\\"),r>0&&(r=u.getTime()/1e3-60)),i&&n&&(g._setField(i,n,1),r>0&&(g._fields[\\\"expire\\\"+i]=r+(a?\\\"s\\\":\\\"\\\"),(u.getTime()>=1e3*r||a&&!g.cookieRead(g.sessionCookieName))&&(g._fieldsExpired||(g._fieldsExpired={}),g._fieldsExpired[i]=!0)));!g._getField(O)&&R.isTrackingServerPopulated()&&(l=g.cookieRead(\\\"s_vi\\\"))&&(l=l.split(\\\"|\\\"),l.length>1&&l[0].indexOf(\\\"v1\\\")>=0&&(n=l[1],e=n.indexOf(\\\"[\\\"),e>=0&&(n=n.substring(0,e)),n&&n.match(h.VALID_VISITOR_ID_REGEX)&&g._setField(O,n)))}},g._appendVersionTo=function(e){var t=\\\"vVersion|\\\"+g.version,i=e?g._getCookieVersion(e):null;return i?R.areVersionsDifferent(i,g.version)&&(e=e.replace(h.VERSION_REGEX,t)):e+=(e?\\\"|\\\":\\\"\\\")+t,e},g._writeVisitor=function(){var e,t,i=g._getSettingsDigest();for(e in g._fields)S(e)&&g._fields[e]&&\\\"expire\\\"!==e.substring(0,6)&&(t=g._fields[e],i+=(i?\\\"|\\\":\\\"\\\")+e+(g._fields[\\\"expire\\\"+e]?\\\"-\\\"+g._fields[\\\"expire\\\"+e]:\\\"\\\")+\\\"|\\\"+t);i=g._appendVersionTo(i),g.cookieWrite(g.cookieName,i,1)},g._getField=function(e,t){return null==g._fields||!t&&g._fieldsExpired&&g._fieldsExpired[e]?null:g._fields[e]},g._setField=function(e,t,i){null==g._fields&&(g._fields={}),g._fields[e]=t,i||g._writeVisitor()},g._getFieldList=function(e,t){var i=g._getField(e,t);return i?i.split(\\\"*\\\"):null},g._setFieldList=function(e,t,i){g._setField(e,t?t.join(\\\"*\\\"):\\\"\\\",i)},g._getFieldMap=function(e,t){var i=g._getFieldList(e,t);if(i){var n,r={};for(n=0;n<i.length;n+=2)r[i[n]]=i[n+1];return r}return null},g._setFieldMap=function(e,t,i){var n,r=null;if(t){r=[];for(n in t)S(n)&&(r.push(n),r.push(t[n]))}g._setFieldList(e,r,i)},g._setFieldExpire=function(e,t,i){var n=new Date;n.setTime(n.getTime()+1e3*t),null==g._fields&&(g._fields={}),g._fields[\\\"expire\\\"+e]=Math.floor(n.getTime()/1e3)+(i?\\\"s\\\":\\\"\\\"),t<0?(g._fieldsExpired||(g._fieldsExpired={}),g._fieldsExpired[e]=!0):g._fieldsExpired&&(g._fieldsExpired[e]=!1),i&&(g.cookieRead(g.sessionCookieName)||g.cookieWrite(g.sessionCookieName,\\\"1\\\"))},g._findVisitorID=function(e){return e&&(\\\"object\\\"==typeof e&&(e=e.d_mid?e.d_mid:e.visitorID?e.visitorID:e.id?e.id:e.uuid?e.uuid:\\\"\\\"+e),e&&\\\"NOTARGET\\\"===(e=e.toUpperCase())&&(e=P),e&&(e===P||e.match(h.VALID_VISITOR_ID_REGEX))||(e=\\\"\\\")),e},g._setFields=function(e,t){if(g._clearTimeout(e),null!=g._loading&&(g._loading[e]=!1),x.fieldGroupObj[e]&&x.setState(e,!1),e===D){!0!==x.isClientSideMarketingCloudVisitorID&&(x.isClientSideMarketingCloudVisitorID=!1);var i=g._getField(I);if(!i||g.overwriteCrossDomainMCIDAndAID){if(!(i=\\\"object\\\"==typeof t&&t.mid?t.mid:g._findVisitorID(t))){if(g._use1stPartyMarketingCloudServer&&!g.tried1stPartyMarketingCloudServer)return g.tried1stPartyMarketingCloudServer=!0,void g.getAnalyticsVisitorID(null,!1,!0);i=g._generateID(0,I)}g._setField(I,i)}i&&i!==P||(i=\\\"\\\"),\\\"object\\\"==typeof t&&((t.d_region||t.dcs_region||t.d_blob||t.blob)&&g._setFields(T,t),g._use1stPartyMarketingCloudServer&&t.mid&&g._setFields(E,{id:t.id})),g._callAllCallbacks(I,[i])}if(e===T&&\\\"object\\\"==typeof t){var n=604800;void 0!=t.id_sync_ttl&&t.id_sync_ttl&&(n=parseInt(t.id_sync_ttl,10));var r=g._getField(k);r||(r=t.d_region,r||(r=t.dcs_region),r&&(g._setFieldExpire(k,n),g._setField(k,r))),r||(r=\\\"\\\"),g._callAllCallbacks(k,[r]);var a=g._getField(L);(t.d_blob||t.blob)&&(a=t.d_blob,a||(a=t.blob),g._setFieldExpire(L,n),g._setField(L,a)),a||(a=\\\"\\\"),g._callAllCallbacks(L,[a]),!t.error_msg&&g._newCustomerIDsHash&&g._setField(v,g._newCustomerIDsHash)}if(e===E){var s=g._getField(O);s&&!g.overwriteCrossDomainMCIDAndAID||(s=g._findVisitorID(t),s?s!==P&&g._setFieldExpire(L,-1):s=P,g._setField(O,s)),s&&s!==P||(s=\\\"\\\"),g._callAllCallbacks(O,[s])}if(g.idSyncDisableSyncs)F.idCallNotProcesssed=!0;else{F.idCallNotProcesssed=!1;var o={};o.ibs=t.ibs,o.subdomain=t.subdomain,F.processIDCallData(o)}if(t===Object(t)){var l,u;g.isAllowed()&&(l=g._getField(b)),l||(l=P,t.d_optout&&t.d_optout instanceof Array&&(l=t.d_optout.join(\\\",\\\")),u=parseInt(t.d_ottl,10),isNaN(u)&&(u=7200),g._setFieldExpire(b,u,!0),g._setField(b,l)),g._callAllCallbacks(b,[l])}},g._loading=null,g._getRemoteField=function(e,t,i,n,r){var a,s=\\\"\\\",o=R.isFirstPartyAnalyticsVisitorIDCall(e);if(g.isAllowed()){g._readVisitor(),s=g._getField(e,!0===V[e]);if(function(){return(!s||g._fieldsExpired&&g._fieldsExpired[e])&&(!g.disableThirdPartyCalls||o)}()){if(e===I||e===b?a=D:e===k||e===L?a=T:e===O&&(a=E),a)return!t||null!=g._loading&&g._loading[a]||(null==g._loading&&(g._loading={}),g._loading[a]=!0,g._loadData(a,t,function(t){if(!g._getField(e)){t&&x.setState(a,!0);var i=\\\"\\\";e===I?i=g._generateID(0,I):a===T&&(i={error_msg:\\\"timeout\\\"}),g._setFields(a,i)}},r)),g._registerCallback(e,i),s||(t||g._setFields(a,{id:P}),\\\"\\\")}else s||(e===I?(g._registerCallback(e,i),s=g._generateID(0,I),g.setMarketingCloudVisitorID(s)):e===O?(g._registerCallback(e,i),s=\\\"\\\",g.setAnalyticsVisitorID(s)):(s=\\\"\\\",n=!0))}return e!==I&&e!==O||s!==P||(s=\\\"\\\",n=!0),i&&n&&g._callCallback(i,[s]),s},g._setMarketingCloudFields=function(e){g._readVisitor(),g._setFields(D,e)},g.setMarketingCloudVisitorID=function(e){g._setMarketingCloudFields(e)},g._use1stPartyMarketingCloudServer=!1,g.getMarketingCloudVisitorID=function(e,t){if(g.isAllowed()){g.marketingCloudServer&&g.marketingCloudServer.indexOf(\\\".demdex.net\\\")<0&&(g._use1stPartyMarketingCloudServer=!0);var i=g._getAudienceManagerURLData(\\\"_setMarketingCloudFields\\\"),n=i.url;return g._getRemoteField(I,n,e,t,i)}return\\\"\\\"},g._mapCustomerIDs=function(e){g.getAudienceManagerBlob(e,!0)},m.AuthState={UNKNOWN:0,AUTHENTICATED:1,LOGGED_OUT:2},g._currentCustomerIDs={},g._customerIDsHashChanged=!1,g._newCustomerIDsHash=\\\"\\\",g.setCustomerIDs=function(e){function t(){g._customerIDsHashChanged=!1}if(g.isAllowed()&&e){g._readVisitor();var i,n;for(i in e)if(S(i)&&(n=e[i]))if(\\\"object\\\"==typeof n){var r={};n.id&&(r.id=n.id),void 0!=n.authState&&(r.authState=n.authState),g._currentCustomerIDs[i]=r}else g._currentCustomerIDs[i]={id:n};var a=g.getCustomerIDs(),s=g._getField(v),o=\\\"\\\";s||(s=0);for(i in a)S(i)&&(n=a[i],o+=(o?\\\"|\\\":\\\"\\\")+i+\\\"|\\\"+(n.id?n.id:\\\"\\\")+(n.authState?n.authState:\\\"\\\"));g._newCustomerIDsHash=g._hash(o),g._newCustomerIDsHash!==s&&(g._customerIDsHashChanged=!0,g._mapCustomerIDs(t))}},g.getCustomerIDs=function(){g._readVisitor();var e,t,i={};for(e in g._currentCustomerIDs)S(e)&&(t=g._currentCustomerIDs[e],i[e]||(i[e]={}),t.id&&(i[e].id=t.id),void 0!=t.authState?i[e].authState=t.authState:i[e].authState=m.AuthState.UNKNOWN);return i},g._setAnalyticsFields=function(e){g._readVisitor(),g._setFields(E,e)},g.setAnalyticsVisitorID=function(e){g._setAnalyticsFields(e)},g.getAnalyticsVisitorID=function(e,t,i){if(!R.isTrackingServerPopulated()&&!i)return g._callCallback(e,[\\\"\\\"]),\\\"\\\";if(g.isAllowed()){var n=\\\"\\\";if(i||(n=g.getMarketingCloudVisitorID(function(t){g.getAnalyticsVisitorID(e,!0)})),n||i){var r=i?g.marketingCloudServer:g.trackingServer,a=\\\"\\\";g.loadSSL&&(i?g.marketingCloudServerSecure&&(r=g.marketingCloudServerSecure):g.trackingServerSecure&&(r=g.trackingServerSecure));var s={};if(r){var o=\\\"http\\\"+(g.loadSSL?\\\"s\\\":\\\"\\\")+\\\"://\\\"+r+\\\"/id\\\",l=\\\"d_visid_ver=\\\"+g.version+\\\"&mcorgid=\\\"+encodeURIComponent(g.marketingCloudOrgID)+(n?\\\"&mid=\\\"+encodeURIComponent(n):\\\"\\\")+(g.idSyncDisable3rdPartySyncing?\\\"&d_coppa=true\\\":\\\"\\\"),u=[\\\"s_c_il\\\",g._in,\\\"_set\\\"+(i?\\\"MarketingCloud\\\":\\\"Analytics\\\")+\\\"Fields\\\"];a=o+\\\"?\\\"+l+\\\"&callback=s_c_il%5B\\\"+g._in+\\\"%5D._set\\\"+(i?\\\"MarketingCloud\\\":\\\"Analytics\\\")+\\\"Fields\\\",s.corsUrl=o+\\\"?\\\"+l,s.callback=u}return s.url=a,g._getRemoteField(i?I:O,a,e,t,s)}}return\\\"\\\"},g._setAudienceManagerFields=function(e){g._readVisitor(),g._setFields(T,e)},g._getAudienceManagerURLData=function(e){var t=g.audienceManagerServer,i=\\\"\\\",n=g._getField(I),r=g._getField(L,!0),a=g._getField(O),s=a&&a!==P?\\\"&d_cid_ic=AVID%01\\\"+encodeURIComponent(a):\\\"\\\";if(g.loadSSL&&g.audienceManagerServerSecure&&(t=g.audienceManagerServerSecure),t){var o,l,u=g.getCustomerIDs();if(u)for(o in u)S(o)&&(l=u[o],s+=\\\"&d_cid_ic=\\\"+encodeURIComponent(o)+\\\"%01\\\"+encodeURIComponent(l.id?l.id:\\\"\\\")+(l.authState?\\\"%01\\\"+l.authState:\\\"\\\"));e||(e=\\\"_setAudienceManagerFields\\\");var c=\\\"http\\\"+(g.loadSSL?\\\"s\\\":\\\"\\\")+\\\"://\\\"+t+\\\"/id\\\",d=\\\"d_visid_ver=\\\"+g.version+\\\"&d_rtbd=json&d_ver=2\\\"+(!n&&g._use1stPartyMarketingCloudServer?\\\"&d_verify=1\\\":\\\"\\\")+\\\"&d_orgid=\\\"+encodeURIComponent(g.marketingCloudOrgID)+\\\"&d_nsid=\\\"+(g.idSyncContainerID||0)+(n?\\\"&d_mid=\\\"+encodeURIComponent(n):\\\"\\\")+(g.idSyncDisable3rdPartySyncing?\\\"&d_coppa=true\\\":\\\"\\\")+(!0===j?\\\"&d_coop_safe=1\\\":!1===j?\\\"&d_coop_unsafe=1\\\":\\\"\\\")+(r?\\\"&d_blob=\\\"+encodeURIComponent(r):\\\"\\\")+s,f=[\\\"s_c_il\\\",g._in,e];return i=c+\\\"?\\\"+d+\\\"&d_cb=s_c_il%5B\\\"+g._in+\\\"%5D.\\\"+e,{url:i,corsUrl:c+\\\"?\\\"+d,callback:f}}return{url:i}},g.getAudienceManagerLocationHint=function(e,t){if(g.isAllowed()){if(g.getMarketingCloudVisitorID(function(t){g.getAudienceManagerLocationHint(e,!0)})){var i=g._getField(O);if(!i&&R.isTrackingServerPopulated()&&(i=g.getAnalyticsVisitorID(function(t){g.getAudienceManagerLocationHint(e,!0)})),i||!R.isTrackingServerPopulated()){var n=g._getAudienceManagerURLData(),r=n.url;return g._getRemoteField(k,r,e,t,n)}}}return\\\"\\\"},g.getLocationHint=g.getAudienceManagerLocationHint,g.getAudienceManagerBlob=function(e,t){if(g.isAllowed()){if(g.getMarketingCloudVisitorID(function(t){g.getAudienceManagerBlob(e,!0)})){var i=g._getField(O);if(!i&&R.isTrackingServerPopulated()&&(i=g.getAnalyticsVisitorID(function(t){g.getAudienceManagerBlob(e,!0)})),i||!R.isTrackingServerPopulated()){var n=g._getAudienceManagerURLData(),r=n.url;return g._customerIDsHashChanged&&g._setFieldExpire(L,-1),g._getRemoteField(L,r,e,t,n)}}}return\\\"\\\"},g._supplementalDataIDCurrent=\\\"\\\",g._supplementalDataIDCurrentConsumed={},g._supplementalDataIDLast=\\\"\\\",g._supplementalDataIDLastConsumed={},g.getSupplementalDataID=function(e,t){g._supplementalDataIDCurrent||t||(g._supplementalDataIDCurrent=g._generateID(1));var i=g._supplementalDataIDCurrent;return g._supplementalDataIDLast&&!g._supplementalDataIDLastConsumed[e]?(i=g._supplementalDataIDLast,g._supplementalDataIDLastConsumed[e]=!0):i&&(g._supplementalDataIDCurrentConsumed[e]&&(g._supplementalDataIDLast=g._supplementalDataIDCurrent,g._supplementalDataIDLastConsumed=g._supplementalDataIDCurrentConsumed,g._supplementalDataIDCurrent=i=t?\\\"\\\":g._generateID(1),g._supplementalDataIDCurrentConsumed={}),i&&(g._supplementalDataIDCurrentConsumed[e]=!0)),i},m.OptOut={GLOBAL:\\\"global\\\"},g.getOptOut=function(e,t){if(g.isAllowed()){var i=g._getAudienceManagerURLData(\\\"_setMarketingCloudFields\\\"),n=i.url;return g._getRemoteField(b,n,e,t,i)}return\\\"\\\"},g.isOptedOut=function(e,t,i){if(g.isAllowed()){t||(t=m.OptOut.GLOBAL);var n=g.getOptOut(function(i){var n=i===m.OptOut.GLOBAL||i.indexOf(t)>=0;g._callCallback(e,[n])},i);return n?n===m.OptOut.GLOBAL||n.indexOf(t)>=0:null}return!1},g.appendVisitorIDsTo=function(e){var t=h.ADOBE_MC,i=[[I,g._getField(I)],[O,g._getField(O)],[C,g.marketingCloudOrgID]],n=l(i);try{return g._addQuerystringParam(e,t,n)}catch(t){return e}},g.appendSupplementalDataIDTo=function(e,t){if(!(t=t||g.getSupplementalDataID(R.generateRandomString(),!0)))return e;var i=h.ADOBE_MC_SDID,n=\\\"SDID=\\\"+encodeURIComponent(t)+\\\"|\\\";n+=C+\\\"=\\\"+encodeURIComponent(g.marketingCloudOrgID)+\\\"|\\\",n+=\\\"TS=\\\"+R.getTimestampInSeconds();try{return g._addQuerystringParam(e,i,n)}catch(t){return e}},g._xd={postMessage:function(e,t,i){var n=1;t&&(h.POST_MESSAGE_ENABLED?i.postMessage(e,t.replace(/([^:]+:\\\\/\\\\/[^\\\\/]+).*/,\\\"$1\\\")):t&&(i.location=t.replace(/#.*$/,\\\"\\\")+\\\"#\\\"+ +new Date+n+++\\\"&\\\"+e))},receiveMessage:function(e,t){var i;try{h.POST_MESSAGE_ENABLED&&(e&&(i=function(i){if(\\\"string\\\"==typeof t&&i.origin!==t||\\\"[object Function]\\\"===Object.prototype.toString.call(t)&&!1===t(i.origin))return!1;e(i)}),_.addEventListener?_[e?\\\"addEventListener\\\":\\\"removeEventListener\\\"](\\\"message\\\",i,!1):_[e?\\\"attachEvent\\\":\\\"detachEvent\\\"](\\\"å\\\",i))}catch(e){}}};var R={addListener:function(){return p.addEventListener?function(e,t,i){e.addEventListener(t,function(e){\\\"function\\\"==typeof i&&i(e)},!1)}:p.attachEvent?function(e,t,i){e.attachEvent(\\\"on\\\"+t,function(e){\\\"function\\\"==typeof i&&i(e)})}:void 0}(),map:function(e,t){if(Array.prototype.map)return e.map(t);if(void 0===e||null==e)throw new TypeError;var i=Object(e),n=i.length>>>0;if(\\\"function\\\"!=typeof t)throw new TypeError;for(var r=new Array(n),a=arguments[1],s=0;s<n;s++)s in i&&(r[s]=t.call(a,i[s],s,i));return r},encodeAndBuildRequest:function(e,t){return this.map(e,function(e){return encodeURIComponent(e)}).join(t)},parseHash:function(e){var t=e.indexOf(\\\"#\\\");return t>0?e.substr(t):\\\"\\\"},hashlessUrl:function(e){var t=e.indexOf(\\\"#\\\");return t>0?e.substr(0,t):e},addQueryParamAtLocation:function(e,t,i){var n=e.split(\\\"&\\\");return i=null!=i?i:n.length,n.splice(i,0,t),n.join(\\\"&\\\")},isFirstPartyAnalyticsVisitorIDCall:function(e,t,i){if(e!==O)return!1;var n;return t||(t=g.trackingServer),i||(i=g.trackingServerSecure),!(\\\"string\\\"!=typeof(n=g.loadSSL?i:t)||!n.length)&&(n.indexOf(\\\"2o7.net\\\")<0&&n.indexOf(\\\"omtrdc.net\\\")<0)},isObject:function(e){return Boolean(e&&e===Object(e))},isLessThan:function(e,t){return g._compareVersions(e,t)<0},areVersionsDifferent:function(e,t){return 0!==g._compareVersions(e,t)},removeCookie:function(e){document.cookie=encodeURIComponent(e)+\\\"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\\\"},isTrackingServerPopulated:function(){return!!g.trackingServer||!!g.trackingServerSecure},parseJSON:function(e,t){function i(e,n){var r,a,s=e[n];if(s&&\\\"object\\\"==typeof s)for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(a=i(s,r),void 0!==a?s[r]=a:delete s[r]);return t.call(e,n,s)}if(\\\"object\\\"==typeof JSON&&\\\"function\\\"==typeof JSON.parse)return JSON.parse(e,t);var n,r=/^[\\\\],:{}\\\\s]*$/,a=/\\\\\\\\(?:[\\\"\\\\\\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,s=/\\\"[^\\\"\\\\\\\\\\\\n\\\\r]*\\\"|true|false|null|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?/g,o=/(?:^|:|,)(?:\\\\s*\\\\[)+/g,l=/[\\\\u0000\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g;if(e=String(e),l.lastIndex=0,l.test(e)&&(e=e.replace(l,function(e){return\\\"\\\\\\\\u\\\"+(\\\"0000\\\"+e.charCodeAt(0).toString(16)).slice(-4)})),r.test(e.replace(a,\\\"@\\\").replace(s,\\\"]\\\").replace(o,\\\"\\\")))return n=eval(\\\"(\\\"+e+\\\")\\\"),\\\"function\\\"==typeof t?i({\\\"\\\":n},\\\"\\\"):n;throw new SyntaxError(\\\"JSON.parse\\\")},getTimestampInSeconds:function(){return Math.round((new Date).getTime()/1e3)},parsePipeDelimetedKeyValues:function(e){for(var t={},i=e.split(\\\"|\\\"),n=0,r=i.length;n<r;n++){var a=i[n].split(\\\"=\\\");t[a[0]]=decodeURIComponent(a[1])}return t},generateRandomString:function(e){e=e||5;for(var t=\\\"\\\",i=\\\"abcdefghijklmnopqrstuvwxyz0123456789\\\";e--;)t+=i[Math.floor(Math.random()*i.length)];return t},parseBoolean:function(e){return\\\"true\\\"===e||\\\"false\\\"!==e&&null}};g._helpers=R;var w={corsMetadata:function(){var e=\\\"none\\\",t=!0;return\\\"undefined\\\"!=typeof XMLHttpRequest&&XMLHttpRequest===Object(XMLHttpRequest)&&(\\\"withCredentials\\\"in new XMLHttpRequest?e=\\\"XMLHttpRequest\\\":\\\"undefined\\\"!=typeof XDomainRequest&&XDomainRequest===Object(XDomainRequest)&&(t=!1),Object.prototype.toString.call(_.HTMLElement).indexOf(\\\"Constructor\\\")>0&&(t=!1)),{corsType:e,corsCookiesEnabled:t}}(),getCORSInstance:function(){return\\\"none\\\"===this.corsMetadata.corsType?null:new _[this.corsMetadata.corsType]},fireCORS:function(e,t,i){function n(t){var i;try{if((i=JSON.parse(t))!==Object(i))return void r.handleCORSError(e,null,\\\"Response is not JSON\\\")}catch(t){return void r.handleCORSError(e,t,\\\"Error parsing response as JSON\\\")}try{for(var n=e.callback,a=_,s=0;s<n.length;s++)a=a[n[s]];a(i)}catch(t){r.handleCORSError(e,t,\\\"Error forming callback function\\\")}}var r=this;t&&(e.loadErrorHandler=t);try{var a=this.getCORSInstance();a.open(\\\"get\\\",e.corsUrl+\\\"&ts=\\\"+(new Date).getTime(),!0),\\\"XMLHttpRequest\\\"===this.corsMetadata.corsType&&(a.withCredentials=!0,a.timeout=g.loadTimeout,a.setRequestHeader(\\\"Content-Type\\\",\\\"application/x-www-form-urlencoded\\\"),a.onreadystatechange=function(){4===this.readyState&&200===this.status&&n(this.responseText)}),a.onerror=function(t){r.handleCORSError(e,t,\\\"onerror\\\")},a.ontimeout=function(t){r.handleCORSError(e,t,\\\"ontimeout\\\")},a.send(),g._log.requests.push(e.corsUrl)}catch(t){this.handleCORSError(e,t,\\\"try-catch\\\")}},handleCORSError:function(e,t,i){g.CORSErrors.push({corsData:e,error:t,description:i}),e.loadErrorHandler&&(\\\"ontimeout\\\"===i?e.loadErrorHandler(!0):e.loadErrorHandler(!1))}};g._requestProcs=w;var F={THROTTLE_START:3e4,MAX_SYNCS_LENGTH:649,throttleTimerSet:!1,id:null,onPagePixels:[],iframeHost:null,getIframeHost:function(e){if(\\\"string\\\"==typeof e){var t=e.split(\\\"/\\\");return t[0]+\\\"//\\\"+t[2]}},subdomain:null,url:null,getUrl:function(){var e,t=\\\"http://fast.\\\",i=\\\"?d_nsid=\\\"+g.idSyncContainerID+\\\"#\\\"+encodeURIComponent(p.location.href);return this.subdomain||(this.subdomain=\\\"nosubdomainreturned\\\"),g.loadSSL&&(t=g.idSyncSSLUseAkamai?\\\"https://fast.\\\":\\\"https://\\\"),e=t+this.subdomain+\\\".demdex.net/dest5.html\\\"+i,this.iframeHost=this.getIframeHost(e),this.id=\\\"destination_publishing_iframe_\\\"+this.subdomain+\\\"_\\\"+g.idSyncContainerID,e},checkDPIframeSrc:function(){var e=\\\"?d_nsid=\\\"+g.idSyncContainerID+\\\"#\\\"+encodeURIComponent(p.location.href);\\\"string\\\"==typeof g.dpIframeSrc&&g.dpIframeSrc.length&&(this.id=\\\"destination_publishing_iframe_\\\"+(g._subdomain||this.subdomain||(new Date).getTime())+\\\"_\\\"+g.idSyncContainerID,this.iframeHost=this.getIframeHost(g.dpIframeSrc),this.url=g.dpIframeSrc+e)},idCallNotProcesssed:null,doAttachIframe:!1,startedAttachingIframe:!1,iframeHasLoaded:null,iframeIdChanged:null,newIframeCreated:null,originalIframeHasLoadedAlready:null,sendingMessages:!1,messages:[],messagesPosted:[],messagesReceived:[],messageSendingInterval:h.POST_MESSAGE_ENABLED?null:100,jsonForComparison:[],jsonDuplicates:[],jsonWaiting:[],jsonProcessed:[],canSetThirdPartyCookies:!0,receivedThirdPartyCookiesNotification:!1,readyToAttachIframe:function(){return!g.idSyncDisable3rdPartySyncing&&(this.doAttachIframe||g._doAttachIframe)&&(this.subdomain&&\\\"nosubdomainreturned\\\"!==this.subdomain||g._subdomain)&&this.url&&!this.startedAttachingIframe},attachIframe:function(){function e(){n=document.createElement(\\\"iframe\\\"),n.sandbox=\\\"allow-scripts allow-same-origin\\\",n.title=\\\"Adobe ID Syncing iFrame\\\",n.id=i.id,n.style.cssText=\\\"display: none; width: 0; height: 0;\\\",n.src=i.url,i.newIframeCreated=!0,t(),document.body.appendChild(n)}function t(){R.addListener(n,\\\"load\\\",function(){n.className=\\\"aamIframeLoaded\\\",i.iframeHasLoaded=!0,i.requestToProcess()})}this.startedAttachingIframe=!0;var i=this,n=document.getElementById(this.id);n?\\\"IFRAME\\\"!==n.nodeName?(this.id+=\\\"_2\\\",this.iframeIdChanged=!0,e()):(this.newIframeCreated=!1,\\\"aamIframeLoaded\\\"!==n.className?(this.originalIframeHasLoadedAlready=!1,t()):(this.originalIframeHasLoadedAlready=!0,this.iframeHasLoaded=!0,this.iframe=n,this.requestToProcess())):e(),this.iframe=n},requestToProcess:function(e){function t(){n.jsonForComparison.push(e),n.jsonWaiting.push(e),n.processSyncOnPage(e)}var i,n=this;if(e===Object(e)&&e.ibs)if(h.HAS_JSON_STRINGIFY)if(i=JSON.stringify(e.ibs||[]),this.jsonForComparison.length){var r,a,s,o=!1;for(r=0,a=this.jsonForComparison.length;r<a;r++)if(s=this.jsonForComparison[r],i===JSON.stringify(s.ibs||[])){o=!0;break}o?this.jsonDuplicates.push(e):t()}else t();else t();if((this.receivedThirdPartyCookiesNotification||!h.POST_MESSAGE_ENABLED||this.iframeHasLoaded)&&this.jsonWaiting.length){var l=this.jsonWaiting.shift();this.process(l),this.requestToProcess()}!g.idSyncDisableSyncs&&this.iframeHasLoaded&&this.messages.length&&!this.sendingMessages&&(this.throttleTimerSet||(this.throttleTimerSet=!0,setTimeout(function(){n.messageSendingInterval=h.POST_MESSAGE_ENABLED?null:150},this.THROTTLE_START)),this.sendingMessages=!0,this.sendMessages())},processSyncOnPage:function(e){var t,i,n,r;if((t=e.ibs)&&t instanceof Array&&(i=t.length))for(n=0;n<i;n++)r=t[n],r.syncOnPage&&this.checkFirstPartyCookie(r,\\\"\\\",\\\"syncOnPage\\\")},process:function(e){var t,i,n,r,a,s=encodeURIComponent,o=!1;if((t=e.ibs)&&t instanceof Array&&(i=t.length))for(o=!0,n=0;n<i;n++)r=t[n],a=[s(\\\"ibs\\\"),s(r.id||\\\"\\\"),s(r.tag||\\\"\\\"),R.encodeAndBuildRequest(r.url||[],\\\",\\\"),s(r.ttl||\\\"\\\"),\\\"\\\",\\\"\\\",r.fireURLSync?\\\"true\\\":\\\"false\\\"],r.syncOnPage||(this.canSetThirdPartyCookies?this.addMessage(a.join(\\\"|\\\")):r.fireURLSync&&this.checkFirstPartyCookie(r,a.join(\\\"|\\\")));o&&this.jsonProcessed.push(e)},checkFirstPartyCookie:function(e,t,i){var n=\\\"syncOnPage\\\"===i,r=n?y:A;g._readVisitor();var a,s,o=g._getField(r),l=!1,u=!1,c=Math.ceil((new Date).getTime()/h.MILLIS_PER_DAY);o?(a=o.split(\\\"*\\\"),s=this.pruneSyncData(a,e.id,c),l=s.dataPresent,u=s.dataValid,l&&u||this.fireSync(n,e,t,a,r,c)):(a=[],this.fireSync(n,e,t,a,r,c))},pruneSyncData:function(e,t,i){var n,r,a,s=!1,o=!1;for(r=0;r<e.length;r++)n=e[r],a=parseInt(n.split(\\\"-\\\")[1],10),n.match(\\\"^\\\"+t+\\\"-\\\")?(s=!0,i<a?o=!0:(e.splice(r,1),r--)):i>=a&&(e.splice(r,1),r--);return{dataPresent:s,dataValid:o}},manageSyncsSize:function(e){if(e.join(\\\"*\\\").length>this.MAX_SYNCS_LENGTH)for(e.sort(function(e,t){return parseInt(e.split(\\\"-\\\")[1],10)-parseInt(t.split(\\\"-\\\")[1],10)});e.join(\\\"*\\\").length>this.MAX_SYNCS_LENGTH;)e.shift()},fireSync:function(e,t,i,n,r,a){var s=this;if(e){if(\\\"img\\\"===t.tag){var o,l,u,c,d=t.url,f=g.loadSSL?\\\"https:\\\":\\\"http:\\\";for(o=0,l=d.length;o<l;o++){u=d[o],c=/^\\\\/\\\\//.test(u);var _=new Image;R.addListener(_,\\\"load\\\",function(e,t,i,n){return function(){s.onPagePixels[e]=null,g._readVisitor();var a,o=g._getField(r),l=[];if(o){a=o.split(\\\"*\\\");var u,c,d;for(u=0,c=a.length;u<c;u++)d=a[u],d.match(\\\"^\\\"+t.id+\\\"-\\\")||l.push(d)}s.setSyncTrackingData(l,t,i,n)}}(this.onPagePixels.length,t,r,a)),_.src=(c?f:\\\"\\\")+u,this.onPagePixels.push(_)}}}else this.addMessage(i),this.setSyncTrackingData(n,t,r,a)},addMessage:function(e){var t=encodeURIComponent,i=t(g._enableErrorReporting?\\\"---destpub-debug---\\\":\\\"---destpub---\\\");this.messages.push((h.POST_MESSAGE_ENABLED?\\\"\\\":i)+e)},setSyncTrackingData:function(e,t,i,n){e.push(t.id+\\\"-\\\"+(n+Math.ceil(t.ttl/60/24))),this.manageSyncsSize(e),g._setField(i,e.join(\\\"*\\\"))},sendMessages:function(){var e,t=this;this.messages.length?h.POST_MESSAGE_ENABLED?(e=encodeURIComponent(\\\"---destpub-combined---\\\")+this.messages.join(\\\"%01\\\"),this.postMessage(e),this.messages=[],this.sendingMessages=!1):(e=this.messages.shift(),this.postMessage(e),setTimeout(function(){t.sendMessages()},this.messageSendingInterval)):this.sendingMessages=!1},postMessage:function(e){g._xd.postMessage(e,this.url,this.iframe.contentWindow),this.messagesPosted.push(e)},receiveMessage:function(e){var t,i=/^---destpub-to-parent---/;\\\"string\\\"==typeof e&&i.test(e)&&(t=e.replace(i,\\\"\\\").split(\\\"|\\\"),\\\"canSetThirdPartyCookies\\\"===t[0]&&(this.canSetThirdPartyCookies=\\\"true\\\"===t[1],this.receivedThirdPartyCookiesNotification=!0,this.requestToProcess()),this.messagesReceived.push(e))},processIDCallData:function(e){(null==this.url||e.subdomain&&\\\"nosubdomainreturned\\\"===this.subdomain)&&(\\\"string\\\"==typeof g._subdomain&&g._subdomain.length?this.subdomain=g._subdomain:this.subdomain=e.subdomain||\\\"\\\",this.url=this.getUrl()),e.ibs instanceof Array&&e.ibs.length&&(this.doAttachIframe=!0),this.readyToAttachIframe()&&(g.idSyncAttachIframeOnWindowLoad?(m.windowLoaded||\\\"complete\\\"===p.readyState||\\\"loaded\\\"===p.readyState)&&this.attachIframe():this.attachIframeASAP()),\\\"function\\\"==typeof g.idSyncIDCallResult?g.idSyncIDCallResult(e):this.requestToProcess(e),\\\"function\\\"==typeof g.idSyncAfterIDCallResult&&g.idSyncAfterIDCallResult(e)},canMakeSyncIDCall:function(e,t){return g._forceSyncIDCall||!e||t-e>h.DAYS_BETWEEN_SYNC_ID_CALLS},attachIframeASAP:function(){function e(){t.startedAttachingIframe||(document.body?t.attachIframe():setTimeout(e,30))}var t=this;e()}};g._destinationPublishing=F,g.timeoutMetricsLog=[];var N,x={isClientSideMarketingCloudVisitorID:null,MCIDCallTimedOut:null,AnalyticsIDCallTimedOut:null,AAMIDCallTimedOut:null,fieldGroupObj:{},\\nsetState:function(e,t){switch(e){case D:!1===t?!0!==this.MCIDCallTimedOut&&(this.MCIDCallTimedOut=!1):this.MCIDCallTimedOut=t;break;case E:!1===t?!0!==this.AnalyticsIDCallTimedOut&&(this.AnalyticsIDCallTimedOut=!1):this.AnalyticsIDCallTimedOut=t;break;case T:!1===t?!0!==this.AAMIDCallTimedOut&&(this.AAMIDCallTimedOut=!1):this.AAMIDCallTimedOut=t}}};g.isClientSideMarketingCloudVisitorID=function(){return x.isClientSideMarketingCloudVisitorID},g.MCIDCallTimedOut=function(){return x.MCIDCallTimedOut},g.AnalyticsIDCallTimedOut=function(){return x.AnalyticsIDCallTimedOut},g.AAMIDCallTimedOut=function(){return x.AAMIDCallTimedOut},g.idSyncGetOnPageSyncInfo=function(){return g._readVisitor(),g._getField(y)},g.idSyncByURL=function(e){var t=u(e||{});if(t.error)return t.error;var i,n,r=e.url,a=encodeURIComponent,s=F;return r=r.replace(/^https:/,\\\"\\\").replace(/^http:/,\\\"\\\"),i=R.encodeAndBuildRequest([\\\"\\\",e.dpid,e.dpuuid||\\\"\\\"],\\\",\\\"),n=[\\\"ibs\\\",a(e.dpid),\\\"img\\\",a(r),t.ttl,\\\"\\\",i],s.addMessage(n.join(\\\"|\\\")),s.requestToProcess(),\\\"Successfully queued\\\"},g.idSyncByDataSource=function(e){return e===Object(e)&&\\\"string\\\"==typeof e.dpuuid&&e.dpuuid.length?(e.url=\\\"//dpm.demdex.net/ibs:dpid=\\\"+e.dpid+\\\"&dpuuid=\\\"+e.dpuuid,g.idSyncByURL(e)):\\\"Error: config or config.dpuuid is empty\\\"},g._compareVersions=function(e,t){if(e===t)return 0;var i=e.toString().split(\\\".\\\"),n=t.toString().split(\\\".\\\");return c(i.concat(n))?(d(i,n),f(i,n)):NaN},g._getCookieVersion=function(e){e=e||g.cookieRead(g.cookieName);var t=h.VERSION_REGEX.exec(e);return t&&t.length>1?t[1]:null},g._resetAmcvCookie=function(e){var t=g._getCookieVersion();t&&!R.isLessThan(t,e)||R.removeCookie(g.cookieName)},g.setAsCoopSafe=function(){j=!0},g.setAsCoopUnsafe=function(){j=!1},e.indexOf(\\\"@\\\")<0&&(e+=\\\"@AdobeOrg\\\"),g.marketingCloudOrgID=e,g.cookieName=\\\"AMCV_\\\"+e,g.sessionCookieName=\\\"AMCVS_\\\"+e,g.cookieDomain=g._getDomain(),g.cookieDomain===_.location.hostname&&(g.cookieDomain=\\\"\\\"),g.loadSSL=_.location.protocol.toLowerCase().indexOf(\\\"https\\\")>=0,g.loadTimeout=3e4,g.CORSErrors=[],g.marketingCloudServer=g.audienceManagerServer=\\\"dpm.demdex.net\\\",g.sdidParamExpiry=30;var V={};V[k]=!0,V[L]=!0;var j=null;if(t&&\\\"object\\\"==typeof t){var U;for(U in t)S(U)&&(g[U]=t[U]);g.idSyncContainerID=g.idSyncContainerID||0,j=\\\"boolean\\\"==typeof g.isCoopSafe?g.isCoopSafe:R.parseBoolean(g.isCoopSafe),g.resetBeforeVersion&&g._resetAmcvCookie(g.resetBeforeVersion),g._attemptToPopulateIdsFromUrl(),g._attemptToPopulateSdidFromUrl(),g._readVisitor();var H=g._getField(M),B=Math.ceil((new Date).getTime()/h.MILLIS_PER_DAY);!g.idSyncDisableSyncs&&F.canMakeSyncIDCall(H,B)&&(g._setFieldExpire(L,-1),g._setField(M,B)),g.getMarketingCloudVisitorID(),g.getAudienceManagerLocationHint(),g.getAudienceManagerBlob(),g._mergeServerState(g.serverState)}else g._attemptToPopulateIdsFromUrl(),g._attemptToPopulateSdidFromUrl();if(!g.idSyncDisableSyncs){F.checkDPIframeSrc();var G=function(){var e=F;e.readyToAttachIframe()&&e.attachIframe()};R.addListener(_,\\\"load\\\",function(){m.windowLoaded=!0,G()});try{g._xd.receiveMessage(function(e){F.receiveMessage(e.data)},F.iframeHost)}catch(e){}}g.whitelistIframeDomains&&h.POST_MESSAGE_ENABLED&&(g.whitelistIframeDomains=g.whitelistIframeDomains instanceof Array?g.whitelistIframeDomains:[g.whitelistIframeDomains],g.whitelistIframeDomains.forEach(function(t){var i=new a(e,t),n=s(g,i);g._xd.receiveMessage(n,t)}))};o.getInstance=function(e,t){if(!e)throw new Error(\\\"Visitor requires Adobe Marketing Cloud Org ID\\\");e.indexOf(\\\"@\\\")<0&&(e+=\\\"@AdobeOrg\\\");var n=function(){var t=i.s_c_il;if(t)for(var n=0;n<t.length;n++){var r=t[n];if(r&&\\\"Visitor\\\"===r._c&&r.marketingCloudOrgID===e)return r}}();if(n)return n;var a=new o(e),s=a.isAllowed();return function(){i.s_c_il.splice(--i.s_c_in,1)}(),function(){try{return i.self!==i.parent}catch(e){return!0}}()&&!s&&i.parent?new r(e,t,a,i.parent):new o(e,t)},n(),i.Visitor=o,t.exports=o}).call(this,\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:\\\"undefined\\\"!=typeof window?window:{})},{\\\"./ChildVisitor\\\":1,\\\"./Message\\\":2,\\\"./utils/makeChildMessageListener\\\":9}],4:[function(e,t,i){i.MESSAGES={HANDSHAKE:\\\"HANDSHAKE\\\",GETSTATE:\\\"GETSTATE\\\",PARENTSTATE:\\\"PARENTSTATE\\\"},i.STATE_KEYS_MAP={MCMID:\\\"MCMID\\\",MCAID:\\\"MCAID\\\",MCAAMB:\\\"MCAAMB\\\",MCAAMLH:\\\"MCAAMLH\\\",MCOPTOUT:\\\"MCOPTOUT\\\",CUSTOMERIDS:\\\"CUSTOMERIDS\\\"},i.ASYNC_API_MAP={MCMID:\\\"getMarketingCloudVisitorID\\\",MCAID:\\\"getAnalyticsVisitorID\\\",MCAAMB:\\\"getAudienceManagerBlob\\\",MCAAMLH:\\\"getAudienceManagerLocationHint\\\",MCOPTOUT:\\\"getOptOut\\\"},i.SYNC_API_MAP={CUSTOMERIDS:\\\"getCustomerIDs\\\"},i.ALL_APIS={MCMID:\\\"getMarketingCloudVisitorID\\\",MCAAMB:\\\"getAudienceManagerBlob\\\",MCAAMLH:\\\"getAudienceManagerLocationHint\\\",MCOPTOUT:\\\"getOptOut\\\",MCAID:\\\"getAnalyticsVisitorID\\\",CUSTOMERIDS:\\\"getCustomerIDs\\\"},i.FIELDGROUP_TO_FIELD={MC:\\\"MCMID\\\",A:\\\"MCAID\\\",AAM:\\\"MCAAMB\\\"}},{}],5:[function(e,t,i){var n=e(\\\"../enums\\\"),r=n.STATE_KEYS_MAP;t.exports=function(e){function t(){}function i(t,i){var n=this;return function(){var t=e(0,r.MCMID),a={};return a[r.MCMID]=t,n.setStateAndPublish(a),i(t),t}}this.getMarketingCloudVisitorID=function(e){e=e||t;var n=this.findField(r.MCMID,e),a=i.call(this,r.MCMID,e);return void 0!==n?n:a()}}},{\\\"../enums\\\":4}],6:[function(e,t,i){var n=e(\\\"../enums\\\"),r=n.ASYNC_API_MAP;t.exports=function(){Object.keys(r).forEach(function(e){this[r[e]]=function(t){this.callbackRegistry.add(e,t)}},this)}},{\\\"../enums\\\":4}],7:[function(e,t,i){var n=e(\\\"../enums\\\"),r=n.MESSAGES,a=n.ASYNC_API_MAP,s=n.SYNC_API_MAP;t.exports=function(){function e(){}function t(e,t){var i=this;return function(){return i.callbackRegistry.add(e,t),i.messageParent(r.GETSTATE),\\\"\\\"}}function i(i){this[a[i]]=function(n){n=n||e;var r=this.findField(i,n),a=t.call(this,i,n);return void 0!==r?r:a()}}function n(t){this[s[t]]=function(){return this.findField(t,e)||{}}}Object.keys(a).forEach(i,this),Object.keys(s).forEach(n,this)}},{\\\"../enums\\\":4}],8:[function(e,t,i){function n(){return{callbacks:{},add:function(e,t){this.callbacks[e]=this.callbacks[e]||[];var i=this.callbacks[e].push(t)-1;return function(){this.callbacks[e].splice(i,1)}},execute:function(e,t){if(this.callbacks[e]){t=void 0===t?[]:t,t=t instanceof Array?t:[t];try{for(;this.callbacks[e].length;){var i=this.callbacks[e].shift();\\\"function\\\"==typeof i?i.apply(null,t):i instanceof Array&&i[1].apply(i[0],t)}delete this.callbacks[e]}catch(e){}}},executeAll:function(e,t){(t||e&&!r.isObjectEmpty(e))&&Object.keys(this.callbacks).forEach(function(t){var i=void 0!==e[t]?e[t]:\\\"\\\";this.execute(t,i)},this)},hasCallbacks:function(){return Boolean(Object.keys(this.callbacks).length)}}}var r=e(\\\"./utils\\\");t.exports=n},{\\\"./utils\\\":11}],9:[function(e,t,i){var n=e(\\\"../enums\\\"),r=e(\\\"./utils\\\"),a=n.MESSAGES,s=n.ALL_APIS,o=n.ASYNC_API_MAP,l=n.FIELDGROUP_TO_FIELD;t.exports=function(e,t){function i(){var t={};return Object.keys(s).forEach(function(i){var n=s[i],a=e[n]();r.isValueEmpty(a)||(t[i]=a)}),t}function n(){var t=[];return e._loading&&Object.keys(e._loading).forEach(function(i){if(e._loading[i]){var n=l[i];t.push(n)}}),t.length?t:null}function u(t){return function i(r){var a=n();if(a){var s=o[a[0]];e[s](i,!0)}else t()}}function c(e,n){var r=i();t.send(e,n,r)}function d(e){g(e),c(e,a.HANDSHAKE)}function f(e){u(function(){c(e,a.PARENTSTATE)})()}function g(i){function n(n){r.call(e,n),t.send(i,a.PARENTSTATE,{CUSTOMERIDS:e.getCustomerIDs()})}var r=e.setCustomerIDs;e.setCustomerIDs=n}return function(e){if(!t.isInvalid(e)){(t.parse(e).prefix===a.HANDSHAKE?d:f)(e.source)}}}},{\\\"../enums\\\":4,\\\"./utils\\\":11}],10:[function(e,t,i){Object.keys=Object.keys||function(e){var t=[];for(var i in e)t.hasOwnProperty.call(e,i)&&t.push(i);return t},Array.prototype.forEach=Array.prototype.forEach||function(e,t){for(var i=this,n=0,r=i.length;n<r;n++)e.call(t,i[n],n,i)},Object.assign=Object.assign||function(e){for(var t,i,n=1;n<arguments.length;++n){i=arguments[n];for(t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t])}return e}},{}],11:[function(e,t,i){i.isObjectEmpty=function(e){return e===Object(e)&&0===Object.keys(e).length},i.isValueEmpty=function(e){return\\\"\\\"===e||i.isObjectEmpty(e)}},{}]},{},[1,2,3,4]);\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */,
/* 11 */
/* unknown exports provided */
/* all exports used */
/*!********************************************************************************!*\
  !*** ../~/script-loader!./integrations/adobe/lib/video_heartbeat-2.0.2.min.js ***!
  \********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! !../~/script-loader/addScript.js */ 0)(__webpack_require__(/*! !../~/raw-loader!./integrations/adobe/lib/video_heartbeat-2.0.2.min.js */ 8))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbnRlZ3JhdGlvbnMvYWRvYmUvbGliL3ZpZGVvX2hlYXJ0YmVhdC0yLjAuMi5taW4uanM/YjhmNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCIhIS92aWR5YXJkL0d1YXJkdG93ZXIvbm9kZV9tb2R1bGVzL3NjcmlwdC1sb2FkZXIvYWRkU2NyaXB0LmpzXCIpKHJlcXVpcmUoXCIhIS92aWR5YXJkL0d1YXJkdG93ZXIvbm9kZV9tb2R1bGVzL3Jhdy1sb2FkZXIvaW5kZXguanMhL3ZpZHlhcmQvR3VhcmR0b3dlci9jbGllbnQvaW50ZWdyYXRpb25zL2Fkb2JlL2xpYi92aWRlb19oZWFydGJlYXQtMi4wLjIubWluLmpzXCIpKVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vc2NyaXB0LWxvYWRlciEuL2ludGVncmF0aW9ucy9hZG9iZS9saWIvdmlkZW9faGVhcnRiZWF0LTIuMC4yLm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 12 */
/* unknown exports provided */
/* all exports used */
/*!************************************************************************!*\
  !*** ../~/script-loader!./integrations/adobe/lib/visitor_api-2.4.0.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! !../~/script-loader/addScript.js */ 0)(__webpack_require__(/*! !../~/raw-loader!./integrations/adobe/lib/visitor_api-2.4.0.js */ 9))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbnRlZ3JhdGlvbnMvYWRvYmUvbGliL3Zpc2l0b3JfYXBpLTIuNC4wLmpzPzkzZjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiISEvdmlkeWFyZC9HdWFyZHRvd2VyL25vZGVfbW9kdWxlcy9zY3JpcHQtbG9hZGVyL2FkZFNjcmlwdC5qc1wiKShyZXF1aXJlKFwiISEvdmlkeWFyZC9HdWFyZHRvd2VyL25vZGVfbW9kdWxlcy9yYXctbG9hZGVyL2luZGV4LmpzIS92aWR5YXJkL0d1YXJkdG93ZXIvY2xpZW50L2ludGVncmF0aW9ucy9hZG9iZS9saWIvdmlzaXRvcl9hcGktMi40LjAuanNcIikpXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9zY3JpcHQtbG9hZGVyIS4vaW50ZWdyYXRpb25zL2Fkb2JlL2xpYi92aXNpdG9yX2FwaS0yLjQuMC5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 13 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************!*\
  !*** multi ../client/integrations/adobe/vidyard_main.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ../client/integrations/adobe/vidyard_main.js */1);


/***/ }),
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */
/* unknown exports provided */
/* all exports used */
/*!*******************************************************************************!*\
  !*** ../~/raw-loader!./integrations/adobe/lib/app_measurement-2.3.0.unmin.js ***!
  \*******************************************************************************/
/***/ (function(module, exports) {

eval("module.exports = \"/*\\n Start ActivityMap Module\\n\\n The following module enables ActivityMap tracking in Adobe Analytics. ActivityMap\\n allows you to view data overlays on your links and content to understand how\\n users engage with your web site. If you do not intend to use ActivityMap, you\\n can remove the following block of code from your AppMeasurement.js file.\\n Additional documentation on how to configure ActivityMap is available at:\\n https://marketing.adobe.com/resources/help/en_US/analytics/activitymap/getting-started-admins.html\\n*/\\nfunction AppMeasurement_Module_ActivityMap(f) {\\n    function g(a, d) {\\n        var b, c, n;\\n        if (a && d && (b = e.c[d] || (e.c[d] = d.split(\\\",\\\"))))\\n            for (n = 0; n < b.length && (c = b[n++]);)\\n                if (-1 < a.indexOf(c)) return null;\\n        p = 1;\\n        return a\\n    }\\n\\n    function q(a, d, b, c, e) {\\n        var g, h;\\n        if (a.dataset && (h = a.dataset[d])) g = h;\\n        else if (a.getAttribute)\\n            if (h = a.getAttribute(\\\"data-\\\" + b)) g = h;\\n            else if (h = a.getAttribute(b)) g = h;\\n        if (!g && f.useForcedLinkTracking && e && (g = \\\"\\\", d = a.onclick ? \\\"\\\" + a.onclick : \\\"\\\")) {\\n            b = d.indexOf(c);\\n            var l, k;\\n            if (0 <= b) {\\n                for (b += 10; b < d.length && 0 <= \\\"= \\\\t\\\\r\\\\n\\\".indexOf(d.charAt(b));) b++;\\n                if (b < d.length) {\\n                    h = b;\\n                    for (l = k = 0; h < d.length && (\\\";\\\" != d.charAt(h) || l);) l ? d.charAt(h) != l || k ? k = \\\"\\\\\\\\\\\" == d.charAt(h) ? !k : 0 : l = 0 : (l = d.charAt(h), '\\\"' != l && \\\"'\\\" != l && (l = 0)), h++;\\n                    if (d = d.substring(b, h)) a.e = new Function(\\\"s\\\", \\\"var e;try{s.w.\\\" + c + \\\"=\\\" + d + \\\"}catch(e){}\\\"), a.e(f)\\n                }\\n            }\\n        }\\n        return g || e && f.w[c]\\n    }\\n\\n    function r(a, d, b) {\\n        var c;\\n        return (c = e[d](a, b)) && (p ? (p = 0, c) : g(k(c), e[d + \\\"Exclusions\\\"]))\\n    }\\n\\n    function s(a, d, b) {\\n        var c;\\n        if (a && !(1 === (c = a.nodeType) && (c = a.nodeName) && (c = c.toUpperCase()) && t[c]) && (1 === a.nodeType && (c = a.nodeValue) && (d[d.length] = c), b.a ||\\n                b.t || b.s || !a.getAttribute || ((c = a.getAttribute(\\\"alt\\\")) ? b.a = c : (c = a.getAttribute(\\\"title\\\")) ? b.t = c : \\\"IMG\\\" == (\\\"\\\" + a.nodeName).toUpperCase() && (c = a.getAttribute(\\\"src\\\") || a.src) && (b.s = c)), (c = a.childNodes) && c.length))\\n            for (a = 0; a < c.length; a++) s(c[a], d, b)\\n    }\\n\\n    function k(a) {\\n        if (null == a || void 0 == a) return a;\\n        try {\\n            return a.replace(RegExp(\\\"^[\\\\\\\\s\\\\\\\\n\\\\\\\\f\\\\\\\\r\\\\\\\\t\\\\t-\\\\r \\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u205f\\\\u3000\\\\ufeff]+\\\", \\\"mg\\\"), \\\"\\\").replace(RegExp(\\\"[\\\\\\\\s\\\\\\\\n\\\\\\\\f\\\\\\\\r\\\\\\\\t\\\\t-\\\\r \\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u205f\\\\u3000\\\\ufeff]+$\\\",\\n                \\\"mg\\\"), \\\"\\\").replace(RegExp(\\\"[\\\\\\\\s\\\\\\\\n\\\\\\\\f\\\\\\\\r\\\\\\\\t\\\\t-\\\\r \\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u205f\\\\u3000\\\\ufeff]{1,}\\\", \\\"mg\\\"), \\\" \\\").substring(0, 254)\\n        } catch (d) {}\\n    }\\n    var e = this;\\n    e.s = f;\\n    var _window = window;\\n    _window.s_c_in || (_window.s_c_il = [], _window.s_c_in = 0);\\n    e._il = _window.s_c_il;\\n    e._in = _window.s_c_in;\\n    e._il[e._in] = e;\\n    _window.s_c_in++;\\n    e._c = \\\"s_m\\\";\\n    e.c = {};\\n    var p = 0,\\n        t = {\\n            SCRIPT: 1,\\n            STYLE: 1,\\n            LINK: 1,\\n            CANVAS: 1\\n        };\\n    e._g = function () {\\n        var a, d, b, c = f.contextData,\\n            e = f.linkObject;\\n        (a = f.pageName || f.pageURL) && (d = r(e, \\\"link\\\", f.linkName)) && (b = r(e, \\\"region\\\")) && (c[\\\"a.activitymap.page\\\"] = a.substring(0,\\n            255), c[\\\"a.activitymap.link\\\"] = 128 < d.length ? d.substring(0, 128) : d, c[\\\"a.activitymap.region\\\"] = 127 < b.length ? b.substring(0, 127) : b, c[\\\"a.activitymap.pageIDType\\\"] = f.pageName ? 1 : 0)\\n    };\\n    e.link = function (a, d) {\\n        var b;\\n        if (d) b = g(k(d), e.linkExclusions);\\n        else if ((b = a) && !(b = q(a, \\\"sObjectId\\\", \\\"s-object-id\\\", \\\"s_objectID\\\", 1))) {\\n            var c, f;\\n            (f = g(k(a.innerText || a.textContent), e.linkExclusions)) || (s(a, c = [], b = {\\n                a: void 0,\\n                t: void 0,\\n                s: void 0\\n            }), (f = g(k(c.join(\\\"\\\")))) || (f = g(k(b.a ? b.a : b.t ? b.t : b.s ? b.s : void 0))) || !(c = (c = a.tagName) && c.toUpperCase ? c.toUpperCase() :\\n                \\\"\\\") || (\\\"INPUT\\\" == c || \\\"SUBMIT\\\" == c && a.value ? f = g(k(a.value)) : \\\"IMAGE\\\" == c && a.src && (f = g(k(a.src)))));\\n            b = f\\n        }\\n        return b\\n    };\\n    e.region = function (a) {\\n        for (var d, b = e.regionIDAttribute || \\\"id\\\"; a && (a = a.parentNode);) {\\n            if (d = q(a, b, b, b)) return d;\\n            if (\\\"BODY\\\" == a.nodeName) return \\\"BODY\\\"\\n        }\\n    }\\n}\\n/* End ActivityMap Module */\\n/*\\n ============== DO NOT ALTER ANYTHING BELOW THIS LINE ! ===============\\n\\nAppMeasurement for JavaScript version: 2.3.0\\nCopyright 1996-2016 Adobe, Inc. All Rights Reserved\\nMore info available at http://www.adobe.com/marketing-cloud.html\\n*/\\nfunction AppMeasurement(r) {\\n    var appMeasurement = this;\\n    appMeasurement.version = \\\"2.3.0\\\";\\n    var _window = window;\\n    // s_c_il => Instance List\\n    // s_c_in => Instance Number\\n    _window.s_c_in || (_window.s_c_il = [], _window.s_c_in = 0);\\n    appMeasurement._il = _window.s_c_il;\\n    appMeasurement._in = _window.s_c_in;\\n    appMeasurement._il[appMeasurement._in] = appMeasurement;\\n    _window.s_c_in++;\\n    appMeasurement._c = \\\"s_c\\\";\\n    var p = _window.AppMeasurement.Pb;\\n    p || (p = null);\\n    var n = _window,\\n        m, s;\\n    try {\\n        for (m = n.parent, s = n.location; m && m.location && s && \\\"\\\" + m.location != \\\"\\\" + s && n.location && \\\"\\\" + m.location != \\\"\\\" + n.location && m.location.host == s.host;) n = m, m = n.parent\\n    } catch (u) {}\\n    appMeasurement.F = function (a) {\\n        try {\\n            console.log(a)\\n        } catch (b) {}\\n    };\\n    appMeasurement.Ma = function (a) {\\n        return \\\"\\\" + parseInt(a) == \\\"\\\" + a\\n    };\\n    appMeasurement.replace = function (a, b, d) {\\n        return !a ||\\n            0 > a.indexOf(b) ? a : a.split(b).join(d)\\n    };\\n    appMeasurement.escape = function (c) {\\n        var b, d;\\n        if (!c) return c;\\n        c = encodeURIComponent(c);\\n        for (b = 0; 7 > b; b++) d = \\\"+~!*()'\\\".substring(b, b + 1), 0 <= c.indexOf(d) && (c = appMeasurement.replace(c, d, \\\"%\\\" + d.charCodeAt(0).toString(16).toUpperCase()));\\n        return c\\n    };\\n    appMeasurement.unescape = function (c) {\\n        if (!c) return c;\\n        c = 0 <= c.indexOf(\\\"+\\\") ? appMeasurement.replace(c, \\\"+\\\", \\\" \\\") : c;\\n        try {\\n            return decodeURIComponent(c)\\n        } catch (b) {}\\n        return unescape(c)\\n    };\\n    appMeasurement.wb = function () {\\n        var c = _window.location.hostname,\\n            b = appMeasurement.fpCookieDomainPeriods,\\n            d;\\n        b || (b = appMeasurement.cookieDomainPeriods);\\n        if (c && !appMeasurement.Ea && !/^[0-9.]+$/.test(c) &&\\n            (b = b ? parseInt(b) : 2, b = 2 < b ? b : 2, d = c.lastIndexOf(\\\".\\\"), 0 <= d)) {\\n            for (; 0 <= d && 1 < b;) d = c.lastIndexOf(\\\".\\\", d - 1), b--;\\n            appMeasurement.Ea = 0 < d ? c.substring(d) : c\\n        }\\n        return appMeasurement.Ea\\n    };\\n    //\\n    // Cookie Read\\n    //\\n    appMeasurement.c_r = appMeasurement.cookieRead = function (c) {\\n        c = appMeasurement.escape(c);\\n        var b = \\\" \\\" + appMeasurement._document.cookie,\\n            d = b.indexOf(\\\" \\\" + c + \\\"=\\\"),\\n            f = 0 > d ? d : b.indexOf(\\\";\\\", d);\\n        c = 0 > d ? \\\"\\\" : appMeasurement.unescape(b.substring(d + 2 + c.length, 0 > f ? b.length : f));\\n        return \\\"[[B]]\\\" != c ? c : \\\"\\\"\\n    };\\n    //\\n    // Cookie Write\\n    //\\n    appMeasurement.c_w = appMeasurement.cookieWrite = function (cookieName, cookieValue, expiry) {\\n        console.log(\\\"Writing cookie: \\\" + cookieName + \\\": \\\" + cookieValue);\\n        var f = appMeasurement.wb(),\\n            cookieLifetime = appMeasurement.cookieLifetime,\\n            g;\\n        var documentCookie = \\\"\\\";\\n        cookieValue = \\\"\\\" + cookieValue;\\n        cookieLifetime = cookieLifetime ? (\\\"\\\" + cookieLifetime).toUpperCase() : \\\"\\\";\\n        expiry && \\\"SESSION\\\" != cookieLifetime && \\\"NONE\\\" != cookieLifetime && ((g = \\\"\\\" != cookieValue ? parseInt(cookieLifetime ? cookieLifetime : 0) : -60) ?\\n            (expiry = new Date, expiry.setTime(expiry.getTime() + 1E3 * g)) :\\n            1 == expiry && (expiry = new Date, g = expiry.getYear(), expiry.setYear(g + 5 + (1900 > g ? 1900 : 0))));\\n        return cookieName && \\\"NONE\\\" != cookieLifetime ?\\n            (documentCookie = appMeasurement.escape(cookieName) + \\\"=\\\" +\\n                appMeasurement.escape(\\\"\\\" != cookieValue ? cookieValue : \\\"[[B]]\\\") +\\n                \\\"; path=/;\\\" + (expiry && \\\"SESSION\\\" != cookieLifetime ? \\\" expires=\\\" + expiry.toGMTString() + \\\";\\\" : \\\"\\\") +\\n                (f ? \\\" domain=\\\" + f + \\\";\\\" : \\\"\\\"),\\n                appMeasurement._document.cookie = documentCookie,\\n                console.log(\\\"Desired cookie: \\\" + documentCookie + \\n                            \\\"\\\\nCookie at end of write: \\\" + appMeasurement.cookieRead(cookieName) + \\n                            \\\"\\\\nDocument cookie \\\" + appMeasurement._document.cookie),\\n                appMeasurement.cookieRead(cookieName) == cookieValue) : 0\\n    };\\n    appMeasurement.L = [];\\n    appMeasurement.ia = function (c, b, d) {\\n        if (appMeasurement.Fa) return 0;\\n        appMeasurement.maxDelay || (appMeasurement.maxDelay = 250);\\n        var f = 0,\\n            e = (new Date).getTime() + appMeasurement.maxDelay,\\n            g = appMeasurement._document.visibilityState,\\n            h = [\\\"webkitvisibilitychange\\\", \\\"visibilitychange\\\"];\\n        g || (g = appMeasurement._document.webkitVisibilityState);\\n        if (g && \\\"prerender\\\" == g) {\\n            if (!appMeasurement.ja)\\n                for (appMeasurement.ja = 1, d = 0; d < h.length; d++) appMeasurement._document.addEventListener(h[d], function () {\\n                    var c = appMeasurement._document.visibilityState;\\n                    c || (c = appMeasurement._document.webkitVisibilityState);\\n                    \\\"visible\\\" == c && (appMeasurement.ja = 0, appMeasurement.delayReady())\\n                });\\n            f = 1;\\n            e = 0\\n        } else d || appMeasurement.p(\\\"_d\\\") && (f = 1);\\n        f && (appMeasurement.L.push({\\n            m: c,\\n            a: b,\\n            t: e\\n        }), appMeasurement.ja || setTimeout(appMeasurement.delayReady, appMeasurement.maxDelay));\\n        return f\\n    };\\n    appMeasurement.delayReady = function () {\\n        var c = (new Date).getTime(),\\n            b = 0,\\n            d;\\n        for (appMeasurement.p(\\\"_d\\\") ? b = 1 : appMeasurement.xa(); 0 < appMeasurement.L.length;) {\\n            d = appMeasurement.L.shift();\\n            if (b && !d.t && d.t > c) {\\n                appMeasurement.L.unshift(d);\\n                setTimeout(appMeasurement.delayReady, parseInt(appMeasurement.maxDelay / 2));\\n                break\\n            }\\n            appMeasurement.Fa = 1;\\n            appMeasurement[d.m].apply(appMeasurement, d.a);\\n            appMeasurement.Fa = 0\\n        }\\n    };\\n    // Change report suites\\n    appMeasurement.setAccount = appMeasurement.sa = function (rsid) {\\n        var b, d;\\n        if (!appMeasurement.ia(\\\"setAccount\\\", arguments))\\n            if (appMeasurement.account = rsid, appMeasurement.allAccounts)\\n                for (b = appMeasurement.allAccounts.concat(rsid.split(\\\",\\\")), appMeasurement.allAccounts = [], b.sort(), d = 0; d < b.length; d++) 0 != d && b[d - 1] == b[d] || appMeasurement.allAccounts.push(b[d]);\\n            else appMeasurement.allAccounts = rsid.split(\\\",\\\")\\n    };\\n    appMeasurement.foreachVar = function (c, b) {\\n        var d, f, e, g, h = \\\"\\\";\\n        e = f = \\\"\\\";\\n        if (appMeasurement.lightProfileID) d = appMeasurement.P, (h = appMeasurement.lightTrackVars) && (h = \\\",\\\" + h + \\\",\\\" + appMeasurement.na.join(\\\",\\\") + \\\",\\\");\\n        else {\\n            d = appMeasurement.g;\\n            if (appMeasurement.pe || appMeasurement.linkType) h = appMeasurement.linkTrackVars, f = appMeasurement.linkTrackEvents,\\n                appMeasurement.pe && (e = appMeasurement.pe.substring(0, 1).toUpperCase() + appMeasurement.pe.substring(1), appMeasurement[e] && (h = appMeasurement[e].Nb, f = appMeasurement[e].Mb));\\n            h && (h = \\\",\\\" + h + \\\",\\\" + appMeasurement.H.join(\\\",\\\") + \\\",\\\");\\n            f && h && (h += \\\",events,\\\")\\n        }\\n        b && (b = \\\",\\\" + b + \\\",\\\");\\n        for (f = 0; f < d.length; f++) e = d[f], (g = appMeasurement[e]) && (!h || 0 <= h.indexOf(\\\",\\\" + e + \\\",\\\")) && (!b || 0 <= b.indexOf(\\\",\\\" + e + \\\",\\\")) && c(e, g)\\n    };\\n    appMeasurement.r = function (c, b, d, f, e) {\\n        var g = \\\"\\\",\\n            h, l, k, q, m = 0;\\n        \\\"contextData\\\" == c && (c = \\\"c\\\");\\n        if (b) {\\n            for (h in b)\\n                if (!(Object.prototype[h] || e && h.substring(0, e.length) != e) && b[h] && (!d || 0 <= d.indexOf(\\\",\\\" + (f ? f + \\\".\\\" : \\\"\\\") + h + \\\",\\\"))) {\\n                    k = !1;\\n                    if (m)\\n                        for (l = 0; l < m.length; l++) h.substring(0,\\n                            m[l].length) == m[l] && (k = !0);\\n                    if (!k && (\\\"\\\" == g && (g += \\\"&\\\" + c + \\\".\\\"), l = b[h], e && (h = h.substring(e.length)), 0 < h.length))\\n                        if (k = h.indexOf(\\\".\\\"), 0 < k) l = h.substring(0, k), k = (e ? e : \\\"\\\") + l + \\\".\\\", m || (m = []), m.push(k), g += appMeasurement.r(l, b, d, f, k);\\n                        else if (\\\"boolean\\\" == typeof l && (l = l ? \\\"true\\\" : \\\"false\\\"), l) {\\n                        if (\\\"retrieveLightData\\\" == f && 0 > e.indexOf(\\\".contextData.\\\")) switch (k = h.substring(0, 4), q = h.substring(4), h) {\\n                            case \\\"transactionID\\\":\\n                                h = \\\"xact\\\";\\n                                break;\\n                            case \\\"channel\\\":\\n                                h = \\\"ch\\\";\\n                                break;\\n                            case \\\"campaign\\\":\\n                                h = \\\"v0\\\";\\n                                break;\\n                            default:\\n                                appMeasurement.Ma(q) && (\\\"prop\\\" == k ? h = \\\"c\\\" + q : \\\"eVar\\\" == k ? h = \\\"v\\\" +\\n                                    q : \\\"list\\\" == k ? h = \\\"l\\\" + q : \\\"hier\\\" == k && (h = \\\"h\\\" + q, l = l.substring(0, 255)))\\n                        }\\n                        g += \\\"&\\\" + appMeasurement.escape(h) + \\\"=\\\" + appMeasurement.escape(l)\\n                    }\\n                }\\n            \\\"\\\" != g && (g += \\\"&.\\\" + c)\\n        }\\n        return g\\n    };\\n    appMeasurement.usePostbacks = 0;\\n    appMeasurement.zb = function () {\\n        var c = \\\"\\\",\\n            b, d, f, e, g, h, l, k, q = \\\"\\\",\\n            m = \\\"\\\",\\n            n = e = \\\"\\\";\\n        if (appMeasurement.lightProfileID) b = appMeasurement.P, (q = appMeasurement.lightTrackVars) && (q = \\\",\\\" + q + \\\",\\\" + appMeasurement.na.join(\\\",\\\") + \\\",\\\");\\n        else {\\n            b = appMeasurement.g;\\n            if (appMeasurement.pe || appMeasurement.linkType) q = appMeasurement.linkTrackVars, m = appMeasurement.linkTrackEvents, appMeasurement.pe && (e = appMeasurement.pe.substring(0, 1).toUpperCase() + appMeasurement.pe.substring(1), appMeasurement[e] && (q = appMeasurement[e].Nb, m = appMeasurement[e].Mb));\\n            q && (q = \\\",\\\" + q + \\\",\\\" + appMeasurement.H.join(\\\",\\\") + \\\",\\\");\\n            m && (m = \\\",\\\" + m + \\\",\\\", q && (q +=\\n                \\\",events,\\\"));\\n            appMeasurement.events2 && (n += (\\\"\\\" != n ? \\\",\\\" : \\\"\\\") + appMeasurement.events2)\\n        }\\n        if (appMeasurement.visitor && appMeasurement.visitor.getCustomerIDs) {\\n            e = p;\\n            if (g = appMeasurement.visitor.getCustomerIDs())\\n                for (d in g) Object.prototype[d] || (f = g[d], \\\"object\\\" == typeof f && (e || (e = {}), f.id && (e[d + \\\".id\\\"] = f.id), f.authState && (e[d + \\\".as\\\"] = f.authState)));\\n            e && (c += appMeasurement.r(\\\"cid\\\", e))\\n        }\\n        appMeasurement.AudienceManagement && appMeasurement.AudienceManagement.isReady() && (c += appMeasurement.r(\\\"d\\\", appMeasurement.AudienceManagement.getEventCallConfigParams()));\\n        for (d = 0; d < b.length; d++) {\\n            e = b[d];\\n            g = appMeasurement[e];\\n            f = e.substring(0, 4);\\n            h = e.substring(4);\\n            g || (\\\"events\\\" == e && n ? (g = n, n =\\n                \\\"\\\") : \\\"marketingCloudOrgID\\\" == e && appMeasurement.visitor && (g = appMeasurement.visitor.marketingCloudOrgID));\\n            if (g && (!q || 0 <= q.indexOf(\\\",\\\" + e + \\\",\\\"))) {\\n                switch (e) {\\n                    case \\\"customerPerspective\\\":\\n                        e = \\\"cp\\\";\\n                        break;\\n                    case \\\"marketingCloudOrgID\\\":\\n                        e = \\\"mcorgid\\\";\\n                        break;\\n                    case \\\"supplementalDataID\\\":\\n                        e = \\\"sdid\\\";\\n                        break;\\n                    case \\\"timestamp\\\":\\n                        e = \\\"ts\\\";\\n                        break;\\n                    case \\\"dynamicVariablePrefix\\\":\\n                        e = \\\"D\\\";\\n                        break;\\n                    case \\\"visitorID\\\":\\n                        e = \\\"vid\\\";\\n                        break;\\n                    case \\\"marketingCloudVisitorID\\\":\\n                        e = \\\"mid\\\";\\n                        break;\\n                    case \\\"analyticsVisitorID\\\":\\n                        e = \\\"aid\\\";\\n                        break;\\n                    case \\\"audienceManagerLocationHint\\\":\\n                        e = \\\"aamlh\\\";\\n                        break;\\n                    case \\\"audienceManagerBlob\\\":\\n                        e =\\n                            \\\"aamb\\\";\\n                        break;\\n                    case \\\"authState\\\":\\n                        e = \\\"as\\\";\\n                        break;\\n                    case \\\"pageURL\\\":\\n                        e = \\\"g\\\";\\n                        255 < g.length && (appMeasurement.pageURLRest = g.substring(255), g = g.substring(0, 255));\\n                        break;\\n                    case \\\"pageURLRest\\\":\\n                        e = \\\"-g\\\";\\n                        break;\\n                    case \\\"referrer\\\":\\n                        e = \\\"r\\\";\\n                        break;\\n                    case \\\"vmk\\\":\\n                    case \\\"visitorMigrationKey\\\":\\n                        e = \\\"vmt\\\";\\n                        break;\\n                    case \\\"visitorMigrationServer\\\":\\n                        e = \\\"vmf\\\";\\n                        appMeasurement.ssl && appMeasurement.visitorMigrationServerSecure && (g = \\\"\\\");\\n                        break;\\n                    case \\\"visitorMigrationServerSecure\\\":\\n                        e = \\\"vmf\\\";\\n                        !appMeasurement.ssl && appMeasurement.visitorMigrationServer && (g = \\\"\\\");\\n                        break;\\n                    case \\\"charSet\\\":\\n                        e = \\\"ce\\\";\\n                        break;\\n                    case \\\"visitorNamespace\\\":\\n                        e = \\\"ns\\\";\\n                        break;\\n                    case \\\"cookieDomainPeriods\\\":\\n                        e =\\n                            \\\"cdp\\\";\\n                        break;\\n                    case \\\"cookieLifetime\\\":\\n                        e = \\\"cl\\\";\\n                        break;\\n                    case \\\"variableProvider\\\":\\n                        e = \\\"vvp\\\";\\n                        break;\\n                    case \\\"currencyCode\\\":\\n                        e = \\\"cc\\\";\\n                        break;\\n                    case \\\"channel\\\":\\n                        e = \\\"ch\\\";\\n                        break;\\n                    case \\\"transactionID\\\":\\n                        e = \\\"xact\\\";\\n                        break;\\n                    case \\\"campaign\\\":\\n                        e = \\\"v0\\\";\\n                        break;\\n                    case \\\"latitude\\\":\\n                        e = \\\"lat\\\";\\n                        break;\\n                    case \\\"longitude\\\":\\n                        e = \\\"lon\\\";\\n                        break;\\n                    case \\\"resolution\\\":\\n                        e = \\\"s\\\";\\n                        break;\\n                    case \\\"colorDepth\\\":\\n                        e = \\\"c\\\";\\n                        break;\\n                    case \\\"javascriptVersion\\\":\\n                        e = \\\"j\\\";\\n                        break;\\n                    case \\\"javaEnabled\\\":\\n                        e = \\\"v\\\";\\n                        break;\\n                    case \\\"cookiesEnabled\\\":\\n                        e = \\\"k\\\";\\n                        break;\\n                    case \\\"browserWidth\\\":\\n                        e = \\\"bw\\\";\\n                        break;\\n                    case \\\"browserHeight\\\":\\n                        e = \\\"bh\\\";\\n                        break;\\n                    case \\\"connectionType\\\":\\n                        e = \\\"ct\\\";\\n                        break;\\n                    case \\\"homepage\\\":\\n                        e = \\\"hp\\\";\\n                        break;\\n                    case \\\"events\\\":\\n                        n && (g += (\\\"\\\" != g ? \\\",\\\" : \\\"\\\") + n);\\n                        if (m)\\n                            for (h = g.split(\\\",\\\"), g = \\\"\\\", f = 0; f < h.length; f++) l = h[f], k = l.indexOf(\\\"=\\\"), 0 <= k && (l = l.substring(0, k)), k = l.indexOf(\\\":\\\"), 0 <= k && (l = l.substring(0, k)), 0 <= m.indexOf(\\\",\\\" + l + \\\",\\\") && (g += (g ? \\\",\\\" : \\\"\\\") + h[f]);\\n                        break;\\n                    case \\\"events2\\\":\\n                        g = \\\"\\\";\\n                        break;\\n                    case \\\"contextData\\\":\\n                        c += appMeasurement.r(\\\"c\\\", appMeasurement[e], q, e);\\n                        g = \\\"\\\";\\n                        break;\\n                    case \\\"lightProfileID\\\":\\n                        e = \\\"mtp\\\";\\n                        break;\\n                    case \\\"lightStoreForSeconds\\\":\\n                        e = \\\"mtss\\\";\\n                        appMeasurement.lightProfileID || (g = \\\"\\\");\\n                        break;\\n                    case \\\"lightIncrementBy\\\":\\n                        e =\\n                            \\\"mti\\\";\\n                        appMeasurement.lightProfileID || (g = \\\"\\\");\\n                        break;\\n                    case \\\"retrieveLightProfiles\\\":\\n                        e = \\\"mtsr\\\";\\n                        break;\\n                    case \\\"deleteLightProfiles\\\":\\n                        e = \\\"mtsd\\\";\\n                        break;\\n                    case \\\"retrieveLightData\\\":\\n                        appMeasurement.retrieveLightProfiles && (c += appMeasurement.r(\\\"mts\\\", appMeasurement[e], q, e));\\n                        g = \\\"\\\";\\n                        break;\\n                    default:\\n                        appMeasurement.Ma(h) && (\\\"prop\\\" == f ? e = \\\"c\\\" + h : \\\"eVar\\\" == f ? e = \\\"v\\\" + h : \\\"list\\\" == f ? e = \\\"l\\\" + h : \\\"hier\\\" == f && (e = \\\"h\\\" + h, g = g.substring(0, 255)))\\n                }\\n                g && (c += \\\"&\\\" + e + \\\"=\\\" + (\\\"pev\\\" != e.substring(0, 3) ? appMeasurement.escape(g) : g))\\n            }\\n            \\\"pev3\\\" == e && appMeasurement.e && (c += appMeasurement.e)\\n        }\\n        return c\\n    };\\n    appMeasurement.D = function (a) {\\n        var b = a.tagName;\\n        if (\\\"undefined\\\" != \\\"\\\" + a.Sb || \\\"undefined\\\" != \\\"\\\" + a.Ib && \\\"HTML\\\" !=\\n            (\\\"\\\" + a.Ib).toUpperCase()) return \\\"\\\";\\n        b = b && b.toUpperCase ? b.toUpperCase() : \\\"\\\";\\n        \\\"SHAPE\\\" == b && (b = \\\"\\\");\\n        b && ((\\\"INPUT\\\" == b || \\\"BUTTON\\\" == b) && a.type && a.type.toUpperCase ? b = a.type.toUpperCase() : !b && a.href && (b = \\\"A\\\"));\\n        return b\\n    };\\n    appMeasurement.Ia = function (a) {\\n        var b = _window.location,\\n            d = a.href ? a.href : \\\"\\\",\\n            f, e, g;\\n        f = d.indexOf(\\\":\\\");\\n        e = d.indexOf(\\\"?\\\");\\n        g = d.indexOf(\\\"/\\\");\\n        d && (0 > f || 0 <= e && f > e || 0 <= g && f > g) && (e = a.protocol && 1 < a.protocol.length ? a.protocol : b.protocol ? b.protocol : \\\"\\\", f = b.pathname.lastIndexOf(\\\"/\\\"), d = (e ? e + \\\"//\\\" : \\\"\\\") + (a.host ? a.host : b.host ? b.host : \\\"\\\") + (\\\"/\\\" != d.substring(0,\\n            1) ? b.pathname.substring(0, 0 > f ? 0 : f) + \\\"/\\\" : \\\"\\\") + d);\\n        return d\\n    };\\n    appMeasurement.M = function (c) {\\n        var b = appMeasurement.D(c),\\n            d, f, e = \\\"\\\",\\n            g = 0;\\n        return b && (d = c.protocol, f = c.onclick, !c.href || \\\"A\\\" != b && \\\"AREA\\\" != b || f && d && !(0 > d.toLowerCase().indexOf(\\\"javascript\\\")) ? f ? (e = appMeasurement.replace(appMeasurement.replace(appMeasurement.replace(appMeasurement.replace(\\\"\\\" + f, \\\"\\\\r\\\", \\\"\\\"), \\\"\\\\n\\\", \\\"\\\"), \\\"\\\\t\\\", \\\"\\\"), \\\" \\\", \\\"\\\"), g = 2) : \\\"INPUT\\\" == b || \\\"SUBMIT\\\" == b ? (c.value ? e = c.value : c.innerText ? e = c.innerText : c.textContent && (e = c.textContent), g = 3) : \\\"IMAGE\\\" == b && c.src && (e = c.src) : e = appMeasurement.Ia(c), e) ? {\\n            id: e.substring(0, 100),\\n            type: g\\n        } : 0\\n    };\\n    appMeasurement.Qb = function (c) {\\n        for (var b =\\n                appMeasurement.D(c), d = appMeasurement.M(c); c && !d && \\\"BODY\\\" != b;)\\n            if (c = c.parentElement ? c.parentElement : c.parentNode) b = appMeasurement.D(c), d = appMeasurement.M(c);\\n        d && \\\"BODY\\\" != b || (c = 0);\\n        c && (b = c.onclick ? \\\"\\\" + c.onclick : \\\"\\\", 0 <= b.indexOf(\\\".tl(\\\") || 0 <= b.indexOf(\\\".trackLink(\\\")) && (c = 0);\\n        return c\\n    };\\n    appMeasurement.Hb = function () {\\n        var c, b, d = appMeasurement.linkObject,\\n            f = appMeasurement.linkType,\\n            e = appMeasurement.linkURL,\\n            g, h;\\n        appMeasurement.oa = 1;\\n        d || (appMeasurement.oa = 0, d = appMeasurement.clickObject);\\n        if (d) {\\n            c = appMeasurement.D(d);\\n            for (b = appMeasurement.M(d); d && !b && \\\"BODY\\\" != c;)\\n                if (d = d.parentElement ? d.parentElement : d.parentNode) c = appMeasurement.D(d), b = appMeasurement.M(d);\\n            b && \\\"BODY\\\" != c || (d = 0);\\n            if (d && !appMeasurement.linkObject) {\\n                var l = d.onclick ? \\\"\\\" + d.onclick :\\n                    \\\"\\\";\\n                if (0 <= l.indexOf(\\\".tl(\\\") || 0 <= l.indexOf(\\\".trackLink(\\\")) d = 0\\n            }\\n        } else appMeasurement.oa = 1;\\n        !e && d && (e = appMeasurement.Ia(d));\\n        e && !appMeasurement.linkLeaveQueryString && (g = e.indexOf(\\\"?\\\"), 0 <= g && (e = e.substring(0, g)));\\n        if (!f && e) {\\n            var m = 0,\\n                q = 0,\\n                n;\\n            if (appMeasurement.trackDownloadLinks && appMeasurement.linkDownloadFileTypes)\\n                for (l = e.toLowerCase(), g = l.indexOf(\\\"?\\\"), h = l.indexOf(\\\"#\\\"), 0 <= g ? 0 <= h && h < g && (g = h) : g = h, 0 <= g && (l = l.substring(0, g)), g = appMeasurement.linkDownloadFileTypes.toLowerCase().split(\\\",\\\"), h = 0; h < g.length; h++)(n = g[h]) && l.substring(l.length - (n.length + 1)) == \\\".\\\" + n && (f = \\\"d\\\");\\n            if (appMeasurement.trackExternalLinks &&\\n                !f && (l = e.toLowerCase(), appMeasurement.La(l) && (appMeasurement.linkInternalFilters || (appMeasurement.linkInternalFilters = _window.location.hostname), g = 0, appMeasurement.linkExternalFilters ? (g = appMeasurement.linkExternalFilters.toLowerCase().split(\\\",\\\"), m = 1) : appMeasurement.linkInternalFilters && (g = appMeasurement.linkInternalFilters.toLowerCase().split(\\\",\\\")), g))) {\\n                for (h = 0; h < g.length; h++) n = g[h], 0 <= l.indexOf(n) && (q = 1);\\n                q ? m && (f = \\\"e\\\") : m || (f = \\\"e\\\")\\n            }\\n        }\\n        appMeasurement.linkObject = d;\\n        appMeasurement.linkURL = e;\\n        appMeasurement.linkType = f;\\n        if (appMeasurement.trackClickMap || appMeasurement.trackInlineStats) appMeasurement.e = \\\"\\\", d && (f = appMeasurement.pageName, e = 1, d = d.sourceIndex, f || (f = appMeasurement.pageURL, e = 0), _window.s_objectID && (b.id =\\n            _window.s_objectID, d = b.type = 1), f && b && b.id && c && (appMeasurement.e = \\\"&pid=\\\" + appMeasurement.escape(f.substring(0, 255)) + (e ? \\\"&pidt=\\\" + e : \\\"\\\") + \\\"&oid=\\\" + appMeasurement.escape(b.id.substring(0, 100)) + (b.type ? \\\"&oidt=\\\" + b.type : \\\"\\\") + \\\"&ot=\\\" + c + (d ? \\\"&oi=\\\" + d : \\\"\\\")))\\n    };\\n\\n    appMeasurement.Ab = function () {\\n        var c = appMeasurement.oa,\\n            b = appMeasurement.linkType,\\n            d = appMeasurement.linkURL,\\n            f = appMeasurement.linkName;\\n        b && (d || f) && (b = b.toLowerCase(), \\\"d\\\" != b && \\\"e\\\" != b && (b = \\\"o\\\"), appMeasurement.pe = \\\"lnk_\\\" + b, appMeasurement.pev1 = d ? appMeasurement.escape(d) : \\\"\\\", appMeasurement.pev2 = f ? appMeasurement.escape(f) : \\\"\\\", c = 1);\\n        appMeasurement.abort && (c = 0);\\n        if (appMeasurement.trackClickMap || appMeasurement.trackInlineStats || appMeasurement.ActivityMap) {\\n            var b = {},\\n                d = 0,\\n                e = appMeasurement.cookieRead(\\\"s_sq\\\"),\\n                g = e ? e.split(\\\"&\\\") :\\n                0,\\n                h, l, k, e = 0;\\n            if (g)\\n                for (h = 0; h < g.length; h++) l = g[h].split(\\\"=\\\"), f = appMeasurement.unescape(l[0]).split(\\\",\\\"), l = appMeasurement.unescape(l[1]), b[l] = f;\\n            f = appMeasurement.account.split(\\\",\\\");\\n            h = {};\\n            for (k in appMeasurement.contextData) k && !Object.prototype[k] && \\\"a.activitymap.\\\" == k.substring(0, 14) && (h[k] = appMeasurement.contextData[k], appMeasurement.contextData[k] = \\\"\\\");\\n            appMeasurement.e = appMeasurement.r(\\\"c\\\", h) + (appMeasurement.e ? appMeasurement.e : \\\"\\\");\\n            if (c || appMeasurement.e) {\\n                c && !appMeasurement.e && (e = 1);\\n                for (l in b)\\n                    if (!Object.prototype[l])\\n                        for (k = 0; k < f.length; k++)\\n                            for (e && (g = b[l].join(\\\",\\\"), g == appMeasurement.account && (appMeasurement.e += (\\\"&\\\" != l.charAt(0) ? \\\"&\\\" : \\\"\\\") + l, b[l] = [], d = 1)), h = 0; h < b[l].length; h++) g = b[l][h],\\n                                g == f[k] && (e && (appMeasurement.e += \\\"&u=\\\" + appMeasurement.escape(g) + (\\\"&\\\" != l.charAt(0) ? \\\"&\\\" : \\\"\\\") + l + \\\"&u=0\\\"), b[l].splice(h, 1), d = 1);\\n                c || (d = 1);\\n                if (d) {\\n                    e = \\\"\\\";\\n                    h = 2;\\n                    !c && appMeasurement.e && (e = appMeasurement.escape(f.join(\\\",\\\")) + \\\"=\\\" + appMeasurement.escape(appMeasurement.e), h = 1);\\n                    for (l in b) !Object.prototype[l] && 0 < h && 0 < b[l].length && (e += (e ? \\\"&\\\" : \\\"\\\") + appMeasurement.escape(b[l].join(\\\",\\\")) + \\\"=\\\" + appMeasurement.escape(l), h--);\\n                    appMeasurement.cookieWrite(\\\"s_sq\\\", e)\\n                }\\n            }\\n        }\\n        return c\\n    };\\n    //\\n    // Prepare query params\\n    //\\n    appMeasurement.Bb = function () {\\n        if (!appMeasurement.Lb) {\\n            var c = new Date,\\n                b = n.location,\\n                d, f, e = f = d = \\\"\\\",\\n                g = \\\"\\\",\\n                h = \\\"\\\",\\n                l = \\\"1.2\\\",\\n                // TODO: !!! This appears to be the problematic param\\n                k = appMeasurement.cookieWrite(\\\"s_cc\\\", \\\"true\\\", 0) ? \\\"Y\\\" : \\\"N\\\",\\n                m = \\\"\\\",\\n                p = \\\"\\\";\\n            if (c.setUTCDate && (l = \\\"1.3\\\", (0).toPrecision &&\\n                    (l = \\\"1.5\\\", c = [], c.forEach))) {\\n                l = \\\"1.6\\\";\\n                f = 0;\\n                d = {};\\n                try {\\n                    f = new Iterator(d), f.next && (l = \\\"1.7\\\", c.reduce && (l = \\\"1.8\\\", l.trim && (l = \\\"1.8.1\\\", Date.parse && (l = \\\"1.8.2\\\", Object.create && (l = \\\"1.8.5\\\")))))\\n                } catch (r) {}\\n            }\\n            d = screen.width + \\\"x\\\" + screen.height;\\n            e = navigator.javaEnabled() ? \\\"Y\\\" : \\\"N\\\";\\n            f = screen.pixelDepth ? screen.pixelDepth : screen.colorDepth;\\n            g = appMeasurement.w.innerWidth ? appMeasurement.w.innerWidth : appMeasurement._document.documentElement.offsetWidth;\\n            h = appMeasurement.w.innerHeight ? appMeasurement.w.innerHeight : appMeasurement._document.documentElement.offsetHeight;\\n            try {\\n                appMeasurement.b.addBehavior(\\\"#default#homePage\\\"), m = appMeasurement.b.Rb(b) ? \\\"Y\\\" : \\\"N\\\"\\n            } catch (s) {}\\n            try {\\n                appMeasurement.b.addBehavior(\\\"#default#clientCaps\\\"),\\n                    p = appMeasurement.b.connectionType\\n            } catch (t) {}\\n            appMeasurement.resolution = d;\\n            appMeasurement.colorDepth = f;\\n            appMeasurement.javascriptVersion = l;\\n            appMeasurement.javaEnabled = e;\\n            appMeasurement.cookiesEnabled = k;\\n            appMeasurement.browserWidth = g;\\n            appMeasurement.browserHeight = h;\\n            appMeasurement.connectionType = p;\\n            appMeasurement.homepage = m;\\n            appMeasurement.Lb = 1\\n        }\\n    };\\n    appMeasurement.Q = {};\\n    appMeasurement.loadModule = function (c, b) {\\n        var d = appMeasurement.Q[c];\\n        if (!d) {\\n            d = _window[\\\"AppMeasurement_Module_\\\" + c] ? new _window[\\\"AppMeasurement_Module_\\\" + c](appMeasurement) : {};\\n            appMeasurement.Q[c] = appMeasurement[c] = d;\\n            d.eb = function () {\\n                return d.ib\\n            };\\n            d.jb = function (b) {\\n                if (d.ib = b) appMeasurement[c + \\\"_onLoad\\\"] = b, appMeasurement.ia(c + \\\"_onLoad\\\", [appMeasurement, d], 1) || b(appMeasurement, d)\\n            };\\n            try {\\n                Object.defineProperty ? Object.defineProperty(d, \\\"onLoad\\\", {\\n                    get: d.eb,\\n                    set: d.jb\\n                }) : d._olc = 1\\n            } catch (f) {\\n                d._olc = 1\\n            }\\n        }\\n        b && (appMeasurement[c + \\\"_onLoad\\\"] = b, appMeasurement.ia(c + \\\"_onLoad\\\", [appMeasurement, d], 1) || b(appMeasurement, d))\\n    };\\n    appMeasurement.p = function (c) {\\n        var b, d;\\n        for (b in appMeasurement.Q)\\n            if (!Object.prototype[b] && (d = appMeasurement.Q[b]) && (d._olc && d.onLoad && (d._olc = 0, d.onLoad(appMeasurement, d)), d[c] && d[c]())) return 1;\\n        return 0\\n    };\\n    appMeasurement.Db = function () {\\n        var c = Math.floor(1E13 * Math.random()),\\n            b = appMeasurement.visitorSampling,\\n            d = appMeasurement.visitorSamplingGroup,\\n            d = \\\"s_vsn_\\\" + (appMeasurement.visitorNamespace ? appMeasurement.visitorNamespace : appMeasurement.account) + (d ? \\\"_\\\" + d : \\\"\\\"),\\n            f = appMeasurement.cookieRead(d);\\n        if (b) {\\n            b *= 100;\\n            f && (f = parseInt(f));\\n            if (!f) {\\n                if (!appMeasurement.cookieWrite(d,\\n                        c)) return 0;\\n                f = c\\n            }\\n            if (f % 1E4 > b) return 0\\n        }\\n        return 1\\n    };\\n    appMeasurement.R = function (c, b) {\\n        var d, f, e, g, h, l;\\n        for (d = 0; 2 > d; d++)\\n            for (f = 0 < d ? appMeasurement.Aa : appMeasurement.g, e = 0; e < f.length; e++)\\n                if (g = f[e], (h = c[g]) || c[\\\"!\\\" + g]) {\\n                    if (!b && (\\\"contextData\\\" == g || \\\"retrieveLightData\\\" == g) && appMeasurement[g])\\n                        for (l in appMeasurement[g]) h[l] || (h[l] = appMeasurement[g][l]);\\n                    appMeasurement[g] = h\\n                }\\n    };\\n    appMeasurement.Va = function (c, b) {\\n        var d, f, e, g;\\n        for (d = 0; 2 > d; d++)\\n            for (f = 0 < d ? appMeasurement.Aa : appMeasurement.g, e = 0; e < f.length; e++) g = f[e], c[g] = appMeasurement[g], b || c[g] || (c[\\\"!\\\" + g] = 1)\\n    };\\n    appMeasurement.vb = function (a) {\\n        var b, d, f, e, g, h = 0,\\n            l, k = \\\"\\\",\\n            m = \\\"\\\";\\n        if (a && 255 < a.length && (b = \\\"\\\" + a, d = b.indexOf(\\\"?\\\"), 0 < d && (l = b.substring(d +\\n                1), b = b.substring(0, d), e = b.toLowerCase(), f = 0, \\\"http://\\\" == e.substring(0, 7) ? f += 7 : \\\"https://\\\" == e.substring(0, 8) && (f += 8), d = e.indexOf(\\\"/\\\", f), 0 < d && (e = e.substring(f, d), g = b.substring(d), b = b.substring(0, d), 0 <= e.indexOf(\\\"google\\\") ? h = \\\",q,ie,start,search_key,word,kw,cd,\\\" : 0 <= e.indexOf(\\\"yahoo.co\\\") && (h = \\\",p,ei,\\\"), h && l)))) {\\n            if ((a = l.split(\\\"&\\\")) && 1 < a.length) {\\n                for (f = 0; f < a.length; f++) e = a[f], d = e.indexOf(\\\"=\\\"), 0 < d && 0 <= h.indexOf(\\\",\\\" + e.substring(0, d) + \\\",\\\") ? k += (k ? \\\"&\\\" : \\\"\\\") + e : m += (m ? \\\"&\\\" : \\\"\\\") + e;\\n                k && m ? l = k + \\\"&\\\" + m : m = \\\"\\\"\\n            }\\n            d = 253 - (l.length - m.length) -\\n                b.length;\\n            a = b + (0 < d ? g.substring(0, d) : \\\"\\\") + \\\"?\\\" + l\\n        }\\n        return a\\n    };\\n    appMeasurement.ab = function (c) {\\n        var b = appMeasurement._document.visibilityState,\\n            d = [\\\"webkitvisibilitychange\\\", \\\"visibilitychange\\\"];\\n        b || (b = appMeasurement._document.webkitVisibilityState);\\n        if (b && \\\"prerender\\\" == b) {\\n            if (c)\\n                for (b = 0; b < d.length; b++) appMeasurement._document.addEventListener(d[b], function () {\\n                    var b = appMeasurement._document.visibilityState;\\n                    b || (b = appMeasurement._document.webkitVisibilityState);\\n                    \\\"visible\\\" == b && c()\\n                });\\n            return !1\\n        }\\n        return !0\\n    };\\n    appMeasurement.ea = !1;\\n    appMeasurement.J = !1;\\n    appMeasurement.lb = function () {\\n        appMeasurement.J = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.ca = !1;\\n    appMeasurement.V = !1;\\n    appMeasurement.hb = function (c) {\\n        appMeasurement.marketingCloudVisitorID = c;\\n        appMeasurement.V = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.fa = !1;\\n    appMeasurement.W = !1;\\n    appMeasurement.mb =\\n        function (c) {\\n            appMeasurement.visitorOptedOut = c;\\n            appMeasurement.W = !0;\\n            appMeasurement.j()\\n        };\\n    appMeasurement.Z = !1;\\n    appMeasurement.S = !1;\\n    appMeasurement.Xa = function (c) {\\n        appMeasurement.analyticsVisitorID = c;\\n        appMeasurement.S = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.ba = !1;\\n    appMeasurement.U = !1;\\n    appMeasurement.Za = function (c) {\\n        appMeasurement.audienceManagerLocationHint = c;\\n        appMeasurement.U = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.aa = !1;\\n    appMeasurement.T = !1;\\n    appMeasurement.Ya = function (c) {\\n        appMeasurement.audienceManagerBlob = c;\\n        appMeasurement.T = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.$a = function (c) {\\n        appMeasurement.maxDelay || (appMeasurement.maxDelay = 250);\\n        return appMeasurement.p(\\\"_d\\\") ? (c && setTimeout(function () {\\n            c()\\n        }, appMeasurement.maxDelay), !1) : !0\\n    };\\n    appMeasurement.da = !1;\\n    appMeasurement.I = !1;\\n    appMeasurement.xa = function () {\\n        appMeasurement.I = !0;\\n        appMeasurement.j()\\n    };\\n    appMeasurement.isReadyToTrack = function () {\\n        var c = !0,\\n            b = appMeasurement.visitor,\\n            d, f, e;\\n        appMeasurement.ea || appMeasurement.J || (appMeasurement.ab(appMeasurement.lb) ? appMeasurement.J = !0 : appMeasurement.ea = !0);\\n        if (appMeasurement.ea && !appMeasurement.J) return !1;\\n        b && b.isAllowed() && (appMeasurement.ca || appMeasurement.marketingCloudVisitorID || !b.getMarketingCloudVisitorID || (appMeasurement.ca = !0, appMeasurement.marketingCloudVisitorID = b.getMarketingCloudVisitorID([appMeasurement, appMeasurement.hb]), appMeasurement.marketingCloudVisitorID && (appMeasurement.V = !0)), appMeasurement.fa || appMeasurement.visitorOptedOut || !b.isOptedOut || (appMeasurement.fa = !0, appMeasurement.visitorOptedOut = b.isOptedOut([appMeasurement, appMeasurement.mb]), appMeasurement.visitorOptedOut != p && (appMeasurement.W = !0)), appMeasurement.Z || appMeasurement.analyticsVisitorID || !b.getAnalyticsVisitorID || (appMeasurement.Z = !0, appMeasurement.analyticsVisitorID = b.getAnalyticsVisitorID([appMeasurement, appMeasurement.Xa]), appMeasurement.analyticsVisitorID && (appMeasurement.S = !0)), appMeasurement.ba ||\\n            appMeasurement.audienceManagerLocationHint || !b.getAudienceManagerLocationHint || (appMeasurement.ba = !0, appMeasurement.audienceManagerLocationHint = b.getAudienceManagerLocationHint([appMeasurement, appMeasurement.Za]), appMeasurement.audienceManagerLocationHint && (appMeasurement.U = !0)), appMeasurement.aa || appMeasurement.audienceManagerBlob || !b.getAudienceManagerBlob || (appMeasurement.aa = !0, appMeasurement.audienceManagerBlob = b.getAudienceManagerBlob([appMeasurement, appMeasurement.Ya]), appMeasurement.audienceManagerBlob && (appMeasurement.T = !0)), c = appMeasurement.ca && !appMeasurement.V && !appMeasurement.marketingCloudVisitorID, b = appMeasurement.Z && !appMeasurement.S && !appMeasurement.analyticsVisitorID, d = appMeasurement.ba && !appMeasurement.U && !appMeasurement.audienceManagerLocationHint, f = appMeasurement.aa && !appMeasurement.T && !appMeasurement.audienceManagerBlob,\\n            e = appMeasurement.fa && !appMeasurement.W, c = c || b || d || f || e ? !1 : !0);\\n        appMeasurement.da || appMeasurement.I || (appMeasurement.$a(appMeasurement.xa) ? appMeasurement.I = !0 : appMeasurement.da = !0);\\n        appMeasurement.da && !appMeasurement.I && (c = !1);\\n        return c\\n    };\\n    appMeasurement.o = p;\\n    appMeasurement.u = 0;\\n    appMeasurement.callbackWhenReadyToTrack = function (c, b, d) {\\n        var f;\\n        f = {};\\n        f.qb = c;\\n        f.pb = b;\\n        f.nb = d;\\n        appMeasurement.o == p && (appMeasurement.o = []);\\n        appMeasurement.o.push(f);\\n        0 == appMeasurement.u && (appMeasurement.u = setInterval(appMeasurement.j, 100))\\n    };\\n    appMeasurement.j = function () {\\n        var c;\\n        if (appMeasurement.isReadyToTrack() && (appMeasurement.kb(), appMeasurement.o != p))\\n            for (; 0 < appMeasurement.o.length;) c = appMeasurement.o.shift(), c.pb.apply(c.qb, c.nb)\\n    };\\n    appMeasurement.kb = function () {\\n        appMeasurement.u && (clearInterval(appMeasurement.u), appMeasurement.u = 0)\\n    };\\n    appMeasurement.fb = function (c) {\\n        var b, d, f = p,\\n            e = p;\\n        if (!appMeasurement.isReadyToTrack()) {\\n            b = [];\\n            if (c != p)\\n                for (d in f = {}, c) f[d] = c[d];\\n            e = {};\\n            appMeasurement.Va(e, !0);\\n            b.push(f);\\n            b.push(e);\\n            appMeasurement.callbackWhenReadyToTrack(appMeasurement, appMeasurement.track, b);\\n            return !0\\n        }\\n        return !1\\n    };\\n    appMeasurement.xb = function () {\\n        var c = appMeasurement.cookieRead(\\\"s_fid\\\"),\\n            b = \\\"\\\",\\n            d = \\\"\\\",\\n            f;\\n        f = 8;\\n        var e = 4;\\n        if (!c || 0 > c.indexOf(\\\"-\\\")) {\\n            for (c = 0; 16 > c; c++) f = Math.floor(Math.random() * f), b += \\\"0123456789ABCDEF\\\".substring(f, f + 1), f = Math.floor(Math.random() * e), d += \\\"0123456789ABCDEF\\\".substring(f, f + 1), f = e = 16;\\n            c = b + \\\"-\\\" + d\\n        }\\n        appMeasurement.cookieWrite(\\\"s_fid\\\", c, 1) || (c = 0);\\n        return c\\n    };\\n    // -------------------\\n    // Track Page View\\n    // https://marketing.adobe.com/resources/help/en_US/sc/implement/function_t.html\\n    appMeasurement.t = appMeasurement.track = function (c, b) {\\n        var d,\\n            timestamp = new Date,\\n            // e => Randomly generated visitor ID?\\n            e = \\\"s\\\" + Math.floor(timestamp.getTime() / 108E5) % 10 +\\n            Math.floor(1E13 * Math.random()),\\n            // g => url escaped timestamp query param\\n            g = timestamp.getYear(),\\n            g = \\\"t=\\\" + appMeasurement.escape(timestamp.getDate() +\\n                \\\"/\\\" + timestamp.getMonth() + \\\"/\\\" + (1900 > g ? g + 1900 : g) +\\n                \\\" \\\" + timestamp.getHours() + \\\":\\\" + timestamp.getMinutes() + \\\":\\\" +\\n                timestamp.getSeconds() + \\\" \\\" + timestamp.getDay() + \\\" \\\" + timestamp.getTimezoneOffset());\\n        appMeasurement.visitor && appMeasurement.visitor.getAuthState && (appMeasurement.authState = appMeasurement.visitor.getAuthState());\\n        appMeasurement.p(\\\"_s\\\");\\n        appMeasurement.fb(c) ||\\n            (b && appMeasurement.R(b),\\n                c &&\\n                (d = {},\\n                    appMeasurement.Va(d, 0),\\n                    appMeasurement.R(c)),\\n                appMeasurement.Db() &&\\n                !appMeasurement.visitorOptedOut &&\\n                (appMeasurement.analyticsVisitorID || appMeasurement.marketingCloudVisitorID ||\\n                    (appMeasurement.fid = appMeasurement.xb()),\\n                    appMeasurement.Hb(),\\n                    appMeasurement.usePlugins &&\\n                    appMeasurement.doPlugins &&\\n                    appMeasurement.doPlugins(appMeasurement),\\n                    appMeasurement.account &&\\n                    (appMeasurement.abort ||\\n                        (appMeasurement.trackOffline &&\\n                            !appMeasurement.timestamp &&\\n                            (appMeasurement.timestamp = Math.floor(timestamp.getTime() / 1E3)),\\n                            timestamp = _window.location,\\n                            appMeasurement.pageURL ||\\n                            (appMeasurement.pageURL = timestamp.href ? timestamp.href : timestamp),\\n                            appMeasurement.referrer ||\\n                            appMeasurement.Wa ||\\n                            (timestamp = appMeasurement.Util.getQueryParam(\\\"adobe_mc_ref\\\", null, null, !0),\\n                                appMeasurement.referrer = timestamp ||\\n                                void 0 === timestamp ? void 0 === timestamp ? \\\"\\\" : timestamp : n.document.referrer),\\n                            appMeasurement.Wa = 1,\\n                            appMeasurement.referrer = appMeasurement.vb(appMeasurement.referrer),\\n                            appMeasurement.p(\\\"_g\\\")),\\n                        appMeasurement.Ab() &&\\n                        !appMeasurement.abort &&\\n                        (appMeasurement.visitor && !appMeasurement.supplementalDataID && appMeasurement.visitor.getSupplementalDataID &&\\n                            (appMeasurement.supplementalDataID = appMeasurement.visitor.getSupplementalDataID(\\\"AppMeasurement:\\\" + appMeasurement._in, appMeasurement.expectSupplementalData ? !1 : !0)),\\n                            // Query param setup\\n                            appMeasurement.Bb(),\\n                            g += appMeasurement.zb(),\\n                            appMeasurement.Gb(e, g),\\n                            appMeasurement.p(\\\"_t\\\"),\\n                            appMeasurement.referrer = \\\"\\\"))),\\n                c &&\\n                appMeasurement.R(d, 1));\\n        appMeasurement.abort = appMeasurement.supplementalDataID = appMeasurement.timestamp = appMeasurement.pageURLRest = appMeasurement.linkObject = appMeasurement.clickObject = appMeasurement.linkURL = appMeasurement.linkName = appMeasurement.linkType = _window.s_objectID = appMeasurement.pe = appMeasurement.pev1 = appMeasurement.pev2 = appMeasurement.pev3 = appMeasurement.e = appMeasurement.lightProfileID = 0\\n    };\\n\\n    appMeasurement.za = [];\\n    appMeasurement.registerPreTrackCallback = function (c) {\\n        for (var b = [], d = 1; d < arguments.length; d++) b.push(arguments[d]);\\n        \\\"function\\\" == typeof c ? appMeasurement.za.push([c, b]) : appMeasurement.debugTracking && appMeasurement.F(\\\"DEBUG: Non function type passed to registerPreTrackCallback\\\")\\n    };\\n    appMeasurement.cb = function (c) {\\n        appMeasurement.wa(appMeasurement.za,\\n            c)\\n    };\\n    appMeasurement.ya = [];\\n    appMeasurement.registerPostTrackCallback = function (c) {\\n        for (var b = [], d = 1; d < arguments.length; d++) b.push(arguments[d]);\\n        \\\"function\\\" == typeof c ? appMeasurement.ya.push([c, b]) : appMeasurement.debugTracking && appMeasurement.F(\\\"DEBUG: Non function type passed to registerPostTrackCallback\\\")\\n    };\\n    appMeasurement.bb = function (c) {\\n        appMeasurement.wa(appMeasurement.ya, c)\\n    };\\n    appMeasurement.wa = function (c, b) {\\n        if (\\\"object\\\" == typeof c)\\n            for (var d = 0; d < c.length; d++) {\\n                var f = c[d][0],\\n                    e = c[d][1];\\n                e.unshift(b);\\n                if (\\\"function\\\" == typeof f) try {\\n                    f.apply(null, e)\\n                } catch (g) {\\n                    appMeasurement.debugTracking && appMeasurement.F(g.message)\\n                }\\n            }\\n    };\\n    // Link Tracking for tracking exits and file downloads\\n    // https://marketing.adobe.com/resources/help/en_US/sc/implement/function_tl.html\\n    appMeasurement.tl = appMeasurement.trackLink = function (c, b, d, f, e) {\\n        appMeasurement.linkObject =\\n            c;\\n        appMeasurement.linkType = b;\\n        appMeasurement.linkName = d;\\n        e && (appMeasurement.l = c, appMeasurement.A = e);\\n        return appMeasurement.track(f)\\n    };\\n    appMeasurement.trackLight = function (c, b, d, f) {\\n        appMeasurement.lightProfileID = c;\\n        appMeasurement.lightStoreForSeconds = b;\\n        appMeasurement.lightIncrementBy = d;\\n        return appMeasurement.track(f)\\n    };\\n    appMeasurement.clearVars = function () {\\n        var c, b;\\n        for (c = 0; c < appMeasurement.g.length; c++)\\n            if (b = appMeasurement.g[c], \\\"prop\\\" == b.substring(0, 4) || \\\"eVar\\\" == b.substring(0, 4) || \\\"hier\\\" == b.substring(0, 4) || \\\"list\\\" == b.substring(0, 4) || \\\"channel\\\" == b || \\\"events\\\" == b || \\\"eventList\\\" == b || \\\"products\\\" == b || \\\"productList\\\" == b || \\\"purchaseID\\\" == b || \\\"transactionID\\\" == b || \\\"state\\\" == b || \\\"zip\\\" == b || \\\"campaign\\\" == b) appMeasurement[b] =\\n                void 0\\n    };\\n    appMeasurement.tagContainerMarker = \\\"\\\";\\n    appMeasurement.Gb = function (c, b) {\\n        var d, f = appMeasurement.trackingServer;\\n        d = \\\"\\\";\\n        var e = appMeasurement.dc,\\n            g = \\\"sc.\\\",\\n            h = appMeasurement.visitorNamespace;\\n        f ? appMeasurement.trackingServerSecure && appMeasurement.ssl && (f = appMeasurement.trackingServerSecure) : (h || (h = appMeasurement.account, f = h.indexOf(\\\",\\\"), 0 <= f && (h = h.substring(0, f)), h = h.replace(/[^A-Za-z0-9]/g, \\\"\\\")), d || (d = \\\"2o7.net\\\"), e = e ? (\\\"\\\" + e).toLowerCase() : \\\"d1\\\", \\\"2o7.net\\\" == d && (\\\"d1\\\" == e ? e = \\\"112\\\" : \\\"d2\\\" == e && (e = \\\"122\\\"), g = \\\"\\\"), f = h + \\\".\\\" + e + \\\".\\\" + g + d);\\n        d = appMeasurement.ssl ? \\\"https://\\\" : \\\"http://\\\";\\n        e = appMeasurement.AudienceManagement && appMeasurement.AudienceManagement.isReady() || 0 != appMeasurement.usePostbacks;\\n        d +=\\n            f + \\\"/b/ss/\\\" + appMeasurement.account + \\\"/\\\" + (appMeasurement.mobile ? \\\"5.\\\" : \\\"\\\") + (e ? \\\"10\\\" : \\\"1\\\") + \\\"/JS-\\\" + appMeasurement.version + (appMeasurement.Kb ? \\\"T\\\" : \\\"\\\") + (appMeasurement.tagContainerMarker ? \\\"-\\\" + appMeasurement.tagContainerMarker : \\\"\\\") + \\\"/\\\" + c + \\\"?AQB=1&ndh=1&pf=1&\\\" + (e ? \\\"callback=s_c_il[\\\" + appMeasurement._in + \\\"].doPostbacks&et=1&\\\" : \\\"\\\") + b + \\\"&AQE=1\\\";\\n        appMeasurement.cb(d);\\n        appMeasurement.tb(d);\\n        appMeasurement.ka()\\n    };\\n    appMeasurement.Ua = /{(%?)(.*?)(%?)}/;\\n    appMeasurement.Ob = RegExp(appMeasurement.Ua.source, \\\"g\\\");\\n    appMeasurement.ub = function (c) {\\n        if (\\\"object\\\" == typeof c.dests)\\n            for (var b = 0; b < c.dests.length; ++b) {\\n                var d = c.dests[b];\\n                if (\\\"string\\\" == typeof d.c && \\\"aa.\\\" == d.id.substr(0, 3))\\n                    for (var f = d.c.match(appMeasurement.Ob), e = 0; e < f.length; ++e) {\\n                        var g =\\n                            f[e],\\n                            h = g.match(appMeasurement.Ua),\\n                            k = \\\"\\\";\\n                        \\\"%\\\" == h[1] && \\\"timezone_offset\\\" == h[2] ? k = (new Date).getTimezoneOffset() : \\\"%\\\" == h[1] && \\\"timestampz\\\" == h[2] && (k = appMeasurement.yb());\\n                        d.c = d.c.replace(g, appMeasurement.escape(k))\\n                    }\\n            }\\n    };\\n    appMeasurement.yb = function () {\\n        var c = new Date,\\n            b = new Date(6E4 * Math.abs(c.getTimezoneOffset()));\\n        return appMeasurement.k(4, c.getFullYear()) + \\\"-\\\" + appMeasurement.k(2, c.getMonth() + 1) + \\\"-\\\" + appMeasurement.k(2, c.getDate()) + \\\"T\\\" + appMeasurement.k(2, c.getHours()) + \\\":\\\" + appMeasurement.k(2, c.getMinutes()) + \\\":\\\" + appMeasurement.k(2, c.getSeconds()) + (0 < c.getTimezoneOffset() ? \\\"-\\\" : \\\"+\\\") + appMeasurement.k(2, b.getUTCHours()) + \\\":\\\" + appMeasurement.k(2, b.getUTCMinutes())\\n    };\\n    appMeasurement.k = function (a,\\n        b) {\\n        return (Array(a + 1).join(0) + b).slice(-a)\\n    };\\n    appMeasurement.ta = {};\\n    appMeasurement.doPostbacks = function (c) {\\n        if (\\\"object\\\" == typeof c)\\n            if (appMeasurement.ub(c), \\\"object\\\" == typeof appMeasurement.AudienceManagement && \\\"function\\\" == typeof appMeasurement.AudienceManagement.isReady && appMeasurement.AudienceManagement.isReady() && \\\"function\\\" == typeof appMeasurement.AudienceManagement.passData) appMeasurement.AudienceManagement.passData(c);\\n            else if (\\\"object\\\" == typeof c && \\\"object\\\" == typeof c.dests)\\n            for (var b = 0; b < c.dests.length; ++b) {\\n                var d = c.dests[b];\\n                \\\"object\\\" == typeof d && \\\"string\\\" == typeof d.c && \\\"string\\\" == typeof d.id && \\\"aa.\\\" == d.id.substr(0,\\n                    3) && (appMeasurement.ta[d.id] = new Image, appMeasurement.ta[d.id].alt = \\\"\\\", appMeasurement.ta[d.id].src = d.c)\\n            }\\n    };\\n    appMeasurement.tb = function (c) {\\n        appMeasurement.i || appMeasurement.Cb();\\n        appMeasurement.i.push(c);\\n        appMeasurement.ma = appMeasurement.C();\\n        appMeasurement.Sa()\\n    };\\n    appMeasurement.Cb = function () {\\n        appMeasurement.i = appMeasurement.Eb();\\n        appMeasurement.i || (appMeasurement.i = [])\\n    };\\n    appMeasurement.Eb = function () {\\n        var c, b;\\n        if (appMeasurement.ra()) {\\n            try {\\n                (b = _window.localStorage.getItem(appMeasurement.pa())) && (c = _window.JSON.parse(b))\\n            } catch (d) {}\\n            return c\\n        }\\n    };\\n    appMeasurement.ra = function () {\\n        var c = !0;\\n        appMeasurement.trackOffline && appMeasurement.offlineFilename && _window.localStorage && _window.JSON || (c = !1);\\n        return c\\n    };\\n    appMeasurement.Ja = function () {\\n        var c = 0;\\n        appMeasurement.i && (c = appMeasurement.i.length);\\n        appMeasurement.q && c++;\\n        return c\\n    };\\n    appMeasurement.ka = function () {\\n        if (appMeasurement.q && (appMeasurement.B && appMeasurement.B.complete && appMeasurement.B.G && appMeasurement.B.va(),\\n                appMeasurement.q)) return;\\n        appMeasurement.Ka = p;\\n        if (appMeasurement.qa) appMeasurement.ma > appMeasurement.O && appMeasurement.Qa(appMeasurement.i), appMeasurement.ua(500);\\n        else {\\n            var c = appMeasurement.ob();\\n            if (0 < c) appMeasurement.ua(c);\\n            else if (c = appMeasurement.Ga()) appMeasurement.q = 1, appMeasurement.Fb(c), appMeasurement.Jb(c)\\n        }\\n    };\\n    appMeasurement.ua = function (c) {\\n        appMeasurement.Ka || (c || (c = 0), appMeasurement.Ka = setTimeout(appMeasurement.ka, c))\\n    };\\n    appMeasurement.ob = function () {\\n        var c;\\n        if (!appMeasurement.trackOffline || 0 >= appMeasurement.offlineThrottleDelay) return 0;\\n        c = appMeasurement.C() - appMeasurement.Pa;\\n        return appMeasurement.offlineThrottleDelay < c ? 0 : appMeasurement.offlineThrottleDelay - c\\n    };\\n    appMeasurement.Ga = function () {\\n        if (0 < appMeasurement.i.length) return appMeasurement.i.shift()\\n    };\\n    appMeasurement.Fb = function (c) {\\n        if (appMeasurement.debugTracking) {\\n            var b = \\\"AppMeasurement Debug: \\\" + c;\\n            c = c.split(\\\"&\\\");\\n            var d;\\n            for (d = 0; d < c.length; d++) b +=\\n                \\\"\\\\n\\\\t\\\" + appMeasurement.unescape(c[d]);\\n            appMeasurement.F(b)\\n        }\\n    };\\n    // Get ID\\n    appMeasurement.gb = function () {\\n        return appMeasurement.marketingCloudVisitorID || appMeasurement.analyticsVisitorID\\n    };\\n    appMeasurement.getId = appMeasurement.gb;\\n    appMeasurement.Y = !1;\\n    var t;\\n    try {\\n        t = JSON.parse('{\\\"x\\\":\\\"y\\\"}')\\n    } catch (w) {\\n        t = null\\n    }\\n    t && \\\"y\\\" == t.x ? (appMeasurement.Y = !0, appMeasurement.X = function (a) {\\n        return JSON.parse(a)\\n    }) : _window.$ && _window.$.parseJSON ? (appMeasurement.X = function (a) {\\n        return _window.$.parseJSON(a)\\n    }, appMeasurement.Y = !0) : appMeasurement.X = function () {\\n        return null\\n    };\\n    // Send HTTP Request\\n    appMeasurement.Jb = function (c) {\\n        var _request, d, f;\\n\\n        appMeasurement.getId() && 2047 < c.length &&\\n            (\\\"undefined\\\" != typeof XMLHttpRequest &&\\n                (_request = new XMLHttpRequest,\\n                    \\\"withCredentials\\\" in _request ? d = 1 : _request = 0), _request ||\\n                \\\"undefined\\\" == typeof XDomainRequest ||\\n                (_request = new XDomainRequest, d = 2), _request &&\\n                (appMeasurement.AudienceManagement &&\\n                    appMeasurement.AudienceManagement.isReady() ||\\n                    0 != appMeasurement.usePostbacks) &&\\n                (appMeasurement.Y ? _request.Ba = !0 : _request = 0));\\n\\n        !_request && appMeasurement.Ta && (c = c.substring(0, 2047));\\n\\n        !_request && appMeasurement._document.createElement &&\\n            (0 != appMeasurement.usePostbacks ||\\n                appMeasurement.AudienceManagement &&\\n                appMeasurement.AudienceManagement.isReady()) &&\\n            (_request = appMeasurement._document.createElement(\\\"SCRIPT\\\")) &&\\n            \\\"async\\\" in _request &&\\n            ((f =\\n                    (f = appMeasurement._document.getElementsByTagName(\\\"HEAD\\\")) &&\\n                    f[0] ? f[0] : appMeasurement._document.body) ?\\n                (_request.type = \\\"text/javascript\\\", _request.setAttribute(\\\"async\\\", \\\"async\\\"), d = 3) : _request = 0);\\n\\n        _request || (_request = new Image, _request.alt = \\\"\\\", _request.abort || \\\"undefined\\\" === typeof _window.InstallTrigger ||\\n            (_request.abort = function () {\\n                _request.src = p\\n            }));\\n        _request.Da = function () {\\n            try {\\n                _request.G && (clearTimeout(_request.G), _request.G = 0)\\n            } catch (a) {}\\n        };\\n        _request.onload = _request.va = function () {\\n            appMeasurement.bb(c);\\n            _request.Da();\\n            appMeasurement.sb();\\n            appMeasurement.ga();\\n            appMeasurement.q = 0;\\n            appMeasurement.ka();\\n            if (_request.Ba) {\\n                _request.Ba = !1;\\n                try {\\n                    appMeasurement.doPostbacks(appMeasurement.X(_request.responseText))\\n                } catch (d) {}\\n            }\\n        };\\n        _request.onabort = _request.onerror = _request.Ha = function () {\\n            _request.Da();\\n            (appMeasurement.trackOffline || appMeasurement.qa) && appMeasurement.q && appMeasurement.i.unshift(appMeasurement.rb);\\n            appMeasurement.q = 0;\\n            appMeasurement.ma > appMeasurement.O && appMeasurement.Qa(appMeasurement.i);\\n            appMeasurement.ga();\\n            appMeasurement.ua(500)\\n        };\\n        _request.onreadystatechange = function () {\\n            4 == _request.readyState && (200 == _request.status ? _request.va() : _request.Ha())\\n        };\\n        appMeasurement.Pa = appMeasurement.C();\\n        if (1 == d || 2 == d) {\\n            var e = c.indexOf(\\\"?\\\");\\n            f = c.substring(0,\\n                e);\\n            e = c.substring(e + 1);\\n            e = e.replace(/&callback=[a-zA-Z0-9_.\\\\[\\\\]]+/, \\\"\\\");\\n            1 == d ? (_request.open(\\\"POST\\\", f, !0), _request.send(e)) : 2 == d && (_request.open(\\\"POST\\\", f), _request.send(e))\\n        } else if (_request.src = c, 3 == d) {\\n            if (appMeasurement.Na) try {\\n                f.removeChild(appMeasurement.Na)\\n            } catch (g) {}\\n            f.firstChild ? f.insertBefore(_request, f.firstChild) : f.appendChild(_request);\\n            appMeasurement.Na = appMeasurement.B\\n        }\\n        _request.G = setTimeout(function () {\\n            _request.G && (_request.complete ? _request.va() : (appMeasurement.trackOffline && _request.abort && _request.abort(), _request.Ha()))\\n        }, 5E3);\\n        appMeasurement.rb = c;\\n        appMeasurement.B = _window[\\\"s_i_\\\" + appMeasurement.replace(appMeasurement.account, \\\",\\\", \\\"_\\\")] = _request;\\n        if (appMeasurement.useForcedLinkTracking && appMeasurement.K || appMeasurement.A) appMeasurement.forcedLinkTrackingTimeout || (appMeasurement.forcedLinkTrackingTimeout =\\n            250), appMeasurement.ha = setTimeout(appMeasurement.ga, appMeasurement.forcedLinkTrackingTimeout)\\n    };\\n    appMeasurement.sb = function () {\\n        if (appMeasurement.ra() && !(appMeasurement.Oa > appMeasurement.O)) try {\\n            _window.localStorage.removeItem(appMeasurement.pa()), appMeasurement.Oa = appMeasurement.C()\\n        } catch (c) {}\\n    };\\n    appMeasurement.Qa = function (c) {\\n        if (appMeasurement.ra()) {\\n            appMeasurement.Sa();\\n            try {\\n                _window.localStorage.setItem(appMeasurement.pa(), _window.JSON.stringify(c)), appMeasurement.O = appMeasurement.C()\\n            } catch (b) {}\\n        }\\n    };\\n    appMeasurement.Sa = function () {\\n        if (appMeasurement.trackOffline) {\\n            if (!appMeasurement.offlineLimit || 0 >= appMeasurement.offlineLimit) appMeasurement.offlineLimit = 10;\\n            for (; appMeasurement.i.length > appMeasurement.offlineLimit;) appMeasurement.Ga()\\n        }\\n    };\\n    appMeasurement.forceOffline = function () {\\n        appMeasurement.qa = !0\\n    };\\n    appMeasurement.forceOnline = function () {\\n        appMeasurement.qa = !1\\n    };\\n    appMeasurement.pa = function () {\\n        return appMeasurement.offlineFilename +\\n            \\\"-\\\" + appMeasurement.visitorNamespace + appMeasurement.account\\n    };\\n    appMeasurement.C = function () {\\n        return (new Date).getTime()\\n    };\\n    appMeasurement.La = function (a) {\\n        a = a.toLowerCase();\\n        return 0 != a.indexOf(\\\"#\\\") && 0 != a.indexOf(\\\"about:\\\") && 0 != a.indexOf(\\\"opera:\\\") && 0 != a.indexOf(\\\"javascript:\\\") ? !0 : !1\\n    };\\n    appMeasurement.setTagContainer = function (c) {\\n        var b, d, f;\\n        appMeasurement.Kb = c;\\n        for (b = 0; b < appMeasurement._il.length; b++)\\n            if ((d = appMeasurement._il[b]) && \\\"s_l\\\" == d._c && d.tagContainerName == c) {\\n                appMeasurement.R(d);\\n                if (d.lmq)\\n                    for (b = 0; b < d.lmq.length; b++) f = d.lmq[b], appMeasurement.loadModule(f.n);\\n                if (d.ml)\\n                    for (f in d.ml)\\n                        if (appMeasurement[f])\\n                            for (b in c = appMeasurement[f], f = d.ml[f], f) !Object.prototype[b] && (\\\"function\\\" !=\\n                                typeof f[b] || 0 > (\\\"\\\" + f[b]).indexOf(\\\"s_c_il\\\")) && (c[b] = f[b]);\\n                if (d.mmq)\\n                    for (b = 0; b < d.mmq.length; b++) f = d.mmq[b], appMeasurement[f.m] && (c = appMeasurement[f.m], c[f.f] && \\\"function\\\" == typeof c[f.f] && (f.a ? c[f.f].apply(c, f.a) : c[f.f].apply(c)));\\n                if (d.tq)\\n                    for (b = 0; b < d.tq.length; b++) appMeasurement.track(d.tq[b]);\\n                d.s = appMeasurement;\\n                break\\n            }\\n    };\\n    appMeasurement.Util = {\\n        urlEncode: appMeasurement.escape,\\n        urlDecode: appMeasurement.unescape,\\n        cookieRead: appMeasurement.cookieRead,\\n        cookieWrite: appMeasurement.cookieWrite,\\n        getQueryParam: function (c, b, d, f) {\\n            var e, g = \\\"\\\";\\n            b || (b = appMeasurement.pageURL ? appMeasurement.pageURL : _window.location);\\n            d = d ? d : \\\"&\\\";\\n            if (!c || !b) return g;\\n            b = \\\"\\\" + b;\\n            e = b.indexOf(\\\"?\\\");\\n            if (0 >\\n                e) return g;\\n            b = d + b.substring(e + 1) + d;\\n            if (!f || !(0 <= b.indexOf(d + c + d) || 0 <= b.indexOf(d + c + \\\"=\\\" + d))) {\\n                e = b.indexOf(\\\"#\\\");\\n                0 <= e && (b = b.substr(0, e) + d);\\n                e = b.indexOf(d + c + \\\"=\\\");\\n                if (0 > e) return g;\\n                b = b.substring(e + d.length + c.length + 1);\\n                e = b.indexOf(d);\\n                0 <= e && (b = b.substring(0, e));\\n                0 < b.length && (g = appMeasurement.unescape(b));\\n                return g\\n            }\\n        }\\n    };\\n    appMeasurement.H = \\\"supplementalDataID timestamp dynamicVariablePrefix visitorID marketingCloudVisitorID analyticsVisitorID audienceManagerLocationHint authState fid vmk visitorMigrationKey visitorMigrationServer visitorMigrationServerSecure charSet visitorNamespace cookieDomainPeriods fpCookieDomainPeriods cookieLifetime pageName pageURL customerPerspective referrer contextData currencyCode lightProfileID lightStoreForSeconds lightIncrementBy retrieveLightProfiles deleteLightProfiles retrieveLightData\\\".split(\\\" \\\");\\n    appMeasurement.g = appMeasurement.H.concat(\\\"purchaseID variableProvider channel server pageType transactionID campaign state zip events events2 products audienceManagerBlob tnt\\\".split(\\\" \\\"));\\n    appMeasurement.na = \\\"timestamp charSet visitorNamespace cookieDomainPeriods cookieLifetime contextData lightProfileID lightStoreForSeconds lightIncrementBy\\\".split(\\\" \\\");\\n    appMeasurement.P = appMeasurement.na.slice(0);\\n    appMeasurement.Aa = \\\"account allAccounts debugTracking visitor visitorOptedOut trackOffline offlineLimit offlineThrottleDelay offlineFilename usePlugins doPlugins configURL visitorSampling visitorSamplingGroup linkObject clickObject linkURL linkName linkType trackDownloadLinks trackExternalLinks trackClickMap trackInlineStats linkLeaveQueryString linkTrackVars linkTrackEvents linkDownloadFileTypes linkExternalFilters linkInternalFilters useForcedLinkTracking forcedLinkTrackingTimeout trackingServer trackingServerSecure ssl abort mobile dc lightTrackVars maxDelay expectSupplementalData usePostbacks registerPreTrackCallback registerPostTrackCallback AudienceManagement\\\".split(\\\" \\\");\\n    for (m = 0; 250 >= m; m++) 76 > m && (appMeasurement.g.push(\\\"prop\\\" + m), appMeasurement.P.push(\\\"prop\\\" + m)), appMeasurement.g.push(\\\"eVar\\\" + m), appMeasurement.P.push(\\\"eVar\\\" + m), 6 > m && appMeasurement.g.push(\\\"hier\\\" + m), 4 > m && appMeasurement.g.push(\\\"list\\\" + m);\\n    m = \\\"pe pev1 pev2 pev3 latitude longitude resolution colorDepth javascriptVersion javaEnabled cookiesEnabled browserWidth browserHeight connectionType homepage pageURLRest marketingCloudOrgID\\\".split(\\\" \\\");\\n    appMeasurement.g = appMeasurement.g.concat(m);\\n    appMeasurement.H = appMeasurement.H.concat(m);\\n    appMeasurement.ssl = 0 <= _window.location.protocol.toLowerCase().indexOf(\\\"https\\\");\\n    appMeasurement.charSet = \\\"UTF-8\\\";\\n    appMeasurement.contextData = {};\\n    appMeasurement.offlineThrottleDelay =\\n        0;\\n    appMeasurement.offlineFilename = \\\"AppMeasurement.offline\\\";\\n    appMeasurement.Pa = 0;\\n    appMeasurement.ma = 0;\\n    appMeasurement.O = 0;\\n    appMeasurement.Oa = 0;\\n    appMeasurement.linkDownloadFileTypes = \\\"exe,zip,wav,mp3,mov,mpg,avi,wmv,pdf,doc,docx,xls,xlsx,ppt,pptx\\\";\\n    appMeasurement.w = _window;\\n    appMeasurement.d = _window.document;\\n    appMeasurement._document = appMeasurement.d;\\n    try {\\n        if (appMeasurement.Ta = !1, navigator) {\\n            var v = navigator.userAgent;\\n            if (\\\"Microsoft Internet Explorer\\\" == navigator.appName || 0 <= v.indexOf(\\\"MSIE \\\") || 0 <= v.indexOf(\\\"Trident/\\\") && 0 <= v.indexOf(\\\"Windows NT 6\\\")) appMeasurement.Ta = !0\\n        }\\n    } catch (x) {}\\n    appMeasurement.ga = function () {\\n        appMeasurement.ha && (_window.clearTimeout(appMeasurement.ha), appMeasurement.ha = p);\\n        appMeasurement.l && appMeasurement.K && appMeasurement.l.dispatchEvent(appMeasurement.K);\\n        appMeasurement.A && (\\\"function\\\" == typeof appMeasurement.A ? appMeasurement.A() :\\n            appMeasurement.l && appMeasurement.l.href && (appMeasurement._document.location = appMeasurement.l.href));\\n        appMeasurement.l = appMeasurement.K = appMeasurement.A = 0\\n    };\\n    appMeasurement.Ra = function () {\\n        appMeasurement.b = appMeasurement._document.body;\\n        appMeasurement._body = appMeasurement.b;\\n        appMeasurement._body ? (appMeasurement.v = function (c) {\\n            var b, d, f, e, g;\\n            if (!(appMeasurement.d && appMeasurement._document.getElementById(\\\"cppXYctnr\\\") || c && c[\\\"s_fe_\\\" + appMeasurement._in])) {\\n                if (appMeasurement.Ca)\\n                    if (appMeasurement.useForcedLinkTracking) appMeasurement._body.removeEventListener(\\\"click\\\", appMeasurement.v, !1);\\n                    else {\\n                        appMeasurement._body.removeEventListener(\\\"click\\\", appMeasurement.v, !0);\\n                        appMeasurement.Ca = appMeasurement.useForcedLinkTracking = 0;\\n                        return\\n                    }\\n                else appMeasurement.useForcedLinkTracking = 0;\\n                appMeasurement.clickObject = c.srcElement ? c.srcElement : c.target;\\n                try {\\n                    if (!appMeasurement.clickObject || appMeasurement.N && appMeasurement.N == appMeasurement.clickObject || !(appMeasurement.clickObject.tagName || appMeasurement.clickObject.parentElement ||\\n                            appMeasurement.clickObject.parentNode)) appMeasurement.clickObject = 0;\\n                    else {\\n                        var h = appMeasurement.N = appMeasurement.clickObject;\\n                        appMeasurement.la && (clearTimeout(appMeasurement.la), appMeasurement.la = 0);\\n                        appMeasurement.la = setTimeout(function () {\\n                            appMeasurement.N == h && (appMeasurement.N = 0)\\n                        }, 1E4);\\n                        f = appMeasurement.Ja();\\n                        appMeasurement.track();\\n                        if (f < appMeasurement.Ja() && appMeasurement.useForcedLinkTracking && c.target) {\\n                            for (e = c.target; e && e != appMeasurement._body && \\\"A\\\" != e.tagName.toUpperCase() && \\\"AREA\\\" != e.tagName.toUpperCase();) e = e.parentNode;\\n                            if (e && (g = e.href, appMeasurement.La(g) || (g = 0), d = e.target, c.target.dispatchEvent && g && (!d || \\\"_self\\\" == d || \\\"_top\\\" == d || \\\"_parent\\\" == d || _window.name && d == _window.name))) {\\n                                try {\\n                                    b = appMeasurement._document.createEvent(\\\"MouseEvents\\\")\\n                                } catch (l) {\\n                                    b =\\n                                        new _window.MouseEvent\\n                                }\\n                                if (b) {\\n                                    try {\\n                                        b.initMouseEvent(\\\"click\\\", c.bubbles, c.cancelable, c.view, c.detail, c.screenX, c.screenY, c.clientX, c.clientY, c.ctrlKey, c.altKey, c.shiftKey, c.metaKey, c.button, c.relatedTarget)\\n                                    } catch (m) {\\n                                        b = 0\\n                                    }\\n                                    b && (b[\\\"s_fe_\\\" + appMeasurement._in] = b.s_fe = 1, c.stopPropagation(), c.stopImmediatePropagation && c.stopImmediatePropagation(), c.preventDefault(), appMeasurement.l = c.target, appMeasurement.K = b)\\n                                }\\n                            }\\n                        }\\n                    }\\n                } catch (n) {\\n                    appMeasurement.clickObject = 0\\n                }\\n            }\\n        }, appMeasurement._body && appMeasurement._body.attachEvent ? appMeasurement._body.attachEvent(\\\"onclick\\\", appMeasurement.v) : appMeasurement._body && appMeasurement._body.addEventListener && (navigator && (0 <= navigator.userAgent.indexOf(\\\"WebKit\\\") &&\\n            appMeasurement._document.createEvent || 0 <= navigator.userAgent.indexOf(\\\"Firefox/2\\\") && _window.MouseEvent) && (appMeasurement.Ca = 1, appMeasurement.useForcedLinkTracking = 1, appMeasurement._body.addEventListener(\\\"click\\\", appMeasurement.v, !0)), appMeasurement._body.addEventListener(\\\"click\\\", appMeasurement.v, !1))) : setTimeout(appMeasurement.Ra, 30)\\n    };\\n    appMeasurement.Ra();\\n    r ? appMeasurement.setAccount(r) : appMeasurement.F(\\\"Error, missing Report Suite ID in AppMeasurement initialization\\\");\\n    appMeasurement.loadModule(\\\"ActivityMap\\\")\\n}\\n\\n// GetInstance(RSID)\\nfunction s_gi(rsid) {\\n    var a, k = window.s_c_il,\\n        p, n, m = rsid.split(\\\",\\\"),\\n        s, u, t = 0;\\n    if (k)\\n        for (p = 0; !t && p < k.length;) {\\n            a = k[p];\\n            if (\\\"s_c\\\" == a._c && (a.account || a.oun))\\n                if (a.account && a.account == rsid) t = 1;\\n                else\\n                    for (n = a.account ? a.account : a.oun, n = a.allAccounts ? a.allAccounts : n.split(\\\",\\\"), s = 0; s < m.length; s++)\\n                        for (u = 0; u < n.length; u++) m[s] == n[u] && (t = 1);\\n            p++\\n        }\\n    t || (a = new AppMeasurement(rsid));\\n    return a\\n}\\nAppMeasurement.getInstance = s_gi;\\nwindow.s_objectID || (window.s_objectID = 0);\\n\\nfunction s_pgicq() {\\n    var r = window,\\n        a = r.s_giq,\\n        k, p, n;\\n    if (a)\\n        for (k = 0; k < a.length; k++) p = a[k], n = s_gi(p.oun), n.setAccount(p.un), n.setTagContainer(p.tagContainerName);\\n    r.s_giq = 0\\n}\\ns_pgicq();\\n\\ntry {\\n    exports.AppMeasurement = AppMeasurement;\\n} catch (Error) {\\n    console.log(\\\"not node env\\\");\\n}\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 18 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************************************!*\
  !*** ../~/script-loader!./integrations/adobe/lib/app_measurement-2.3.0.unmin.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! !../~/script-loader/addScript.js */ 0)(__webpack_require__(/*! !../~/raw-loader!./integrations/adobe/lib/app_measurement-2.3.0.unmin.js */ 17))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbnRlZ3JhdGlvbnMvYWRvYmUvbGliL2FwcF9tZWFzdXJlbWVudC0yLjMuMC51bm1pbi5qcz82YjhiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShcIiEhL3ZpZHlhcmQvR3VhcmR0b3dlci9ub2RlX21vZHVsZXMvc2NyaXB0LWxvYWRlci9hZGRTY3JpcHQuanNcIikocmVxdWlyZShcIiEhL3ZpZHlhcmQvR3VhcmR0b3dlci9ub2RlX21vZHVsZXMvcmF3LWxvYWRlci9pbmRleC5qcyEvdmlkeWFyZC9HdWFyZHRvd2VyL2NsaWVudC9pbnRlZ3JhdGlvbnMvYWRvYmUvbGliL2FwcF9tZWFzdXJlbWVudC0yLjMuMC51bm1pbi5qc1wiKSlcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3NjcmlwdC1sb2FkZXIhLi9pbnRlZ3JhdGlvbnMvYWRvYmUvbGliL2FwcF9tZWFzdXJlbWVudC0yLjMuMC51bm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);